@model List<Mateus.Model.BussinesLogic.Views.ToDoListModel.ToDoListView>
           
@using PITFramework.Security;
@using PITFramework.Support.Grid;

@{ string[] userRoles = SecurityHelper.GetUserRolesFromCookie(); }

<div id="controls-bar">
    @Html.Partial("~/Views/Shared/Partial/Breadcrumb.cshtml")
    <div>   
        @if (userRoles.Contains("add"))
        { 
            @Html.ActionLink("Nova obaveza", "Add", null, new { @class = "button new" })
        }
    </div>
</div>

<div id="content">

    @using (Html.BeginForm("Index", "ToDoList", FormMethod.Get))
    {
        <div id="grid-controls">
            <div class="grid-3 text-left">
                <div class="filter-text">Molimo odaberite filter:</div> 
                <div class="inputs">
                    @Html.DropDownList("Status", ViewBag.FinishedStatuses as SelectList, new { @class = "w45" })<br />
                    @Html.TextBox("dateFrom", (string)ViewBag.dateFrom, new { placeholder = "Početak izvršenja", @class = "w45 datepicker" })
                    @Html.TextBox("dateTo", (string)ViewBag.dateTo, new { placeholder = "Kraj izvršenja", @class = "w45 datepicker margin-left-10" })
                </div>
            </div>
            <div class="grid-4 text-center">
                @Html.TextBox("searchString", Request.QueryString["searchString"], new { placeholder = "Upišite pojam za pretragu", @class = "w40" })
                <input type="submit" value="Pretraži" class="button search" />
            </div>
            <div class="grid-3 text-right">
                <a href="#" class="button print icon"></a>
            </div>
            <div class="clear"></div>
        </div>
    }

    <div class="grid-10">
        <div class="grid-holder">
            <table class="grid">
                @if(Model.Count() > 0) {
                    <tr>
                        <th class="w2">#</th>
                        <th class="w2">@MvcHtmlString.Create(LinkHelper.GetSortLink("ID", "ToDoListPK"))</th>
                        <th class="w26 left">@MvcHtmlString.Create(LinkHelper.GetSortLink("Naziv", "Name"))</th>
                        <th class="w10 left">@MvcHtmlString.Create(LinkHelper.GetSortLink("Rok", "Deadline"))</th>
                        <th class="w10">@MvcHtmlString.Create(LinkHelper.GetSortLink("Izvršeno", "Finished"))</th>
                        <th class="w10 left">@MvcHtmlString.Create(LinkHelper.GetSortLink("Korisnik", "UserUsername"))</th>
                        <th class="w10 left">@MvcHtmlString.Create(LinkHelper.GetSortLink("Datum unosa", "Date"))</th>
                        <th class="w10 left">@MvcHtmlString.Create(LinkHelper.GetSortLink("Sistemski datum unosa", "CreationDate"))</th>
                        <th class="w10">@MvcHtmlString.Create(LinkHelper.GetSortLink("Izvršeni posao", "WorkDoneCount"))</th>
                        @if (userRoles.Contains("edit") || userRoles.Contains("delete"))
                        { 
                            <th class="w10 no-print">Operacije</th>
                        }
                    </tr>

                    int i = 1;    
                
                    foreach (var item in Model)
                    {
                        <tr class="@if(i%2 != 0){ @MvcHtmlString.Create("odd"); } @if(item.Deadline < DateTime.Now) { @MvcHtmlString.Create(" past-deadline"); }">
                            <td>@i.ToString()</td>
                            <td class="@LinkHelper.getIsSorted("ToDoListPK")">@item.ToDoListPK.ToString()</td>
                            <td class="left @LinkHelper.getIsSorted("Name")">
                                @if (userRoles.Contains("edit"))
                                {
                                    if (!String.IsNullOrWhiteSpace(@item.Name))
                                    { 
                                        @Html.ActionLink(@item.Name, "Edit", new { toDoListPK = @item.ToDoListPK })
                                    }
                                }
                                else
                                {
                                    if (!String.IsNullOrWhiteSpace(@item.Name))
                                    { 
                                        @item.Name
                                    }
                                }
                            </td>
                            <td class="left @LinkHelper.getIsSorted("Deadline")">@item.Deadline.ToString()</td>
                            <td class="@LinkHelper.getIsSorted("Finished")">
                                @if (userRoles.Contains("edit"))
                                {
                                    if (@item.Finished != null && @item.Finished == true)
                                    { 
                                        @Html.ActionLink("DA", "Unfinish", new { toDoListPK = @item.ToDoListPK}, new { @class = "yes" })
                                    }
                                    else
                                    {
                                        @Html.ActionLink("NE", "Finish", new { toDoListPK = @item.ToDoListPK}, new { @class = "no" })
                                    }
                                }
                                else
                                {
                                    if (@item.Finished != null && @item.Finished == true)
                                    { 
                                        <span class="yes">DA</span>
                                    }
                                    else
                                    {
                                        <span class="no">NE</span>
                                    }
                                }
                            </td>
                            <td class="left @LinkHelper.getIsSorted("UserUsername")">@item.UserUsername</td>
                            <td class="left @LinkHelper.getIsSorted("Date")">@item.Date.Value.ToString("dd.MM.yyyy.")</td>
                            <td class="left @LinkHelper.getIsSorted("CreationDate")">@item.CreationDate.Value.ToString("dd.MM.yyyy. HH:mm:ss")</td>
                            <td class="@LinkHelper.getIsSorted("WorkDoneCount")">
                                @Html.ActionLink(@item.WorkDoneCreatedWithToDoCount.ToString(), "Index", "WorkDone", new { toDoListFK = @item.ToDoListPK, createdWithToDo = true }, null)
                                @("|") 
                                @Html.ActionLink(@item.WorkDoneCount.ToString(), "Index", "WorkDone", new { toDoListFK = @item.ToDoListPK }, null)
                                @if (userRoles.Contains("add"))
                                {   
                                    @: | 
                                    @Html.ActionLink("Dodaj", "Add", "WorkDone", new { toDoListFK = @item.ToDoListPK }, null)
                                }
                            </td>
                            @if (userRoles.Contains("edit") || userRoles.Contains("delete"))
                            {  
                                <td class="no-print">
                                    @if (userRoles.Contains("add"))
                                    {
                                        @Html.ActionLink(" ", "Add", new { toDoListPK = @item.ToDoListPK}, new { @class = "save-as" })
                                    }                                    
                                    @if (userRoles.Contains("edit"))
                                    {
                                        @Html.ActionLink(" ", "Edit", new { toDoListPK = @item.ToDoListPK}, new { @class = "edit" })
                                    }
                                    @if (userRoles.Contains("delete"))
                                    {
                                        @Html.ActionLink(" ", "Delete", new { toDoListPK = @item.ToDoListPK}, new { @class = "delete" })
                                    }
                                </td>
                            }
                        </tr>
                        i++;
                    }

                } 
                else 
                {
                    <tr>
                        <td class="no-records">Nema zapisa</td>
                    </tr>
                }  
    
            </table>
            @Html.Partial("~/Views/Shared/Partial/Pager.cshtml")
        </div>
    </div>
    <div class="clear"></div>
</div>