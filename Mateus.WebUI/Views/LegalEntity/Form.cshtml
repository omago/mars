@model Mateus.Model.BussinesLogic.Views.LegalEntityModel.LegalEntityView

<div id="controls-bar">
    @Html.Partial("~/Views/Shared/Partial/Breadcrumb.cshtml")
    <div>
        @Html.ActionLink(" ", "Index", Session["ControllerReferrer"].ToString(), null, new { @class = "button back padding-right-0" })
        <a href="#" class="button refresh padding-right-0 margin-right-15"></a>       
        <input type="submit" class="button save" value="Spremi" />
    </div>
</div>

<div id="content">

    <div class="grid-5">
        <div class="form margin-top-20">

            <h2>Osnovne informacije</h2>
                
            <fieldset>
                @Html.HiddenFor(x => x.Company)

                <div class="row">
                    <label for="Name">Naziv:<b>*</b><span>molimo unesite naziv</span></label>
                    <div class="input">@Html.TextBoxFor(legalEntity => legalEntity.Name, new { @class = "w100" })</div>
                    <div class="error">@Html.ValidationMessageFor(legalEntity => legalEntity.Name)</div>
                    <div class="clear"></div>
                </div>

                <div class="row company @if(Model.Company == null || Model.Company != true){ @("display-none") }">
                    <label for="ShortName">Kratki naziv (3 znaka):<b>*</b><span>molimo unesite kratki naziv</span></label>
                    <div class="input">@Html.TextBoxFor(legalEntity => legalEntity.ShortName, new { @class = "w10", maxlength = "3" })</div>
                    <div class="error">@Html.ValidationMessageFor(legalEntity => legalEntity.ShortName)</div>
                    <div class="clear"></div>
                </div>

                <div class="row">
                    <label for="OIB">OIB:<b>*</b><span>molimo unesite OIB</span></label>
                    <div class="input">@Html.TextBoxFor(legalEntity => legalEntity.OIB, new { @class = "w50", maxlength = "11" })</div>
                    <div class="error">@Html.ValidationMessageFor(legalEntity => legalEntity.OIB)</div>
                    <div class="clear"></div>
                </div>

                <div class="row">
                    <label for="MB">MB:<span>molimo unesite MB</span></label>
                    <div class="input">@Html.TextBoxFor(legalEntity => legalEntity.MB, new { @class = "w50", maxlength = "8" })</div>
                    <div class="error">@Html.ValidationMessageFor(legalEntity => legalEntity.MB)</div>
                    <div class="clear"></div>
                </div>

                <div class="row">
                    <label for="MBS">MBS:<b>*</b><span>molimo unesite MBS</span></label>
                    <div class="input">@Html.TextBoxFor(legalEntity => legalEntity.MBS, new { @class = "w50", maxlength = "9" })</div>
                    <div class="error">@Html.ValidationMessageFor(legalEntity => legalEntity.MBS)</div>
                    <div class="clear"></div>
                </div>

                <div class="row company @if(Model.Company == null || Model.Company != true){ @("display-none") }">
                    <label for="FormFK">Oblik:<b>*</b><span>molimo odaberite oblik</span></label>
                    <div class="input">@Html.DropDownListFor(legalEntity => legalEntity.FormFK, Model.Forms, "Odaberite oblik", new { @class = "w100" })</div>
                    <div class="error">@Html.ValidationMessageFor(legalEntity => legalEntity.FormFK)</div>
                    <div class="clear"></div>
                </div>

                <div class="row">
                    <label for="Active">Aktivan:<span>tvrka je aktivna</span></label>
                    <div class="input">@Html.CheckBox("Active")</div>
                    <div class="clear"></div>
                </div>
            </fieldset>
        </div>
    </div>   

    <div class="clear"></div>

</div>  


<script type="text/javascript">



    $('#PostalOfficeFK').change(function () {

        var placesSelect            = $('#PlaceFK');
        var selectedPostalOffice    = $(this).val();

        if (selectedPostalOffice != null && selectedPostalOffice != '') {

            $.getJSON('@Url.Action("GetPlacesByPostalOffice", "Ajax")',
            { postalOffice: selectedPostalOffice },

            function (places) {
                placesSelect.empty();
                placesSelect.append($('<option/>', {
                    value: '',
                    text: 'Odaberite mjesto' 
                }));
                $.each(places, function (key, place) {
                    placesSelect.append($('<option/>', {
                        value: place.value,
                        text: place.text
                    }));
                });
            });

        } else {
            placesSelect.empty();
            placesSelect.append($('<option/>', {
                value: '',
                text: '----' 
            }));
        }
    }); 


    $('#RegionalOfficeFK').change(function () {

        var substationsSelect       = $('#SubstationFK');
        var referentsSelect         = $('#ReferentFK');
        var selectedRegionalOffice  = $(this).val();

        if (selectedRegionalOffice != null && selectedRegionalOffice != '') {

            $.getJSON('@Url.Action("GetSubstationsByRegionalOffice", "Ajax")',
            { regionalOffice: selectedRegionalOffice },

            function (substations) {
                substationsSelect.empty();
                substationsSelect.append($('<option/>', {
                    value: '',
                    text: 'Odaberite ispostavu' 
                }));
                $.each(substations, function (key, substation) {
                    substationsSelect.append($('<option/>', {
                        value: substation.value,
                        text: substation.text
                    }));
                });
            });

        } else {
            substationsSelect.empty();
            substationsSelect.append($('<option/>', {
                value: '',
                text: '----' 
            }));

            referentsSelect.empty();
            referentsSelect.append($('<option/>', {
                value: '',
                text: '----' 
            }));
        }
    });


    $('#SubstationFK').change(function () {

        var referentsSelect     = $('#ReferentFK');
        var selectedSubstation  = $(this).val();

        if (selectedSubstation != null && selectedSubstation != '') {

            $.getJSON('@Url.Action("GetReferentsBySubstation", "Ajax")',
            { substation: selectedSubstation },

            function (referents) {
                referentsSelect.empty();
                referentsSelect.append($('<option/>', {
                    value: '',
                    text: 'Odaberite referenta' 
                }));
                $.each(referents, function (key, referent) {
                    referentsSelect.append($('<option/>', {
                        value: referent.value,
                        text: referent.text
                    }));
                });
            });

        } else {
            referentsSelect.empty();
            referentsSelect.append($('<option/>', {
                value: '',
                text: '----' 
            }));
        }
    });
</script>