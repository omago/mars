@using Mateus.Model.BussinesLogic.Views.LegalEntityLegalRepresentativeAuditModel;

@{ 
    if(ViewBag.legalEntityLegalRepresentativesHistory != null)
    {
        if(ViewBag.legalEntityLegalRepresentativesHistory is List<List<LegalEntityLegalRepresentativeAuditView>>)    
        {
            List<List<LegalEntityLegalRepresentativeAuditView>>models = (List<List<LegalEntityLegalRepresentativeAuditView>>)ViewBag.legalEntityLegalRepresentativesHistory;
            int count = models.Count; 

            if(count > 0) 
            {
        
                foreach(List<LegalEntityLegalRepresentativeAuditView> model in models)
                {
                    int countChanges = model.Count;
                    int cellWidth = (int) Math.Floor((double)84/countChanges);
                        
                    <table class="grid">
                        <tr><th class="w16"></th>@for(int i = 0; i < countChanges; i++) { <th class="w@(cellWidth) left"><span>@(model[i].ChangeDate.Value.ToString("dd.MM.yyyy."))</span></th> }</tr>
                
                        <tr><td class="right"><b>Pravni zastupnik</b></td>@for(int i = 0; i < countChanges; i++) { if(model[i].Deleted == true) { <td class="left deleted-entry" rowspan="2">Zapis obrisan</td> } else { <td class="left">@(model[i].LegalRepresentativeName)</td> } }</tr>
                        <tr><td class="right"><b>Način zastupanja</b></td>@for(int i = 0; i < countChanges; i++) { if(model[i].Deleted != true) { <td class="left">@(model[i].WayOfRepresentationName)</td> } }</tr>
                    </table>
                }
            }
            else
            {
                <table class="grid">
                    <tr>
                        <td class="no-records">Nema zapisa</td>
                    </tr>
                </table>
            }
        } 
        else if(ViewBag.legalEntityLegalRepresentativesHistory is List<LegalEntityLegalRepresentativeAuditView>)
        {
            List<LegalEntityLegalRepresentativeAuditView>model = (List<LegalEntityLegalRepresentativeAuditView>)ViewBag.legalEntityLegalRepresentativesHistory;
            int countChanges = model.Count;    
            int cellWidth = (int) Math.Floor((double)84/countChanges);
            
            <table class="grid">

                @if(countChanges > 0) 
                {
                    <tr><th class="w16"></th>@for(int i = 0; i < countChanges; i++) { <th class="w@(cellWidth) left"><span>@(model[i].ChangeDate.Value.ToString("dd.MM.yyyy."))</span></th> }</tr>
                
                    <tr><td class="right"><b>Pravni zastupnik</b></td>@for(int i = 0; i < countChanges; i++) { if(model[i].Deleted == true) { <td class="left deleted-entry" rowspan="2">Zapis obrisan</td> } else { <td class="left">@(model[i].LegalRepresentativeName)</td> } }</tr>
                    <tr><td class="right"><b>Način zastupanja</b></td>@for(int i = 0; i < countChanges; i++) { if(model[i].Deleted != true) { <td class="left">@(model[i].WayOfRepresentationName)</td> } }</tr>
                }
                else
                {
                    <tr>
                        <td class="no-records">Nema zapisa</td>
                    </tr>
                }

            </table>
        }
        
    }
    else
    {
        <table class="grid">
            <tr>
                <td class="no-records">Nema zapisa</td>
            </tr>
        </table>
    }
}