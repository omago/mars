@model Mateus.Model.BussinesLogic.Views.LegalEntityBranchModel.LegalEntityBranchView
           
@using PITFramework.Security;

@{
    string[] userRoles = SecurityHelper.GetUserRolesFromCookie();
}

<div id="controls-bar">
    @Html.Partial("~/Views/Shared/Partial/Breadcrumb.cshtml")
    <div>
        @Html.ActionLink(" ", "Index", Session["ControllerReferrer"].ToString(), null, new { @class = "button back padding-right-0" })
        <a href="#" class="button refresh padding-right-0 margin-right-15"></a>       
        <input type="submit" class="button save" value="Spremi" />
    </div>
</div>

<div id="content">

    <div class="grid-5">
        <div class="form">

            <h2>Osnovne informacije</h2>
                
            <fieldset>
                <div class="row">
                    <label for="Name">Naziv:<b>*</b><span>molimo unesite naziv</span></label>
                    <div class="input">@Html.TextBoxFor(branch => branch.Name, new { @class = "w100" })</div>
                    <div class="error">@Html.ValidationMessageFor(branch => branch.Name)</div>
                    <div class="clear"></div>
                </div>

                <div class="row">
                    <label for="CountryFK">Tvrtka:<b>*</b><span>molimo odaberite tvrtku</span></label>
                    <div class="input">
                        @Html.TextBoxFor(branch => branch.LegalEntityName, new { @class = "w100 autocomplete-with-hidden-field", data_autocomplete_url = Url.Action("AutocompleteLegalEntitiesWithOIB", "Ajax", null), autocomplete = "off"})
                        @Html.HiddenFor(branch => branch.LegalEntityFK)
                    </div>
                    <div class="error">@Html.ValidationMessageFor(branch => branch.LegalEntityFK)</div>
                    <div class="clear"></div>
                </div>

                <div class="row">
                    <label for="CountryFK">Država:<b>*</b><span>molimo odaberite državu</span></label>
                    <div class="input">@Html.DropDownListFor(branch => branch.CountryFK, Model.Countries, "Odaberite državu", new { @class = "w100" })</div>
                    <div class="error">@Html.ValidationMessageFor(branch => branch.CountryFK)</div>
                    <div class="clear"></div>
                </div>

                <div class="row">
                    <label for="CountyFK">Županija:<b>*</b><span>Molimo odaberite županiju</span></label>
                    <div class="input">@Html.DropDownListFor(branch => branch.CountyFK, Model.Counties, "Odaberite županiju", new { @class = "w100" })</div>
                    <div class="error">@Html.ValidationMessageFor(branch => branch.CountyFK)</div> 
                    <div class="clear"></div>
                </div>

                <div class="row">
                    <label for="CityCommunityFK">Grad/općina:<b>*</b><span>Molimo odaberite grad/općinu</span></label>
                    <div class="input">@Html.DropDownListFor(branch => branch.CityCommunityFK, Model.CitiesCommunities, "----", new { @class = "w100" })</div>
                    <div class="error">@Html.ValidationMessageFor(branch => branch.CityCommunityFK)</div> 
                    <div class="clear"></div>
                </div>

                <div class="row">
                    <label for="PostalOfficeFK">Poštanski ured:<b>*</b><span>Molimo odaberite poštanski ured</span></label>
                    <div class="input">@Html.DropDownListFor(branch => branch.PostalOfficeFK, Model.PostalOffices, "----", new { @class = "w100" })</div>
                    <div class="error">@Html.ValidationMessageFor(branch => branch.PostalOfficeFK)</div> 
                    <div class="clear"></div>
                </div>

                <div class="row">
                    <label for="PlaceFK">Naselje:<b>*</b><span>Molimo odaberite naselje</span></label>
                    <div class="input">@Html.DropDownListFor(branch => branch.PlaceFK, Model.Places, "----", new { @class = "w100" })</div>
                    <div class="error">@Html.ValidationMessageFor(branch => branch.PlaceFK)</div> 
                    <div class="clear"></div>
                </div>

                <div class="row">
                    <label for="StreetName">Ulica i broj:<b>*</b><span>molimo unesite ulicu i broj</span></label>
                    <div class="input">@Html.TextBoxFor(branch => branch.StreetName, new { @class = "w100" })</div>
                    <div class="error">@Html.ValidationMessageFor(branch => branch.StreetName)</div>
                    <div class="clear"></div>
                </div>

            </fieldset>
        </div>

    </div>   

    <div class="grid-5">

        <div class="form">

            <h2>Podaci o unosu</h2>

            <fieldset>

                <div class="row">
                    <label for="ChangeDate">Datum unosa:<b>*</b><span>molimo unesite datum unosa</span></label>
                    <div class="input">
                        @if(Model.ChangeDate != null)
                        {
                            @Html.TextBoxFor(branch => branch.ChangeDate, new { @class = "w50 datepicker", @Value = Model.ChangeDate.Value.ToString("dd.MM.yyyy.") })
                        } 
                        else
                        {
                            @Html.TextBoxFor(branch => branch.ChangeDate, new { @class = "w50 datepicker" })
                        } 
                    </div>
                    <div class="error">@Html.ValidationMessageFor(branch => branch.ChangeDate)</div> 
                    <div class="clear"></div>
                </div>

            </fieldset>

        </div>

        @if (userRoles.Contains("delete"))
        {
            <div class="form margin-top-20">

                <h2>Brisanje</h2>

                <fieldset>

                    <div class="row">
                        <label for="Deleted">Obrisano:<span>obriši zapis</span></label>
                        <div class="input">@Html.CheckBox("Deleted")</div>
                        <div class="clear"></div>
                    </div>

                </fieldset>

            </div>
        }
        
        <div class="form margin-top-20">

            <h2>Kontakt podaci</h2>

            <fieldset>

                <div class="row">
                    <label for="Phone">Telefon:<span>molimo unesite telefon</span></label>
                    <div class="input">@Html.TextBoxFor(branch => branch.Phone, new { @class = "w70"})</div>
                    <div class="error">@Html.ValidationMessageFor(branch => branch.Phone)</div>
                    <div class="clear"></div>
                </div>

                <div class="row">
                    <label for="Fax">Fax:<span>molimo unesite fax</span></label>
                    <div class="input">@Html.TextBoxFor(branch => branch.Fax, new { @class = "w70"})</div>
                    <div class="error">@Html.ValidationMessageFor(branch => branch.Fax)</div>
                    <div class="clear"></div>
                </div>

                <div class="row">
                    <label for="Mobile">Mobitel:<span>molimo unesite mobitel</span></label>
                    <div class="input">@Html.TextBoxFor(branch => branch.Mobile, new { @class = "w70"})</div>
                    <div class="error">@Html.ValidationMessageFor(branch => branch.Mobile)</div>
                    <div class="clear"></div>
                </div>

                <div class="row">
                    <label for="EMail">E-mail:<span>molimo unesite E-mail</span></label>
                    <div class="input">@Html.TextBoxFor(branch => branch.EMail, new { @class = "w70"})</div>
                    <div class="error">@Html.ValidationMessageFor(branch => branch.EMail)</div>
                    <div class="clear"></div>
                </div>

            </fieldset>

        </div>

    </div>

    <div class="clear"></div>

</div>  


<script type="text/javascript">

    $('#CountryFK').change(function () {

        var countiesSelect      = $('#CountyFK');
        var selectedCountry     = $(this).val();

        if (selectedCountry != null && selectedCountry != '') {

            $.getJSON('@Url.Action("GetCountiesByCountry", "Ajax")',
            { country: selectedCountry },

            function (counties) {
                countiesSelect.empty();
                countiesSelect.append($('<option/>', {
                    value: '',
                    text: 'Odaberite županiju' 
                }));
                $.each(counties, function (key, county) {
                    countiesSelect.append($('<option/>', {
                        value: county.value,
                        text: county.text
                    }));
                });
            });

        } else {
            countiesSelect.empty();
            countiesSelect.append($('<option/>', {
                value: '',
                text: '----' 
            }));
        }

        EmptySelectBox("CityCommunityFK");
        EmptySelectBox("PostalOfficeFK");
        EmptySelectBox("PlaceFK");

    }); 


    $('#CountyFK').change(function () {

        var citiesCommunitiesSelect        = $('#CityCommunityFK');
        var postalOfficesSelect = $('#PostalOfficeFK');
        var selectedCounty      = $(this).val();

        if (selectedCounty != null && selectedCounty != '') {

            $.getJSON('@Url.Action("GetCitiesCommunitiesByCounty", "Ajax")',
            { county: selectedCounty },

            function (citiesCommunities) {
                citiesCommunitiesSelect.empty();
                citiesCommunitiesSelect.append($('<option/>', {
                    value: '',
                    text: 'Odaberite grad/općinu' 
                }));
                $.each(citiesCommunities, function (key, city) {
                    citiesCommunitiesSelect.append($('<option/>', {
                        value: city.value,
                        text: city.text
                    }));
                });
            });

            $.getJSON('@Url.Action("GetPostalOfficesByCounty", "Ajax")',
            { county: selectedCounty },

            function (postalOffices) {
                postalOfficesSelect.empty();
                postalOfficesSelect.append($('<option/>', {
                    value: '',
                    text: 'Odaberite poštanski ured' 
                }));
                $.each(postalOffices, function (key, postalOffice) {
                    postalOfficesSelect.append($('<option/>', {
                        value: postalOffice.value,
                        text: postalOffice.text
                    }));
                });
            });

        } else {

            postalOfficesSelect.empty();
            postalOfficesSelect.append($('<option/>', {
                value: '',
                text: '----' 
            }));

            citiesCommunitiesSelect.empty();
            citiesCommunitiesSelect.append($('<option/>', {
                value: '',
                text: '----' 
            }));

        }

        EmptySelectBox("PlaceFK");
    }); 


    $('#PostalOfficeFK').change(function () {

        var placesSelect            = $('#PlaceFK');
        var selectedPostalOffice    = $(this).val();

        if (selectedPostalOffice != null && selectedPostalOffice != '') {

            $.getJSON('@Url.Action("GetPlacesByPostalOffice", "Ajax")',
            { postalOffice: selectedPostalOffice },

            function (places) {
                placesSelect.empty();
                placesSelect.append($('<option/>', {
                    value: '',
                    text: 'Odaberite mjesto' 
                }));
                $.each(places, function (key, place) {
                    placesSelect.append($('<option/>', {
                        value: place.value,
                        text: place.text
                    }));
                });
            });

        } else {
            placesSelect.empty();
            placesSelect.append($('<option/>', {
                value: '',
                text: '----' 
            }));
        }
    }); 


</script>