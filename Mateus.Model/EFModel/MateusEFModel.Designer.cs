//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_AssessmentAnswers_AssessmentQuestions", "AssessmentQuestions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.AssessmentQuestion), "AssessmentAnswers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.AssessmentAnswers), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_AssessmentGroups_AssessmentTypes", "AssessmentTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.AssessmentType), "AssessmentGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.AssessmentGroup), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_AssessmentQuestions_AssessmentGroups", "AssessmentGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.AssessmentGroup), "AssessmentQuestions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.AssessmentQuestion), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_WorkDoneAttachments_WorkDoneAttachments", "Attachments", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Attachment), "WorkDoneAttachments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.WorkDoneAttachment), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_AuditingDetails_AuditingMaster", "AuditingMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.AuditingMaster), "AuditingDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.AuditingDetail), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_Counties_Countries", "Countries", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Country), "Counties", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.County), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_PostalOffices_Counties", "Counties", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.County), "PostalOffices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.PostalOffice), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_Places_PostalOffices", "PostalOffices", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.PostalOffice), "Places", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.Place), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_Substations_RegionalOffices", "RegionalOffices", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.RegionalOffice), "Substations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.Substation), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_UsersInRoles_Roles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mateus.Model.EFModel.Role), "UsersInRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.UserInRole), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_Actions_Controllers", "SystemControllers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.SystemController), "SystemActions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.SystemAction), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_WorkSubtypes_WorkTypes", "WorkTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.WorkType), "WorkSubtypes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.WorkSubtype), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_LegalEntityBanks_Banks", "Bank", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Bank), "LegalEntityBanks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntityBank), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_CompanyLegalRepresentative_WaysOfRepresentation", "WayOfRepresentation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.WayOfRepresentation), "LegalEntityLegalRepresentatives", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntityLegalRepresentative), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_WorkDones_ServiceTypes", "ServiceType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.ServiceType), "WorkDones", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.WorkDone), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_ToDoLists_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.User), "ToDoList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.ToDoList), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_WorkDones_ToDoLists", "ToDoList", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.ToDoList), "WorkDones", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.WorkDone), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_UserActivities_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.User), "UserActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.UserActivity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_WorkDones_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.User), "WorkDones", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.WorkDone), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_WorkDones_WorkSubtypes", "WorkSubtype", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.WorkSubtype), "WorkDones", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.WorkDone), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_WorkDones_WorkTypes", "WorkType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.WorkType), "WorkDones", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.WorkDone), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_AssessmentAnswers_Assessments", "Assessment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Assessment), "AssessmentAnswers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.AssessmentAnswers), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_Assessments_AssessmentTypes", "AssessmentType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.AssessmentType), "Assessment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.Assessment), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_Assessments_Risks", "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Risk), "Assessment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.Assessment), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_Cities_Counties1", "County", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.County), "CitiesCommunity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.CityCommunity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_LegalEntities_Activities", "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Activity), "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_Branches_Cities", "CityCommunity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.CityCommunity), "LegalEntityBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntityBranch), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_LegalEntities_Cities", "CityCommunity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.CityCommunity), "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_PhysicalEntities_Cities", "CityCommunity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.CityCommunity), "PhysicalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.PhysicalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_PhysicalEntities_Cities1", "CityCommunity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.CityCommunity), "PhysicalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.PhysicalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_LegalEntities_CommercialCourts", "CommercialCourt", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.CommercialCourt), "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_Branches_Counties", "County", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.County), "LegalEntityBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntityBranch), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_LegalEntities_Counties", "County", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.County), "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_PhysicalEntities_Counties", "County", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.County), "PhysicalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.PhysicalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_PhysicalEntities_Counties1", "County", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.County), "PhysicalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.PhysicalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_Branches_Countries", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Country), "LegalEntityBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntityBranch), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_LegalEntities_Countries", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Country), "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_PhysicalEntities_Countries", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Country), "PhysicalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.PhysicalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_PhysicalEntities_Countries1", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Country), "PhysicalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.PhysicalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_PhysicalEntities_Countries2", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Country), "PhysicalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.PhysicalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_PhysicalEntities_Countries3", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Country), "PhysicalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.PhysicalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_LegalEntities_Forms", "Form", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Form), "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_CompanyLegalRepresentative_LegalEntities", "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.LegalEntity), "LegalEntityLegalRepresentative", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntityLegalRepresentative), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_LegalEntities_Places", "Place", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Place), "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_LegalEntities_PostalOffices", "PostalOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.PostalOffice), "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_LegalEntities_RegionalOffices", "RegionalOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.RegionalOffice), "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_LegalEntities_Substations", "Substation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Substation), "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_LegalEntities_Taxes", "Tax", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Tax), "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_LegalEntityBanks_LegalEntities", "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.LegalEntity), "LegalEntityBank", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntityBank), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_LegalEntityBranches_LegalEntities", "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.LegalEntity), "LegalEntityBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntityBranch), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_Branches_Places", "Place", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Place), "LegalEntityBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntityBranch), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_Branches_PostalOffices", "PostalOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.PostalOffice), "LegalEntityBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntityBranch), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_CompanyLegalRepresentative_PhysicalEntities", "PhysicalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.PhysicalEntity), "LegalEntityLegalRepresentative", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntityLegalRepresentative), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_PhysicalEntities_Places", "Place", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Place), "PhysicalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.PhysicalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_PhysicalEntities_PostalOffices", "PostalOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.PostalOffice), "PhysicalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.PhysicalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_PhysicalEntities_RegionalOffices", "RegionalOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.RegionalOffice), "PhysicalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.PhysicalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_PhysicalEntities_WaysOfRepresentation", "WayOfRepresentation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.WayOfRepresentation), "PhysicalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.PhysicalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_PhysicalEntities_RegionalOffices1", "RegionalOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.RegionalOffice), "PhysicalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.PhysicalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_PhysicalEntities_Substations", "Substation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Substation), "PhysicalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.PhysicalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_LegalEntities_PhysicalEntities", "PhysicalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.PhysicalEntity), "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.LegalEntity), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_AnnexContracts_AnnexContracts", "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.Contract), "AnnexContract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.AnnexContract), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_AnnexContracts_ContractValidities", "ContractValidity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.ContractValidity), "AnnexContract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.AnnexContract), true)]
[assembly: EdmRelationshipAttribute("Mateus_wcModel", "FK_Contracts_ContractValidities", "ContractValidity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mateus.Model.EFModel.ContractValidity), "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mateus.Model.EFModel.Contract), true)]

#endregion

namespace Mateus.Model.EFModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Mateus_wcEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Mateus_wcEntities object using the connection string found in the 'Mateus_wcEntities' section of the application configuration file.
        /// </summary>
        public Mateus_wcEntities() : base("name=Mateus_wcEntities", "Mateus_wcEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Mateus_wcEntities object.
        /// </summary>
        public Mateus_wcEntities(string connectionString) : base(connectionString, "Mateus_wcEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Mateus_wcEntities object.
        /// </summary>
        public Mateus_wcEntities(EntityConnection connection) : base(connection, "Mateus_wcEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Activity> Activities
        {
            get
            {
                if ((_Activities == null))
                {
                    _Activities = base.CreateObjectSet<Activity>("Activities");
                }
                return _Activities;
            }
        }
        private ObjectSet<Activity> _Activities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdditionalFactor> AdditionalFactors
        {
            get
            {
                if ((_AdditionalFactors == null))
                {
                    _AdditionalFactors = base.CreateObjectSet<AdditionalFactor>("AdditionalFactors");
                }
                return _AdditionalFactors;
            }
        }
        private ObjectSet<AdditionalFactor> _AdditionalFactors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssessmentAnswers> AssessmentAnswers
        {
            get
            {
                if ((_AssessmentAnswers == null))
                {
                    _AssessmentAnswers = base.CreateObjectSet<AssessmentAnswers>("AssessmentAnswers");
                }
                return _AssessmentAnswers;
            }
        }
        private ObjectSet<AssessmentAnswers> _AssessmentAnswers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssessmentGroup> AssessmentGroups
        {
            get
            {
                if ((_AssessmentGroups == null))
                {
                    _AssessmentGroups = base.CreateObjectSet<AssessmentGroup>("AssessmentGroups");
                }
                return _AssessmentGroups;
            }
        }
        private ObjectSet<AssessmentGroup> _AssessmentGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssessmentQuestion> AssessmentQuestions
        {
            get
            {
                if ((_AssessmentQuestions == null))
                {
                    _AssessmentQuestions = base.CreateObjectSet<AssessmentQuestion>("AssessmentQuestions");
                }
                return _AssessmentQuestions;
            }
        }
        private ObjectSet<AssessmentQuestion> _AssessmentQuestions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssessmentType> AssessmentTypes
        {
            get
            {
                if ((_AssessmentTypes == null))
                {
                    _AssessmentTypes = base.CreateObjectSet<AssessmentType>("AssessmentTypes");
                }
                return _AssessmentTypes;
            }
        }
        private ObjectSet<AssessmentType> _AssessmentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attachment> Attachments
        {
            get
            {
                if ((_Attachments == null))
                {
                    _Attachments = base.CreateObjectSet<Attachment>("Attachments");
                }
                return _Attachments;
            }
        }
        private ObjectSet<Attachment> _Attachments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuditingDetail> AuditingDetails
        {
            get
            {
                if ((_AuditingDetails == null))
                {
                    _AuditingDetails = base.CreateObjectSet<AuditingDetail>("AuditingDetails");
                }
                return _AuditingDetails;
            }
        }
        private ObjectSet<AuditingDetail> _AuditingDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuditingMaster> AuditingMasters
        {
            get
            {
                if ((_AuditingMasters == null))
                {
                    _AuditingMasters = base.CreateObjectSet<AuditingMaster>("AuditingMasters");
                }
                return _AuditingMasters;
            }
        }
        private ObjectSet<AuditingMaster> _AuditingMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bank> Banks
        {
            get
            {
                if ((_Banks == null))
                {
                    _Banks = base.CreateObjectSet<Bank>("Banks");
                }
                return _Banks;
            }
        }
        private ObjectSet<Bank> _Banks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BussinesShareBurden> BussinesShareBurdens
        {
            get
            {
                if ((_BussinesShareBurdens == null))
                {
                    _BussinesShareBurdens = base.CreateObjectSet<BussinesShareBurden>("BussinesShareBurdens");
                }
                return _BussinesShareBurdens;
            }
        }
        private ObjectSet<BussinesShareBurden> _BussinesShareBurdens;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChangeType> ChangeTypes
        {
            get
            {
                if ((_ChangeTypes == null))
                {
                    _ChangeTypes = base.CreateObjectSet<ChangeType>("ChangeTypes");
                }
                return _ChangeTypes;
            }
        }
        private ObjectSet<ChangeType> _ChangeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CommercialCourt> CommercialCourts
        {
            get
            {
                if ((_CommercialCourts == null))
                {
                    _CommercialCourts = base.CreateObjectSet<CommercialCourt>("CommercialCourts");
                }
                return _CommercialCourts;
            }
        }
        private ObjectSet<CommercialCourt> _CommercialCourts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractValidity> ContractValidities
        {
            get
            {
                if ((_ContractValidities == null))
                {
                    _ContractValidities = base.CreateObjectSet<ContractValidity>("ContractValidities");
                }
                return _ContractValidities;
            }
        }
        private ObjectSet<ContractValidity> _ContractValidities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<County> Counties
        {
            get
            {
                if ((_Counties == null))
                {
                    _Counties = base.CreateObjectSet<County>("Counties");
                }
                return _Counties;
            }
        }
        private ObjectSet<County> _Counties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency> Currencies
        {
            get
            {
                if ((_Currencies == null))
                {
                    _Currencies = base.CreateObjectSet<Currency>("Currencies");
                }
                return _Currencies;
            }
        }
        private ObjectSet<Currency> _Currencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Form> Forms
        {
            get
            {
                if ((_Forms == null))
                {
                    _Forms = base.CreateObjectSet<Form>("Forms");
                }
                return _Forms;
            }
        }
        private ObjectSet<Form> _Forms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FulfilledFactor> FulfilledFactors
        {
            get
            {
                if ((_FulfilledFactors == null))
                {
                    _FulfilledFactors = base.CreateObjectSet<FulfilledFactor>("FulfilledFactors");
                }
                return _FulfilledFactors;
            }
        }
        private ObjectSet<FulfilledFactor> _FulfilledFactors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OwnerType> OwnerTypes
        {
            get
            {
                if ((_OwnerTypes == null))
                {
                    _OwnerTypes = base.CreateObjectSet<OwnerType>("OwnerTypes");
                }
                return _OwnerTypes;
            }
        }
        private ObjectSet<OwnerType> _OwnerTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Place> Places
        {
            get
            {
                if ((_Places == null))
                {
                    _Places = base.CreateObjectSet<Place>("Places");
                }
                return _Places;
            }
        }
        private ObjectSet<Place> _Places;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PostalOffice> PostalOffices
        {
            get
            {
                if ((_PostalOffices == null))
                {
                    _PostalOffices = base.CreateObjectSet<PostalOffice>("PostalOffices");
                }
                return _PostalOffices;
            }
        }
        private ObjectSet<PostalOffice> _PostalOffices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegionalOffice> RegionalOffices
        {
            get
            {
                if ((_RegionalOffices == null))
                {
                    _RegionalOffices = base.CreateObjectSet<RegionalOffice>("RegionalOffices");
                }
                return _RegionalOffices;
            }
        }
        private ObjectSet<RegionalOffice> _RegionalOffices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Risk> Risks
        {
            get
            {
                if ((_Risks == null))
                {
                    _Risks = base.CreateObjectSet<Risk>("Risks");
                }
                return _Risks;
            }
        }
        private ObjectSet<Risk> _Risks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceType> ServiceTypes
        {
            get
            {
                if ((_ServiceTypes == null))
                {
                    _ServiceTypes = base.CreateObjectSet<ServiceType>("ServiceTypes");
                }
                return _ServiceTypes;
            }
        }
        private ObjectSet<ServiceType> _ServiceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Substation> Substations
        {
            get
            {
                if ((_Substations == null))
                {
                    _Substations = base.CreateObjectSet<Substation>("Substations");
                }
                return _Substations;
            }
        }
        private ObjectSet<Substation> _Substations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemAction> SystemActions
        {
            get
            {
                if ((_SystemActions == null))
                {
                    _SystemActions = base.CreateObjectSet<SystemAction>("SystemActions");
                }
                return _SystemActions;
            }
        }
        private ObjectSet<SystemAction> _SystemActions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemController> SystemControllers
        {
            get
            {
                if ((_SystemControllers == null))
                {
                    _SystemControllers = base.CreateObjectSet<SystemController>("SystemControllers");
                }
                return _SystemControllers;
            }
        }
        private ObjectSet<SystemController> _SystemControllers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tax> Taxes
        {
            get
            {
                if ((_Taxes == null))
                {
                    _Taxes = base.CreateObjectSet<Tax>("Taxes");
                }
                return _Taxes;
            }
        }
        private ObjectSet<Tax> _Taxes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ToDoList> ToDoLists
        {
            get
            {
                if ((_ToDoLists == null))
                {
                    _ToDoLists = base.CreateObjectSet<ToDoList>("ToDoLists");
                }
                return _ToDoLists;
            }
        }
        private ObjectSet<ToDoList> _ToDoLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserActivity> UserActivities
        {
            get
            {
                if ((_UserActivities == null))
                {
                    _UserActivities = base.CreateObjectSet<UserActivity>("UserActivities");
                }
                return _UserActivities;
            }
        }
        private ObjectSet<UserActivity> _UserActivities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserInRole> UsersInRoles
        {
            get
            {
                if ((_UsersInRoles == null))
                {
                    _UsersInRoles = base.CreateObjectSet<UserInRole>("UsersInRoles");
                }
                return _UsersInRoles;
            }
        }
        private ObjectSet<UserInRole> _UsersInRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WayOfRepresentation> WaysOfRepresentations
        {
            get
            {
                if ((_WaysOfRepresentations == null))
                {
                    _WaysOfRepresentations = base.CreateObjectSet<WayOfRepresentation>("WaysOfRepresentations");
                }
                return _WaysOfRepresentations;
            }
        }
        private ObjectSet<WayOfRepresentation> _WaysOfRepresentations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkDoneAttachment> WorkDoneAttachments
        {
            get
            {
                if ((_WorkDoneAttachments == null))
                {
                    _WorkDoneAttachments = base.CreateObjectSet<WorkDoneAttachment>("WorkDoneAttachments");
                }
                return _WorkDoneAttachments;
            }
        }
        private ObjectSet<WorkDoneAttachment> _WorkDoneAttachments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkSubtype> WorkSubtypes
        {
            get
            {
                if ((_WorkSubtypes == null))
                {
                    _WorkSubtypes = base.CreateObjectSet<WorkSubtype>("WorkSubtypes");
                }
                return _WorkSubtypes;
            }
        }
        private ObjectSet<WorkSubtype> _WorkSubtypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkType> WorkTypes
        {
            get
            {
                if ((_WorkTypes == null))
                {
                    _WorkTypes = base.CreateObjectSet<WorkType>("WorkTypes");
                }
                return _WorkTypes;
            }
        }
        private ObjectSet<WorkType> _WorkTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LegalEntityBank> LegalEntityBanks
        {
            get
            {
                if ((_LegalEntityBanks == null))
                {
                    _LegalEntityBanks = base.CreateObjectSet<LegalEntityBank>("LegalEntityBanks");
                }
                return _LegalEntityBanks;
            }
        }
        private ObjectSet<LegalEntityBank> _LegalEntityBanks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LegalEntityLegalRepresentative> LegalEntityLegalRepresentatives
        {
            get
            {
                if ((_LegalEntityLegalRepresentatives == null))
                {
                    _LegalEntityLegalRepresentatives = base.CreateObjectSet<LegalEntityLegalRepresentative>("LegalEntityLegalRepresentatives");
                }
                return _LegalEntityLegalRepresentatives;
            }
        }
        private ObjectSet<LegalEntityLegalRepresentative> _LegalEntityLegalRepresentatives;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LegalEntityOwner> LegalEntityOwners
        {
            get
            {
                if ((_LegalEntityOwners == null))
                {
                    _LegalEntityOwners = base.CreateObjectSet<LegalEntityOwner>("LegalEntityOwners");
                }
                return _LegalEntityOwners;
            }
        }
        private ObjectSet<LegalEntityOwner> _LegalEntityOwners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkDone> WorkDones
        {
            get
            {
                if ((_WorkDones == null))
                {
                    _WorkDones = base.CreateObjectSet<WorkDone>("WorkDones");
                }
                return _WorkDones;
            }
        }
        private ObjectSet<WorkDone> _WorkDones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Assessment> Assessments
        {
            get
            {
                if ((_Assessments == null))
                {
                    _Assessments = base.CreateObjectSet<Assessment>("Assessments");
                }
                return _Assessments;
            }
        }
        private ObjectSet<Assessment> _Assessments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CityCommunity> CityCommunities
        {
            get
            {
                if ((_CityCommunities == null))
                {
                    _CityCommunities = base.CreateObjectSet<CityCommunity>("CityCommunities");
                }
                return _CityCommunities;
            }
        }
        private ObjectSet<CityCommunity> _CityCommunities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LegalEntity> LegalEntities
        {
            get
            {
                if ((_LegalEntities == null))
                {
                    _LegalEntities = base.CreateObjectSet<LegalEntity>("LegalEntities");
                }
                return _LegalEntities;
            }
        }
        private ObjectSet<LegalEntity> _LegalEntities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LegalEntityBranch> LegalEntityBranches
        {
            get
            {
                if ((_LegalEntityBranches == null))
                {
                    _LegalEntityBranches = base.CreateObjectSet<LegalEntityBranch>("LegalEntityBranches");
                }
                return _LegalEntityBranches;
            }
        }
        private ObjectSet<LegalEntityBranch> _LegalEntityBranches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhysicalEntity> PhysicalEntities
        {
            get
            {
                if ((_PhysicalEntities == null))
                {
                    _PhysicalEntities = base.CreateObjectSet<PhysicalEntity>("PhysicalEntities");
                }
                return _PhysicalEntities;
            }
        }
        private ObjectSet<PhysicalEntity> _PhysicalEntities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AnnexContract> AnnexContracts
        {
            get
            {
                if ((_AnnexContracts == null))
                {
                    _AnnexContracts = base.CreateObjectSet<AnnexContract>("AnnexContracts");
                }
                return _AnnexContracts;
            }
        }
        private ObjectSet<AnnexContract> _AnnexContracts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contract> Contracts
        {
            get
            {
                if ((_Contracts == null))
                {
                    _Contracts = base.CreateObjectSet<Contract>("Contracts");
                }
                return _Contracts;
            }
        }
        private ObjectSet<Contract> _Contracts;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Activities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivities(Activity activity)
        {
            base.AddObject("Activities", activity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdditionalFactors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdditionalFactors(AdditionalFactor additionalFactor)
        {
            base.AddObject("AdditionalFactors", additionalFactor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssessmentAnswers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssessmentAnswers(AssessmentAnswers assessmentAnswers)
        {
            base.AddObject("AssessmentAnswers", assessmentAnswers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssessmentGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssessmentGroups(AssessmentGroup assessmentGroup)
        {
            base.AddObject("AssessmentGroups", assessmentGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssessmentQuestions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssessmentQuestions(AssessmentQuestion assessmentQuestion)
        {
            base.AddObject("AssessmentQuestions", assessmentQuestion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssessmentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssessmentTypes(AssessmentType assessmentType)
        {
            base.AddObject("AssessmentTypes", assessmentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attachments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttachments(Attachment attachment)
        {
            base.AddObject("Attachments", attachment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuditingDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuditingDetails(AuditingDetail auditingDetail)
        {
            base.AddObject("AuditingDetails", auditingDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuditingMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuditingMasters(AuditingMaster auditingMaster)
        {
            base.AddObject("AuditingMasters", auditingMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Banks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBanks(Bank bank)
        {
            base.AddObject("Banks", bank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BussinesShareBurdens EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBussinesShareBurdens(BussinesShareBurden bussinesShareBurden)
        {
            base.AddObject("BussinesShareBurdens", bussinesShareBurden);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChangeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChangeTypes(ChangeType changeType)
        {
            base.AddObject("ChangeTypes", changeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CommercialCourts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommercialCourts(CommercialCourt commercialCourt)
        {
            base.AddObject("CommercialCourts", commercialCourt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractValidities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractValidities(ContractValidity contractValidity)
        {
            base.AddObject("ContractValidities", contractValidity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Counties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCounties(County county)
        {
            base.AddObject("Counties", county);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Currencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencies(Currency currency)
        {
            base.AddObject("Currencies", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Forms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForms(Form form)
        {
            base.AddObject("Forms", form);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FulfilledFactors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFulfilledFactors(FulfilledFactor fulfilledFactor)
        {
            base.AddObject("FulfilledFactors", fulfilledFactor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OwnerTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOwnerTypes(OwnerType ownerType)
        {
            base.AddObject("OwnerTypes", ownerType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Places EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlaces(Place place)
        {
            base.AddObject("Places", place);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PostalOffices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPostalOffices(PostalOffice postalOffice)
        {
            base.AddObject("PostalOffices", postalOffice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegionalOffices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegionalOffices(RegionalOffice regionalOffice)
        {
            base.AddObject("RegionalOffices", regionalOffice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Risks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRisks(Risk risk)
        {
            base.AddObject("Risks", risk);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceTypes(ServiceType serviceType)
        {
            base.AddObject("ServiceTypes", serviceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Substations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubstations(Substation substation)
        {
            base.AddObject("Substations", substation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemActions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemActions(SystemAction systemAction)
        {
            base.AddObject("SystemActions", systemAction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemControllers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemControllers(SystemController systemController)
        {
            base.AddObject("SystemControllers", systemController);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Taxes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaxes(Tax tax)
        {
            base.AddObject("Taxes", tax);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ToDoLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToToDoLists(ToDoList toDoList)
        {
            base.AddObject("ToDoLists", toDoList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserActivities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserActivities(UserActivity userActivity)
        {
            base.AddObject("UserActivities", userActivity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsersInRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsersInRoles(UserInRole userInRole)
        {
            base.AddObject("UsersInRoles", userInRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WaysOfRepresentations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWaysOfRepresentations(WayOfRepresentation wayOfRepresentation)
        {
            base.AddObject("WaysOfRepresentations", wayOfRepresentation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkDoneAttachments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkDoneAttachments(WorkDoneAttachment workDoneAttachment)
        {
            base.AddObject("WorkDoneAttachments", workDoneAttachment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkSubtypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkSubtypes(WorkSubtype workSubtype)
        {
            base.AddObject("WorkSubtypes", workSubtype);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkTypes(WorkType workType)
        {
            base.AddObject("WorkTypes", workType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LegalEntityBanks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLegalEntityBanks(LegalEntityBank legalEntityBank)
        {
            base.AddObject("LegalEntityBanks", legalEntityBank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LegalEntityLegalRepresentatives EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLegalEntityLegalRepresentatives(LegalEntityLegalRepresentative legalEntityLegalRepresentative)
        {
            base.AddObject("LegalEntityLegalRepresentatives", legalEntityLegalRepresentative);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LegalEntityOwners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLegalEntityOwners(LegalEntityOwner legalEntityOwner)
        {
            base.AddObject("LegalEntityOwners", legalEntityOwner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkDones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkDones(WorkDone workDone)
        {
            base.AddObject("WorkDones", workDone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Assessments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssessments(Assessment assessment)
        {
            base.AddObject("Assessments", assessment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CityCommunities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCityCommunities(CityCommunity cityCommunity)
        {
            base.AddObject("CityCommunities", cityCommunity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LegalEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLegalEntities(LegalEntity legalEntity)
        {
            base.AddObject("LegalEntities", legalEntity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LegalEntityBranches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLegalEntityBranches(LegalEntityBranch legalEntityBranch)
        {
            base.AddObject("LegalEntityBranches", legalEntityBranch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhysicalEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhysicalEntities(PhysicalEntity physicalEntity)
        {
            base.AddObject("PhysicalEntities", physicalEntity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AnnexContracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnnexContracts(AnnexContract annexContract)
        {
            base.AddObject("AnnexContracts", annexContract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContracts(Contract contract)
        {
            base.AddObject("Contracts", contract);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="Activity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Activity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Activity object.
        /// </summary>
        /// <param name="activityPK">Initial value of the ActivityPK property.</param>
        public static Activity CreateActivity(global::System.Int32 activityPK)
        {
            Activity activity = new Activity();
            activity.ActivityPK = activityPK;
            return activity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityPK
        {
            get
            {
                return _ActivityPK;
            }
            set
            {
                if (_ActivityPK != value)
                {
                    OnActivityPKChanging(value);
                    ReportPropertyChanging("ActivityPK");
                    _ActivityPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActivityPK");
                    OnActivityPKChanged();
                }
            }
        }
        private global::System.Int32 _ActivityPK;
        partial void OnActivityPKChanging(global::System.Int32 value);
        partial void OnActivityPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HighRisk
        {
            get
            {
                return _HighRisk;
            }
            set
            {
                OnHighRiskChanging(value);
                ReportPropertyChanging("HighRisk");
                _HighRisk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighRisk");
                OnHighRiskChanged();
            }
        }
        private Nullable<global::System.Boolean> _HighRisk;
        partial void OnHighRiskChanging(Nullable<global::System.Boolean> value);
        partial void OnHighRiskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> LowRisk
        {
            get
            {
                return _LowRisk;
            }
            set
            {
                OnLowRiskChanging(value);
                ReportPropertyChanging("LowRisk");
                _LowRisk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LowRisk");
                OnLowRiskChanged();
            }
        }
        private Nullable<global::System.Boolean> _LowRisk;
        partial void OnLowRiskChanging(Nullable<global::System.Boolean> value);
        partial void OnLowRiskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_Activities", "LegalEntity")]
        public EntityCollection<LegalEntity> LegalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_Activities", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_Activities", "LegalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="AdditionalFactor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdditionalFactor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdditionalFactor object.
        /// </summary>
        /// <param name="additionalFactorPK">Initial value of the AdditionalFactorPK property.</param>
        public static AdditionalFactor CreateAdditionalFactor(global::System.Int32 additionalFactorPK)
        {
            AdditionalFactor additionalFactor = new AdditionalFactor();
            additionalFactor.AdditionalFactorPK = additionalFactorPK;
            return additionalFactor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdditionalFactorPK
        {
            get
            {
                return _AdditionalFactorPK;
            }
            set
            {
                if (_AdditionalFactorPK != value)
                {
                    OnAdditionalFactorPKChanging(value);
                    ReportPropertyChanging("AdditionalFactorPK");
                    _AdditionalFactorPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdditionalFactorPK");
                    OnAdditionalFactorPKChanged();
                }
            }
        }
        private global::System.Int32 _AdditionalFactorPK;
        partial void OnAdditionalFactorPKChanging(global::System.Int32 value);
        partial void OnAdditionalFactorPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="AnnexContract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AnnexContract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AnnexContract object.
        /// </summary>
        /// <param name="annexContractPK">Initial value of the AnnexContractPK property.</param>
        public static AnnexContract CreateAnnexContract(global::System.Int32 annexContractPK)
        {
            AnnexContract annexContract = new AnnexContract();
            annexContract.AnnexContractPK = annexContractPK;
            return annexContract;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AnnexContractPK
        {
            get
            {
                return _AnnexContractPK;
            }
            set
            {
                if (_AnnexContractPK != value)
                {
                    OnAnnexContractPKChanging(value);
                    ReportPropertyChanging("AnnexContractPK");
                    _AnnexContractPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AnnexContractPK");
                    OnAnnexContractPKChanged();
                }
            }
        }
        private global::System.Int32 _AnnexContractPK;
        partial void OnAnnexContractPKChanging(global::System.Int32 value);
        partial void OnAnnexContractPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractFK
        {
            get
            {
                return _ContractFK;
            }
            set
            {
                OnContractFKChanging(value);
                ReportPropertyChanging("ContractFK");
                _ContractFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractFK");
                OnContractFKChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractFK;
        partial void OnContractFKChanging(Nullable<global::System.Int32> value);
        partial void OnContractFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractValidityFK
        {
            get
            {
                return _ContractValidityFK;
            }
            set
            {
                OnContractValidityFKChanging(value);
                ReportPropertyChanging("ContractValidityFK");
                _ContractValidityFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractValidityFK");
                OnContractValidityFKChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractValidityFK;
        partial void OnContractValidityFKChanging(Nullable<global::System.Int32> value);
        partial void OnContractValidityFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AnnexContractBegin
        {
            get
            {
                return _AnnexContractBegin;
            }
            set
            {
                OnAnnexContractBeginChanging(value);
                ReportPropertyChanging("AnnexContractBegin");
                _AnnexContractBegin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnnexContractBegin");
                OnAnnexContractBeginChanged();
            }
        }
        private Nullable<global::System.DateTime> _AnnexContractBegin;
        partial void OnAnnexContractBeginChanging(Nullable<global::System.DateTime> value);
        partial void OnAnnexContractBeginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AnnexContractEnd
        {
            get
            {
                return _AnnexContractEnd;
            }
            set
            {
                OnAnnexContractEndChanging(value);
                ReportPropertyChanging("AnnexContractEnd");
                _AnnexContractEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnnexContractEnd");
                OnAnnexContractEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _AnnexContractEnd;
        partial void OnAnnexContractEndChanging(Nullable<global::System.DateTime> value);
        partial void OnAnnexContractEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TerminationDate
        {
            get
            {
                return _TerminationDate;
            }
            set
            {
                OnTerminationDateChanging(value);
                ReportPropertyChanging("TerminationDate");
                _TerminationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TerminationDate");
                OnTerminationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TerminationDate;
        partial void OnTerminationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTerminationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TerminationDescription
        {
            get
            {
                return _TerminationDescription;
            }
            set
            {
                OnTerminationDescriptionChanging(value);
                ReportPropertyChanging("TerminationDescription");
                _TerminationDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TerminationDescription");
                OnTerminationDescriptionChanged();
            }
        }
        private global::System.String _TerminationDescription;
        partial void OnTerminationDescriptionChanging(global::System.String value);
        partial void OnTerminationDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Terminated
        {
            get
            {
                return _Terminated;
            }
            set
            {
                OnTerminatedChanging(value);
                ReportPropertyChanging("Terminated");
                _Terminated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Terminated");
                OnTerminatedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Terminated;
        partial void OnTerminatedChanging(Nullable<global::System.Boolean> value);
        partial void OnTerminatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrencyFK
        {
            get
            {
                return _CurrencyFK;
            }
            set
            {
                OnCurrencyFKChanging(value);
                ReportPropertyChanging("CurrencyFK");
                _CurrencyFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyFK");
                OnCurrencyFKChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrencyFK;
        partial void OnCurrencyFKChanging(Nullable<global::System.Int32> value);
        partial void OnCurrencyFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MIO
        {
            get
            {
                return _MIO;
            }
            set
            {
                OnMIOChanging(value);
                ReportPropertyChanging("MIO");
                _MIO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MIO");
                OnMIOChanged();
            }
        }
        private Nullable<global::System.Decimal> _MIO;
        partial void OnMIOChanging(Nullable<global::System.Decimal> value);
        partial void OnMIOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TSI
        {
            get
            {
                return _TSI;
            }
            set
            {
                OnTSIChanging(value);
                ReportPropertyChanging("TSI");
                _TSI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TSI");
                OnTSIChanged();
            }
        }
        private Nullable<global::System.Decimal> _TSI;
        partial void OnTSIChanging(Nullable<global::System.Decimal> value);
        partial void OnTSIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GZR
        {
            get
            {
                return _GZR;
            }
            set
            {
                OnGZRChanging(value);
                ReportPropertyChanging("GZR");
                _GZR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GZR");
                OnGZRChanged();
            }
        }
        private Nullable<global::System.Decimal> _GZR;
        partial void OnGZRChanging(Nullable<global::System.Decimal> value);
        partial void OnGZRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OPL
        {
            get
            {
                return _OPL;
            }
            set
            {
                OnOPLChanging(value);
                ReportPropertyChanging("OPL");
                _OPL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OPL");
                OnOPLChanged();
            }
        }
        private Nullable<global::System.Decimal> _OPL;
        partial void OnOPLChanging(Nullable<global::System.Decimal> value);
        partial void OnOPLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AUP
        {
            get
            {
                return _AUP;
            }
            set
            {
                OnAUPChanging(value);
                ReportPropertyChanging("AUP");
                _AUP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AUP");
                OnAUPChanged();
            }
        }
        private Nullable<global::System.Decimal> _AUP;
        partial void OnAUPChanging(Nullable<global::System.Decimal> value);
        partial void OnAUPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_AnnexContracts_AnnexContracts", "Contract")]
        public Contract Contract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("Mateus_wcModel.FK_AnnexContracts_AnnexContracts", "Contract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("Mateus_wcModel.FK_AnnexContracts_AnnexContracts", "Contract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contract> ContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("Mateus_wcModel.FK_AnnexContracts_AnnexContracts", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contract>("Mateus_wcModel.FK_AnnexContracts_AnnexContracts", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_AnnexContracts_ContractValidities", "ContractValidity")]
        public ContractValidity ContractValidity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractValidity>("Mateus_wcModel.FK_AnnexContracts_ContractValidities", "ContractValidity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractValidity>("Mateus_wcModel.FK_AnnexContracts_ContractValidities", "ContractValidity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContractValidity> ContractValidityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractValidity>("Mateus_wcModel.FK_AnnexContracts_ContractValidities", "ContractValidity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContractValidity>("Mateus_wcModel.FK_AnnexContracts_ContractValidities", "ContractValidity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="Assessment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Assessment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Assessment object.
        /// </summary>
        /// <param name="assessmentPK">Initial value of the AssessmentPK property.</param>
        public static Assessment CreateAssessment(global::System.Int32 assessmentPK)
        {
            Assessment assessment = new Assessment();
            assessment.AssessmentPK = assessmentPK;
            return assessment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssessmentPK
        {
            get
            {
                return _AssessmentPK;
            }
            set
            {
                if (_AssessmentPK != value)
                {
                    OnAssessmentPKChanging(value);
                    ReportPropertyChanging("AssessmentPK");
                    _AssessmentPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssessmentPK");
                    OnAssessmentPKChanged();
                }
            }
        }
        private global::System.Int32 _AssessmentPK;
        partial void OnAssessmentPKChanging(global::System.Int32 value);
        partial void OnAssessmentPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalEntityFK
        {
            get
            {
                return _LegalEntityFK;
            }
            set
            {
                OnLegalEntityFKChanging(value);
                ReportPropertyChanging("LegalEntityFK");
                _LegalEntityFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalEntityFK");
                OnLegalEntityFKChanged();
            }
        }
        private Nullable<global::System.Int32> _LegalEntityFK;
        partial void OnLegalEntityFKChanging(Nullable<global::System.Int32> value);
        partial void OnLegalEntityFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RiskFK
        {
            get
            {
                return _RiskFK;
            }
            set
            {
                OnRiskFKChanging(value);
                ReportPropertyChanging("RiskFK");
                _RiskFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskFK");
                OnRiskFKChanged();
            }
        }
        private Nullable<global::System.Int32> _RiskFK;
        partial void OnRiskFKChanging(Nullable<global::System.Int32> value);
        partial void OnRiskFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssessmentTypeFK
        {
            get
            {
                return _AssessmentTypeFK;
            }
            set
            {
                OnAssessmentTypeFKChanging(value);
                ReportPropertyChanging("AssessmentTypeFK");
                _AssessmentTypeFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssessmentTypeFK");
                OnAssessmentTypeFKChanged();
            }
        }
        private Nullable<global::System.Int32> _AssessmentTypeFK;
        partial void OnAssessmentTypeFKChanging(Nullable<global::System.Int32> value);
        partial void OnAssessmentTypeFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssessmentComment
        {
            get
            {
                return _AssessmentComment;
            }
            set
            {
                OnAssessmentCommentChanging(value);
                ReportPropertyChanging("AssessmentComment");
                _AssessmentComment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AssessmentComment");
                OnAssessmentCommentChanged();
            }
        }
        private global::System.String _AssessmentComment;
        partial void OnAssessmentCommentChanging(global::System.String value);
        partial void OnAssessmentCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AssessmentDate
        {
            get
            {
                return _AssessmentDate;
            }
            set
            {
                OnAssessmentDateChanging(value);
                ReportPropertyChanging("AssessmentDate");
                _AssessmentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssessmentDate");
                OnAssessmentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AssessmentDate;
        partial void OnAssessmentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAssessmentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_AssessmentAnswers_Assessments", "AssessmentAnswers")]
        public EntityCollection<AssessmentAnswers> AssessmentAnswers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssessmentAnswers>("Mateus_wcModel.FK_AssessmentAnswers_Assessments", "AssessmentAnswers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssessmentAnswers>("Mateus_wcModel.FK_AssessmentAnswers_Assessments", "AssessmentAnswers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Assessments_AssessmentTypes", "AssessmentType")]
        public AssessmentType AssessmentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentType>("Mateus_wcModel.FK_Assessments_AssessmentTypes", "AssessmentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentType>("Mateus_wcModel.FK_Assessments_AssessmentTypes", "AssessmentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssessmentType> AssessmentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentType>("Mateus_wcModel.FK_Assessments_AssessmentTypes", "AssessmentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssessmentType>("Mateus_wcModel.FK_Assessments_AssessmentTypes", "AssessmentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Assessments_Risks", "Risk")]
        public Risk Risk
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("Mateus_wcModel.FK_Assessments_Risks", "Risk").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("Mateus_wcModel.FK_Assessments_Risks", "Risk").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Risk> RiskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("Mateus_wcModel.FK_Assessments_Risks", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Risk>("Mateus_wcModel.FK_Assessments_Risks", "Risk", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="AssessmentAnswers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssessmentAnswers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssessmentAnswers object.
        /// </summary>
        /// <param name="assessmentAnswerPK">Initial value of the AssessmentAnswerPK property.</param>
        public static AssessmentAnswers CreateAssessmentAnswers(global::System.Int32 assessmentAnswerPK)
        {
            AssessmentAnswers assessmentAnswers = new AssessmentAnswers();
            assessmentAnswers.AssessmentAnswerPK = assessmentAnswerPK;
            return assessmentAnswers;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssessmentAnswerPK
        {
            get
            {
                return _AssessmentAnswerPK;
            }
            set
            {
                if (_AssessmentAnswerPK != value)
                {
                    OnAssessmentAnswerPKChanging(value);
                    ReportPropertyChanging("AssessmentAnswerPK");
                    _AssessmentAnswerPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssessmentAnswerPK");
                    OnAssessmentAnswerPKChanged();
                }
            }
        }
        private global::System.Int32 _AssessmentAnswerPK;
        partial void OnAssessmentAnswerPKChanging(global::System.Int32 value);
        partial void OnAssessmentAnswerPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AssessmentAnswer
        {
            get
            {
                return _AssessmentAnswer;
            }
            set
            {
                OnAssessmentAnswerChanging(value);
                ReportPropertyChanging("AssessmentAnswer");
                _AssessmentAnswer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssessmentAnswer");
                OnAssessmentAnswerChanged();
            }
        }
        private Nullable<global::System.Boolean> _AssessmentAnswer;
        partial void OnAssessmentAnswerChanging(Nullable<global::System.Boolean> value);
        partial void OnAssessmentAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssessmentQuestionFK
        {
            get
            {
                return _AssessmentQuestionFK;
            }
            set
            {
                OnAssessmentQuestionFKChanging(value);
                ReportPropertyChanging("AssessmentQuestionFK");
                _AssessmentQuestionFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssessmentQuestionFK");
                OnAssessmentQuestionFKChanged();
            }
        }
        private Nullable<global::System.Int32> _AssessmentQuestionFK;
        partial void OnAssessmentQuestionFKChanging(Nullable<global::System.Int32> value);
        partial void OnAssessmentQuestionFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssessmentFK
        {
            get
            {
                return _AssessmentFK;
            }
            set
            {
                OnAssessmentFKChanging(value);
                ReportPropertyChanging("AssessmentFK");
                _AssessmentFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssessmentFK");
                OnAssessmentFKChanged();
            }
        }
        private Nullable<global::System.Int32> _AssessmentFK;
        partial void OnAssessmentFKChanging(Nullable<global::System.Int32> value);
        partial void OnAssessmentFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_AssessmentAnswers_AssessmentQuestions", "AssessmentQuestions")]
        public AssessmentQuestion AssessmentQuestion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentQuestion>("Mateus_wcModel.FK_AssessmentAnswers_AssessmentQuestions", "AssessmentQuestions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentQuestion>("Mateus_wcModel.FK_AssessmentAnswers_AssessmentQuestions", "AssessmentQuestions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssessmentQuestion> AssessmentQuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentQuestion>("Mateus_wcModel.FK_AssessmentAnswers_AssessmentQuestions", "AssessmentQuestions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssessmentQuestion>("Mateus_wcModel.FK_AssessmentAnswers_AssessmentQuestions", "AssessmentQuestions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_AssessmentAnswers_Assessments", "Assessment")]
        public Assessment Assessment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Assessment>("Mateus_wcModel.FK_AssessmentAnswers_Assessments", "Assessment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Assessment>("Mateus_wcModel.FK_AssessmentAnswers_Assessments", "Assessment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Assessment> AssessmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Assessment>("Mateus_wcModel.FK_AssessmentAnswers_Assessments", "Assessment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Assessment>("Mateus_wcModel.FK_AssessmentAnswers_Assessments", "Assessment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="AssessmentGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssessmentGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssessmentGroup object.
        /// </summary>
        /// <param name="assessmentGroupPK">Initial value of the AssessmentGroupPK property.</param>
        public static AssessmentGroup CreateAssessmentGroup(global::System.Int32 assessmentGroupPK)
        {
            AssessmentGroup assessmentGroup = new AssessmentGroup();
            assessmentGroup.AssessmentGroupPK = assessmentGroupPK;
            return assessmentGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssessmentGroupPK
        {
            get
            {
                return _AssessmentGroupPK;
            }
            set
            {
                if (_AssessmentGroupPK != value)
                {
                    OnAssessmentGroupPKChanging(value);
                    ReportPropertyChanging("AssessmentGroupPK");
                    _AssessmentGroupPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssessmentGroupPK");
                    OnAssessmentGroupPKChanged();
                }
            }
        }
        private global::System.Int32 _AssessmentGroupPK;
        partial void OnAssessmentGroupPKChanging(global::System.Int32 value);
        partial void OnAssessmentGroupPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssessmentTypeFK
        {
            get
            {
                return _AssessmentTypeFK;
            }
            set
            {
                OnAssessmentTypeFKChanging(value);
                ReportPropertyChanging("AssessmentTypeFK");
                _AssessmentTypeFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssessmentTypeFK");
                OnAssessmentTypeFKChanged();
            }
        }
        private Nullable<global::System.Int32> _AssessmentTypeFK;
        partial void OnAssessmentTypeFKChanging(Nullable<global::System.Int32> value);
        partial void OnAssessmentTypeFKChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_AssessmentGroups_AssessmentTypes", "AssessmentTypes")]
        public AssessmentType AssessmentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentType>("Mateus_wcModel.FK_AssessmentGroups_AssessmentTypes", "AssessmentTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentType>("Mateus_wcModel.FK_AssessmentGroups_AssessmentTypes", "AssessmentTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssessmentType> AssessmentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentType>("Mateus_wcModel.FK_AssessmentGroups_AssessmentTypes", "AssessmentTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssessmentType>("Mateus_wcModel.FK_AssessmentGroups_AssessmentTypes", "AssessmentTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_AssessmentQuestions_AssessmentGroups", "AssessmentQuestions")]
        public EntityCollection<AssessmentQuestion> AssessmentQuestions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssessmentQuestion>("Mateus_wcModel.FK_AssessmentQuestions_AssessmentGroups", "AssessmentQuestions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssessmentQuestion>("Mateus_wcModel.FK_AssessmentQuestions_AssessmentGroups", "AssessmentQuestions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="AssessmentQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssessmentQuestion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssessmentQuestion object.
        /// </summary>
        /// <param name="assessmentQuestionPK">Initial value of the AssessmentQuestionPK property.</param>
        public static AssessmentQuestion CreateAssessmentQuestion(global::System.Int32 assessmentQuestionPK)
        {
            AssessmentQuestion assessmentQuestion = new AssessmentQuestion();
            assessmentQuestion.AssessmentQuestionPK = assessmentQuestionPK;
            return assessmentQuestion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssessmentQuestionPK
        {
            get
            {
                return _AssessmentQuestionPK;
            }
            set
            {
                if (_AssessmentQuestionPK != value)
                {
                    OnAssessmentQuestionPKChanging(value);
                    ReportPropertyChanging("AssessmentQuestionPK");
                    _AssessmentQuestionPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssessmentQuestionPK");
                    OnAssessmentQuestionPKChanged();
                }
            }
        }
        private global::System.Int32 _AssessmentQuestionPK;
        partial void OnAssessmentQuestionPKChanging(global::System.Int32 value);
        partial void OnAssessmentQuestionPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssessmentGroupFK
        {
            get
            {
                return _AssessmentGroupFK;
            }
            set
            {
                OnAssessmentGroupFKChanging(value);
                ReportPropertyChanging("AssessmentGroupFK");
                _AssessmentGroupFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssessmentGroupFK");
                OnAssessmentGroupFKChanged();
            }
        }
        private Nullable<global::System.Int32> _AssessmentGroupFK;
        partial void OnAssessmentGroupFKChanging(Nullable<global::System.Int32> value);
        partial void OnAssessmentGroupFKChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_AssessmentAnswers_AssessmentQuestions", "AssessmentAnswers")]
        public EntityCollection<AssessmentAnswers> AssessmentAnswers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssessmentAnswers>("Mateus_wcModel.FK_AssessmentAnswers_AssessmentQuestions", "AssessmentAnswers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssessmentAnswers>("Mateus_wcModel.FK_AssessmentAnswers_AssessmentQuestions", "AssessmentAnswers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_AssessmentQuestions_AssessmentGroups", "AssessmentGroups")]
        public AssessmentGroup AssessmentGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentGroup>("Mateus_wcModel.FK_AssessmentQuestions_AssessmentGroups", "AssessmentGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentGroup>("Mateus_wcModel.FK_AssessmentQuestions_AssessmentGroups", "AssessmentGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssessmentGroup> AssessmentGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentGroup>("Mateus_wcModel.FK_AssessmentQuestions_AssessmentGroups", "AssessmentGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssessmentGroup>("Mateus_wcModel.FK_AssessmentQuestions_AssessmentGroups", "AssessmentGroups", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="AssessmentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssessmentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssessmentType object.
        /// </summary>
        /// <param name="assessmentTypePK">Initial value of the AssessmentTypePK property.</param>
        public static AssessmentType CreateAssessmentType(global::System.Int32 assessmentTypePK)
        {
            AssessmentType assessmentType = new AssessmentType();
            assessmentType.AssessmentTypePK = assessmentTypePK;
            return assessmentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssessmentTypePK
        {
            get
            {
                return _AssessmentTypePK;
            }
            set
            {
                if (_AssessmentTypePK != value)
                {
                    OnAssessmentTypePKChanging(value);
                    ReportPropertyChanging("AssessmentTypePK");
                    _AssessmentTypePK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssessmentTypePK");
                    OnAssessmentTypePKChanged();
                }
            }
        }
        private global::System.Int32 _AssessmentTypePK;
        partial void OnAssessmentTypePKChanging(global::System.Int32 value);
        partial void OnAssessmentTypePKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_AssessmentGroups_AssessmentTypes", "AssessmentGroups")]
        public EntityCollection<AssessmentGroup> AssessmentGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssessmentGroup>("Mateus_wcModel.FK_AssessmentGroups_AssessmentTypes", "AssessmentGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssessmentGroup>("Mateus_wcModel.FK_AssessmentGroups_AssessmentTypes", "AssessmentGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Assessments_AssessmentTypes", "Assessment")]
        public EntityCollection<Assessment> Assessments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Assessment>("Mateus_wcModel.FK_Assessments_AssessmentTypes", "Assessment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Assessment>("Mateus_wcModel.FK_Assessments_AssessmentTypes", "Assessment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="Attachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attachment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attachment object.
        /// </summary>
        /// <param name="attachmentPK">Initial value of the AttachmentPK property.</param>
        public static Attachment CreateAttachment(global::System.Int32 attachmentPK)
        {
            Attachment attachment = new Attachment();
            attachment.AttachmentPK = attachmentPK;
            return attachment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttachmentPK
        {
            get
            {
                return _AttachmentPK;
            }
            set
            {
                if (_AttachmentPK != value)
                {
                    OnAttachmentPKChanging(value);
                    ReportPropertyChanging("AttachmentPK");
                    _AttachmentPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttachmentPK");
                    OnAttachmentPKChanged();
                }
            }
        }
        private global::System.Int32 _AttachmentPK;
        partial void OnAttachmentPKChanging(global::System.Int32 value);
        partial void OnAttachmentPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                OnFilenameChanging(value);
                ReportPropertyChanging("Filename");
                _Filename = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Filename");
                OnFilenameChanged();
            }
        }
        private global::System.String _Filename;
        partial void OnFilenameChanging(global::System.String value);
        partial void OnFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Extension
        {
            get
            {
                return _Extension;
            }
            set
            {
                OnExtensionChanging(value);
                ReportPropertyChanging("Extension");
                _Extension = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Extension");
                OnExtensionChanged();
            }
        }
        private global::System.String _Extension;
        partial void OnExtensionChanging(global::System.String value);
        partial void OnExtensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentType
        {
            get
            {
                return _ContentType;
            }
            set
            {
                OnContentTypeChanging(value);
                ReportPropertyChanging("ContentType");
                _ContentType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContentType");
                OnContentTypeChanged();
            }
        }
        private global::System.String _ContentType;
        partial void OnContentTypeChanging(global::System.String value);
        partial void OnContentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_WorkDoneAttachments_WorkDoneAttachments", "WorkDoneAttachments")]
        public EntityCollection<WorkDoneAttachment> WorkDoneAttachments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkDoneAttachment>("Mateus_wcModel.FK_WorkDoneAttachments_WorkDoneAttachments", "WorkDoneAttachments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkDoneAttachment>("Mateus_wcModel.FK_WorkDoneAttachments_WorkDoneAttachments", "WorkDoneAttachments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="AuditingDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuditingDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuditingDetail object.
        /// </summary>
        /// <param name="auditingDetailPK">Initial value of the AuditingDetailPK property.</param>
        public static AuditingDetail CreateAuditingDetail(global::System.Int32 auditingDetailPK)
        {
            AuditingDetail auditingDetail = new AuditingDetail();
            auditingDetail.AuditingDetailPK = auditingDetailPK;
            return auditingDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuditingDetailPK
        {
            get
            {
                return _AuditingDetailPK;
            }
            set
            {
                if (_AuditingDetailPK != value)
                {
                    OnAuditingDetailPKChanging(value);
                    ReportPropertyChanging("AuditingDetailPK");
                    _AuditingDetailPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AuditingDetailPK");
                    OnAuditingDetailPKChanged();
                }
            }
        }
        private global::System.Int32 _AuditingDetailPK;
        partial void OnAuditingDetailPKChanging(global::System.Int32 value);
        partial void OnAuditingDetailPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AuditingMasterFK
        {
            get
            {
                return _AuditingMasterFK;
            }
            set
            {
                OnAuditingMasterFKChanging(value);
                ReportPropertyChanging("AuditingMasterFK");
                _AuditingMasterFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuditingMasterFK");
                OnAuditingMasterFKChanged();
            }
        }
        private Nullable<global::System.Int32> _AuditingMasterFK;
        partial void OnAuditingMasterFKChanging(Nullable<global::System.Int32> value);
        partial void OnAuditingMasterFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnName
        {
            get
            {
                return _ColumnName;
            }
            set
            {
                OnColumnNameChanging(value);
                ReportPropertyChanging("ColumnName");
                _ColumnName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnName");
                OnColumnNameChanged();
            }
        }
        private global::System.String _ColumnName;
        partial void OnColumnNameChanging(global::System.String value);
        partial void OnColumnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OldValue
        {
            get
            {
                return _OldValue;
            }
            set
            {
                OnOldValueChanging(value);
                ReportPropertyChanging("OldValue");
                _OldValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OldValue");
                OnOldValueChanged();
            }
        }
        private global::System.String _OldValue;
        partial void OnOldValueChanging(global::System.String value);
        partial void OnOldValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewValue
        {
            get
            {
                return _NewValue;
            }
            set
            {
                OnNewValueChanging(value);
                ReportPropertyChanging("NewValue");
                _NewValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NewValue");
                OnNewValueChanged();
            }
        }
        private global::System.String _NewValue;
        partial void OnNewValueChanging(global::System.String value);
        partial void OnNewValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_AuditingDetails_AuditingMaster", "AuditingMaster")]
        public AuditingMaster AuditingMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuditingMaster>("Mateus_wcModel.FK_AuditingDetails_AuditingMaster", "AuditingMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuditingMaster>("Mateus_wcModel.FK_AuditingDetails_AuditingMaster", "AuditingMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AuditingMaster> AuditingMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuditingMaster>("Mateus_wcModel.FK_AuditingDetails_AuditingMaster", "AuditingMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AuditingMaster>("Mateus_wcModel.FK_AuditingDetails_AuditingMaster", "AuditingMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="AuditingMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuditingMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuditingMaster object.
        /// </summary>
        /// <param name="auditingMasterPK">Initial value of the AuditingMasterPK property.</param>
        public static AuditingMaster CreateAuditingMaster(global::System.Int32 auditingMasterPK)
        {
            AuditingMaster auditingMaster = new AuditingMaster();
            auditingMaster.AuditingMasterPK = auditingMasterPK;
            return auditingMaster;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuditingMasterPK
        {
            get
            {
                return _AuditingMasterPK;
            }
            set
            {
                if (_AuditingMasterPK != value)
                {
                    OnAuditingMasterPKChanging(value);
                    ReportPropertyChanging("AuditingMasterPK");
                    _AuditingMasterPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AuditingMasterPK");
                    OnAuditingMasterPKChanged();
                }
            }
        }
        private global::System.Int32 _AuditingMasterPK;
        partial void OnAuditingMasterPKChanging(global::System.Int32 value);
        partial void OnAuditingMasterPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserFK
        {
            get
            {
                return _UserFK;
            }
            set
            {
                OnUserFKChanging(value);
                ReportPropertyChanging("UserFK");
                _UserFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserFK");
                OnUserFKChanged();
            }
        }
        private Nullable<global::System.Int32> _UserFK;
        partial void OnUserFKChanging(Nullable<global::System.Int32> value);
        partial void OnUserFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DBName
        {
            get
            {
                return _DBName;
            }
            set
            {
                OnDBNameChanging(value);
                ReportPropertyChanging("DBName");
                _DBName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DBName");
                OnDBNameChanged();
            }
        }
        private global::System.String _DBName;
        partial void OnDBNameChanging(global::System.String value);
        partial void OnDBNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TableName
        {
            get
            {
                return _TableName;
            }
            set
            {
                OnTableNameChanging(value);
                ReportPropertyChanging("TableName");
                _TableName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TableName");
                OnTableNameChanged();
            }
        }
        private global::System.String _TableName;
        partial void OnTableNameChanging(global::System.String value);
        partial void OnTableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TableNameFK
        {
            get
            {
                return _TableNameFK;
            }
            set
            {
                OnTableNameFKChanging(value);
                ReportPropertyChanging("TableNameFK");
                _TableNameFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TableNameFK");
                OnTableNameFKChanged();
            }
        }
        private Nullable<global::System.Int32> _TableNameFK;
        partial void OnTableNameFKChanging(Nullable<global::System.Int32> value);
        partial void OnTableNameFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Operation
        {
            get
            {
                return _Operation;
            }
            set
            {
                OnOperationChanging(value);
                ReportPropertyChanging("Operation");
                _Operation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Operation");
                OnOperationChanged();
            }
        }
        private global::System.String _Operation;
        partial void OnOperationChanging(global::System.String value);
        partial void OnOperationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServerName
        {
            get
            {
                return _ServerName;
            }
            set
            {
                OnServerNameChanging(value);
                ReportPropertyChanging("ServerName");
                _ServerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServerName");
                OnServerNameChanged();
            }
        }
        private global::System.String _ServerName;
        partial void OnServerNameChanging(global::System.String value);
        partial void OnServerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SessionToken
        {
            get
            {
                return _SessionToken;
            }
            set
            {
                OnSessionTokenChanging(value);
                ReportPropertyChanging("SessionToken");
                _SessionToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SessionToken");
                OnSessionTokenChanged();
            }
        }
        private global::System.String _SessionToken;
        partial void OnSessionTokenChanging(global::System.String value);
        partial void OnSessionTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RelatedEntityPK
        {
            get
            {
                return _RelatedEntityPK;
            }
            set
            {
                OnRelatedEntityPKChanging(value);
                ReportPropertyChanging("RelatedEntityPK");
                _RelatedEntityPK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelatedEntityPK");
                OnRelatedEntityPKChanged();
            }
        }
        private Nullable<global::System.Int32> _RelatedEntityPK;
        partial void OnRelatedEntityPKChanging(Nullable<global::System.Int32> value);
        partial void OnRelatedEntityPKChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_AuditingDetails_AuditingMaster", "AuditingDetails")]
        public EntityCollection<AuditingDetail> AuditingDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditingDetail>("Mateus_wcModel.FK_AuditingDetails_AuditingMaster", "AuditingDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditingDetail>("Mateus_wcModel.FK_AuditingDetails_AuditingMaster", "AuditingDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="Bank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bank object.
        /// </summary>
        /// <param name="bankPK">Initial value of the BankPK property.</param>
        public static Bank CreateBank(global::System.Int32 bankPK)
        {
            Bank bank = new Bank();
            bank.BankPK = bankPK;
            return bank;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BankPK
        {
            get
            {
                return _BankPK;
            }
            set
            {
                if (_BankPK != value)
                {
                    OnBankPKChanging(value);
                    ReportPropertyChanging("BankPK");
                    _BankPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BankPK");
                    OnBankPKChanged();
                }
            }
        }
        private global::System.Int32 _BankPK;
        partial void OnBankPKChanging(global::System.Int32 value);
        partial void OnBankPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountNumber
        {
            get
            {
                return _AccountNumber;
            }
            set
            {
                OnAccountNumberChanging(value);
                ReportPropertyChanging("AccountNumber");
                _AccountNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountNumber");
                OnAccountNumberChanged();
            }
        }
        private global::System.String _AccountNumber;
        partial void OnAccountNumberChanging(global::System.String value);
        partial void OnAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Swift
        {
            get
            {
                return _Swift;
            }
            set
            {
                OnSwiftChanging(value);
                ReportPropertyChanging("Swift");
                _Swift = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Swift");
                OnSwiftChanged();
            }
        }
        private global::System.String _Swift;
        partial void OnSwiftChanging(global::System.String value);
        partial void OnSwiftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Oib
        {
            get
            {
                return _Oib;
            }
            set
            {
                OnOibChanging(value);
                ReportPropertyChanging("Oib");
                _Oib = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Oib");
                OnOibChanged();
            }
        }
        private global::System.String _Oib;
        partial void OnOibChanging(global::System.String value);
        partial void OnOibChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Iban
        {
            get
            {
                return _Iban;
            }
            set
            {
                OnIbanChanging(value);
                ReportPropertyChanging("Iban");
                _Iban = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Iban");
                OnIbanChanged();
            }
        }
        private global::System.String _Iban;
        partial void OnIbanChanging(global::System.String value);
        partial void OnIbanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntityBanks_Banks", "LegalEntityBanks")]
        public EntityCollection<LegalEntityBank> LegalEntityBanks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntityBank>("Mateus_wcModel.FK_LegalEntityBanks_Banks", "LegalEntityBanks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntityBank>("Mateus_wcModel.FK_LegalEntityBanks_Banks", "LegalEntityBanks", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="BussinesShareBurden")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BussinesShareBurden : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BussinesShareBurden object.
        /// </summary>
        /// <param name="bussinesShareBurdenPK">Initial value of the BussinesShareBurdenPK property.</param>
        public static BussinesShareBurden CreateBussinesShareBurden(global::System.Int32 bussinesShareBurdenPK)
        {
            BussinesShareBurden bussinesShareBurden = new BussinesShareBurden();
            bussinesShareBurden.BussinesShareBurdenPK = bussinesShareBurdenPK;
            return bussinesShareBurden;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BussinesShareBurdenPK
        {
            get
            {
                return _BussinesShareBurdenPK;
            }
            set
            {
                if (_BussinesShareBurdenPK != value)
                {
                    OnBussinesShareBurdenPKChanging(value);
                    ReportPropertyChanging("BussinesShareBurdenPK");
                    _BussinesShareBurdenPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BussinesShareBurdenPK");
                    OnBussinesShareBurdenPKChanged();
                }
            }
        }
        private global::System.Int32 _BussinesShareBurdenPK;
        partial void OnBussinesShareBurdenPKChanging(global::System.Int32 value);
        partial void OnBussinesShareBurdenPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="ChangeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChangeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChangeType object.
        /// </summary>
        /// <param name="changeTypePK">Initial value of the ChangeTypePK property.</param>
        public static ChangeType CreateChangeType(global::System.Int32 changeTypePK)
        {
            ChangeType changeType = new ChangeType();
            changeType.ChangeTypePK = changeTypePK;
            return changeType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangeTypePK
        {
            get
            {
                return _ChangeTypePK;
            }
            set
            {
                if (_ChangeTypePK != value)
                {
                    OnChangeTypePKChanging(value);
                    ReportPropertyChanging("ChangeTypePK");
                    _ChangeTypePK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChangeTypePK");
                    OnChangeTypePKChanged();
                }
            }
        }
        private global::System.Int32 _ChangeTypePK;
        partial void OnChangeTypePKChanging(global::System.Int32 value);
        partial void OnChangeTypePKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="CityCommunity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CityCommunity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CityCommunity object.
        /// </summary>
        /// <param name="cityCommunityPK">Initial value of the CityCommunityPK property.</param>
        public static CityCommunity CreateCityCommunity(global::System.Int32 cityCommunityPK)
        {
            CityCommunity cityCommunity = new CityCommunity();
            cityCommunity.CityCommunityPK = cityCommunityPK;
            return cityCommunity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityCommunityPK
        {
            get
            {
                return _CityCommunityPK;
            }
            set
            {
                if (_CityCommunityPK != value)
                {
                    OnCityCommunityPKChanging(value);
                    ReportPropertyChanging("CityCommunityPK");
                    _CityCommunityPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityCommunityPK");
                    OnCityCommunityPKChanged();
                }
            }
        }
        private global::System.Int32 _CityCommunityPK;
        partial void OnCityCommunityPKChanging(global::System.Int32 value);
        partial void OnCityCommunityPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountyFK
        {
            get
            {
                return _CountyFK;
            }
            set
            {
                OnCountyFKChanging(value);
                ReportPropertyChanging("CountyFK");
                _CountyFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountyFK");
                OnCountyFKChanged();
            }
        }
        private Nullable<global::System.Int32> _CountyFK;
        partial void OnCountyFKChanging(Nullable<global::System.Int32> value);
        partial void OnCountyFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _Code;
        partial void OnCodeChanging(Nullable<global::System.Int32> value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Cities_Counties1", "County")]
        public County County
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_Cities_Counties1", "County").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_Cities_Counties1", "County").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<County> CountyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_Cities_Counties1", "County");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<County>("Mateus_wcModel.FK_Cities_Counties1", "County", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Branches_Cities", "LegalEntityBranch")]
        public EntityCollection<LegalEntityBranch> LegalEntityBranches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntityBranch>("Mateus_wcModel.FK_Branches_Cities", "LegalEntityBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntityBranch>("Mateus_wcModel.FK_Branches_Cities", "LegalEntityBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_Cities", "LegalEntity")]
        public EntityCollection<LegalEntity> LegalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_Cities", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_Cities", "LegalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Cities", "PhysicalEntity")]
        public EntityCollection<PhysicalEntity> PhysicalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Cities", "PhysicalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Cities", "PhysicalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Cities1", "PhysicalEntity")]
        public EntityCollection<PhysicalEntity> PhysicalEntities1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Cities1", "PhysicalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Cities1", "PhysicalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="CommercialCourt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CommercialCourt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CommercialCourt object.
        /// </summary>
        /// <param name="commercialCourtPK">Initial value of the CommercialCourtPK property.</param>
        public static CommercialCourt CreateCommercialCourt(global::System.Int32 commercialCourtPK)
        {
            CommercialCourt commercialCourt = new CommercialCourt();
            commercialCourt.CommercialCourtPK = commercialCourtPK;
            return commercialCourt;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommercialCourtPK
        {
            get
            {
                return _CommercialCourtPK;
            }
            set
            {
                if (_CommercialCourtPK != value)
                {
                    OnCommercialCourtPKChanging(value);
                    ReportPropertyChanging("CommercialCourtPK");
                    _CommercialCourtPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommercialCourtPK");
                    OnCommercialCourtPKChanged();
                }
            }
        }
        private global::System.Int32 _CommercialCourtPK;
        partial void OnCommercialCourtPKChanging(global::System.Int32 value);
        partial void OnCommercialCourtPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_CommercialCourts", "LegalEntity")]
        public EntityCollection<LegalEntity> LegalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_CommercialCourts", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_CommercialCourts", "LegalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="Contract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contract object.
        /// </summary>
        /// <param name="contractPK">Initial value of the ContractPK property.</param>
        public static Contract CreateContract(global::System.Int32 contractPK)
        {
            Contract contract = new Contract();
            contract.ContractPK = contractPK;
            return contract;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractPK
        {
            get
            {
                return _ContractPK;
            }
            set
            {
                if (_ContractPK != value)
                {
                    OnContractPKChanging(value);
                    ReportPropertyChanging("ContractPK");
                    _ContractPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContractPK");
                    OnContractPKChanged();
                }
            }
        }
        private global::System.Int32 _ContractPK;
        partial void OnContractPKChanging(global::System.Int32 value);
        partial void OnContractPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalEntityFK
        {
            get
            {
                return _LegalEntityFK;
            }
            set
            {
                OnLegalEntityFKChanging(value);
                ReportPropertyChanging("LegalEntityFK");
                _LegalEntityFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalEntityFK");
                OnLegalEntityFKChanged();
            }
        }
        private Nullable<global::System.Int32> _LegalEntityFK;
        partial void OnLegalEntityFKChanging(Nullable<global::System.Int32> value);
        partial void OnLegalEntityFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractValidityFK
        {
            get
            {
                return _ContractValidityFK;
            }
            set
            {
                OnContractValidityFKChanging(value);
                ReportPropertyChanging("ContractValidityFK");
                _ContractValidityFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractValidityFK");
                OnContractValidityFKChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractValidityFK;
        partial void OnContractValidityFKChanging(Nullable<global::System.Int32> value);
        partial void OnContractValidityFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ContractBegin
        {
            get
            {
                return _ContractBegin;
            }
            set
            {
                OnContractBeginChanging(value);
                ReportPropertyChanging("ContractBegin");
                _ContractBegin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractBegin");
                OnContractBeginChanged();
            }
        }
        private Nullable<global::System.DateTime> _ContractBegin;
        partial void OnContractBeginChanging(Nullable<global::System.DateTime> value);
        partial void OnContractBeginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ContractEnd
        {
            get
            {
                return _ContractEnd;
            }
            set
            {
                OnContractEndChanging(value);
                ReportPropertyChanging("ContractEnd");
                _ContractEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractEnd");
                OnContractEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _ContractEnd;
        partial void OnContractEndChanging(Nullable<global::System.DateTime> value);
        partial void OnContractEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TerminationDate
        {
            get
            {
                return _TerminationDate;
            }
            set
            {
                OnTerminationDateChanging(value);
                ReportPropertyChanging("TerminationDate");
                _TerminationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TerminationDate");
                OnTerminationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TerminationDate;
        partial void OnTerminationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTerminationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TerminationDescription
        {
            get
            {
                return _TerminationDescription;
            }
            set
            {
                OnTerminationDescriptionChanging(value);
                ReportPropertyChanging("TerminationDescription");
                _TerminationDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TerminationDescription");
                OnTerminationDescriptionChanged();
            }
        }
        private global::System.String _TerminationDescription;
        partial void OnTerminationDescriptionChanging(global::System.String value);
        partial void OnTerminationDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Terminated
        {
            get
            {
                return _Terminated;
            }
            set
            {
                OnTerminatedChanging(value);
                ReportPropertyChanging("Terminated");
                _Terminated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Terminated");
                OnTerminatedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Terminated;
        partial void OnTerminatedChanging(Nullable<global::System.Boolean> value);
        partial void OnTerminatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrencyFK
        {
            get
            {
                return _CurrencyFK;
            }
            set
            {
                OnCurrencyFKChanging(value);
                ReportPropertyChanging("CurrencyFK");
                _CurrencyFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyFK");
                OnCurrencyFKChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrencyFK;
        partial void OnCurrencyFKChanging(Nullable<global::System.Int32> value);
        partial void OnCurrencyFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MIO
        {
            get
            {
                return _MIO;
            }
            set
            {
                OnMIOChanging(value);
                ReportPropertyChanging("MIO");
                _MIO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MIO");
                OnMIOChanged();
            }
        }
        private Nullable<global::System.Decimal> _MIO;
        partial void OnMIOChanging(Nullable<global::System.Decimal> value);
        partial void OnMIOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TSI
        {
            get
            {
                return _TSI;
            }
            set
            {
                OnTSIChanging(value);
                ReportPropertyChanging("TSI");
                _TSI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TSI");
                OnTSIChanged();
            }
        }
        private Nullable<global::System.Decimal> _TSI;
        partial void OnTSIChanging(Nullable<global::System.Decimal> value);
        partial void OnTSIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GZR
        {
            get
            {
                return _GZR;
            }
            set
            {
                OnGZRChanging(value);
                ReportPropertyChanging("GZR");
                _GZR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GZR");
                OnGZRChanged();
            }
        }
        private Nullable<global::System.Decimal> _GZR;
        partial void OnGZRChanging(Nullable<global::System.Decimal> value);
        partial void OnGZRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OPL
        {
            get
            {
                return _OPL;
            }
            set
            {
                OnOPLChanging(value);
                ReportPropertyChanging("OPL");
                _OPL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OPL");
                OnOPLChanged();
            }
        }
        private Nullable<global::System.Decimal> _OPL;
        partial void OnOPLChanging(Nullable<global::System.Decimal> value);
        partial void OnOPLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AUP
        {
            get
            {
                return _AUP;
            }
            set
            {
                OnAUPChanging(value);
                ReportPropertyChanging("AUP");
                _AUP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AUP");
                OnAUPChanged();
            }
        }
        private Nullable<global::System.Decimal> _AUP;
        partial void OnAUPChanging(Nullable<global::System.Decimal> value);
        partial void OnAUPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_AnnexContracts_AnnexContracts", "AnnexContract")]
        public EntityCollection<AnnexContract> AnnexContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AnnexContract>("Mateus_wcModel.FK_AnnexContracts_AnnexContracts", "AnnexContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AnnexContract>("Mateus_wcModel.FK_AnnexContracts_AnnexContracts", "AnnexContract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Contracts_ContractValidities", "ContractValidity")]
        public ContractValidity ContractValidity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractValidity>("Mateus_wcModel.FK_Contracts_ContractValidities", "ContractValidity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractValidity>("Mateus_wcModel.FK_Contracts_ContractValidities", "ContractValidity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContractValidity> ContractValidityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractValidity>("Mateus_wcModel.FK_Contracts_ContractValidities", "ContractValidity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContractValidity>("Mateus_wcModel.FK_Contracts_ContractValidities", "ContractValidity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="ContractValidity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractValidity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractValidity object.
        /// </summary>
        /// <param name="contractValidityPK">Initial value of the ContractValidityPK property.</param>
        public static ContractValidity CreateContractValidity(global::System.Int32 contractValidityPK)
        {
            ContractValidity contractValidity = new ContractValidity();
            contractValidity.ContractValidityPK = contractValidityPK;
            return contractValidity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractValidityPK
        {
            get
            {
                return _ContractValidityPK;
            }
            set
            {
                if (_ContractValidityPK != value)
                {
                    OnContractValidityPKChanging(value);
                    ReportPropertyChanging("ContractValidityPK");
                    _ContractValidityPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContractValidityPK");
                    OnContractValidityPKChanged();
                }
            }
        }
        private global::System.Int32 _ContractValidityPK;
        partial void OnContractValidityPKChanging(global::System.Int32 value);
        partial void OnContractValidityPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_AnnexContracts_ContractValidities", "AnnexContract")]
        public EntityCollection<AnnexContract> AnnexContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AnnexContract>("Mateus_wcModel.FK_AnnexContracts_ContractValidities", "AnnexContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AnnexContract>("Mateus_wcModel.FK_AnnexContracts_ContractValidities", "AnnexContract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Contracts_ContractValidities", "Contract")]
        public EntityCollection<Contract> Contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("Mateus_wcModel.FK_Contracts_ContractValidities", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("Mateus_wcModel.FK_Contracts_ContractValidities", "Contract", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryPK">Initial value of the CountryPK property.</param>
        public static Country CreateCountry(global::System.Int32 countryPK)
        {
            Country country = new Country();
            country.CountryPK = countryPK;
            return country;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryPK
        {
            get
            {
                return _CountryPK;
            }
            set
            {
                if (_CountryPK != value)
                {
                    OnCountryPKChanging(value);
                    ReportPropertyChanging("CountryPK");
                    _CountryPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryPK");
                    OnCountryPKChanged();
                }
            }
        }
        private global::System.Int32 _CountryPK;
        partial void OnCountryPKChanging(global::System.Int32 value);
        partial void OnCountryPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameEn
        {
            get
            {
                return _NameEn;
            }
            set
            {
                OnNameEnChanging(value);
                ReportPropertyChanging("NameEn");
                _NameEn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameEn");
                OnNameEnChanged();
            }
        }
        private global::System.String _NameEn;
        partial void OnNameEnChanging(global::System.String value);
        partial void OnNameEnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Citizenship
        {
            get
            {
                return _Citizenship;
            }
            set
            {
                OnCitizenshipChanging(value);
                ReportPropertyChanging("Citizenship");
                _Citizenship = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Citizenship");
                OnCitizenshipChanged();
            }
        }
        private global::System.String _Citizenship;
        partial void OnCitizenshipChanging(global::System.String value);
        partial void OnCitizenshipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Alpha2Code
        {
            get
            {
                return _Alpha2Code;
            }
            set
            {
                OnAlpha2CodeChanging(value);
                ReportPropertyChanging("Alpha2Code");
                _Alpha2Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alpha2Code");
                OnAlpha2CodeChanged();
            }
        }
        private global::System.String _Alpha2Code;
        partial void OnAlpha2CodeChanging(global::System.String value);
        partial void OnAlpha2CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Alpha3Code
        {
            get
            {
                return _Alpha3Code;
            }
            set
            {
                OnAlpha3CodeChanging(value);
                ReportPropertyChanging("Alpha3Code");
                _Alpha3Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alpha3Code");
                OnAlpha3CodeChanged();
            }
        }
        private global::System.String _Alpha3Code;
        partial void OnAlpha3CodeChanging(global::System.String value);
        partial void OnAlpha3CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NumericCode
        {
            get
            {
                return _NumericCode;
            }
            set
            {
                OnNumericCodeChanging(value);
                ReportPropertyChanging("NumericCode");
                _NumericCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NumericCode");
                OnNumericCodeChanged();
            }
        }
        private global::System.String _NumericCode;
        partial void OnNumericCodeChanging(global::System.String value);
        partial void OnNumericCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Risk
        {
            get
            {
                return _Risk;
            }
            set
            {
                OnRiskChanging(value);
                ReportPropertyChanging("Risk");
                _Risk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Risk");
                OnRiskChanged();
            }
        }
        private Nullable<global::System.Boolean> _Risk;
        partial void OnRiskChanging(Nullable<global::System.Boolean> value);
        partial void OnRiskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Counties_Countries", "Counties")]
        public EntityCollection<County> Counties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<County>("Mateus_wcModel.FK_Counties_Countries", "Counties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<County>("Mateus_wcModel.FK_Counties_Countries", "Counties", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Branches_Countries", "LegalEntityBranch")]
        public EntityCollection<LegalEntityBranch> LegalEntityBranches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntityBranch>("Mateus_wcModel.FK_Branches_Countries", "LegalEntityBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntityBranch>("Mateus_wcModel.FK_Branches_Countries", "LegalEntityBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_Countries", "LegalEntity")]
        public EntityCollection<LegalEntity> LegalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_Countries", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_Countries", "LegalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Countries", "PhysicalEntity")]
        public EntityCollection<PhysicalEntity> PhysicalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Countries", "PhysicalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Countries", "PhysicalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Countries1", "PhysicalEntity")]
        public EntityCollection<PhysicalEntity> PhysicalEntities1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Countries1", "PhysicalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Countries1", "PhysicalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Countries2", "PhysicalEntity")]
        public EntityCollection<PhysicalEntity> PhysicalEntities2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Countries2", "PhysicalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Countries2", "PhysicalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Countries3", "PhysicalEntity")]
        public EntityCollection<PhysicalEntity> PhysicalEntities3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Countries3", "PhysicalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Countries3", "PhysicalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="County")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class County : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new County object.
        /// </summary>
        /// <param name="countyPK">Initial value of the CountyPK property.</param>
        public static County CreateCounty(global::System.Int32 countyPK)
        {
            County county = new County();
            county.CountyPK = countyPK;
            return county;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountyPK
        {
            get
            {
                return _CountyPK;
            }
            set
            {
                if (_CountyPK != value)
                {
                    OnCountyPKChanging(value);
                    ReportPropertyChanging("CountyPK");
                    _CountyPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountyPK");
                    OnCountyPKChanged();
                }
            }
        }
        private global::System.Int32 _CountyPK;
        partial void OnCountyPKChanging(global::System.Int32 value);
        partial void OnCountyPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryFK
        {
            get
            {
                return _CountryFK;
            }
            set
            {
                OnCountryFKChanging(value);
                ReportPropertyChanging("CountryFK");
                _CountryFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryFK");
                OnCountryFKChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryFK;
        partial void OnCountryFKChanging(Nullable<global::System.Int32> value);
        partial void OnCountryFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Counties_Countries", "Countries")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_Counties_Countries", "Countries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_Counties_Countries", "Countries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_Counties_Countries", "Countries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("Mateus_wcModel.FK_Counties_Countries", "Countries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PostalOffices_Counties", "PostalOffices")]
        public EntityCollection<PostalOffice> PostalOffices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PostalOffice>("Mateus_wcModel.FK_PostalOffices_Counties", "PostalOffices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PostalOffice>("Mateus_wcModel.FK_PostalOffices_Counties", "PostalOffices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Cities_Counties1", "CitiesCommunity")]
        public EntityCollection<CityCommunity> CitiesCommunities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CityCommunity>("Mateus_wcModel.FK_Cities_Counties1", "CitiesCommunity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CityCommunity>("Mateus_wcModel.FK_Cities_Counties1", "CitiesCommunity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Branches_Counties", "LegalEntityBranch")]
        public EntityCollection<LegalEntityBranch> LegalEntityBranches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntityBranch>("Mateus_wcModel.FK_Branches_Counties", "LegalEntityBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntityBranch>("Mateus_wcModel.FK_Branches_Counties", "LegalEntityBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_Counties", "LegalEntity")]
        public EntityCollection<LegalEntity> LegalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_Counties", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_Counties", "LegalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Counties", "PhysicalEntity")]
        public EntityCollection<PhysicalEntity> PhysicalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Counties", "PhysicalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Counties", "PhysicalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Counties1", "PhysicalEntity")]
        public EntityCollection<PhysicalEntity> PhysicalEntities1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Counties1", "PhysicalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Counties1", "PhysicalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Currency object.
        /// </summary>
        /// <param name="currencyPK">Initial value of the CurrencyPK property.</param>
        public static Currency CreateCurrency(global::System.Int32 currencyPK)
        {
            Currency currency = new Currency();
            currency.CurrencyPK = currencyPK;
            return currency;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyPK
        {
            get
            {
                return _CurrencyPK;
            }
            set
            {
                if (_CurrencyPK != value)
                {
                    OnCurrencyPKChanging(value);
                    ReportPropertyChanging("CurrencyPK");
                    _CurrencyPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CurrencyPK");
                    OnCurrencyPKChanged();
                }
            }
        }
        private global::System.Int32 _CurrencyPK;
        partial void OnCurrencyPKChanging(global::System.Int32 value);
        partial void OnCurrencyPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sign
        {
            get
            {
                return _Sign;
            }
            set
            {
                OnSignChanging(value);
                ReportPropertyChanging("Sign");
                _Sign = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sign");
                OnSignChanged();
            }
        }
        private global::System.String _Sign;
        partial void OnSignChanging(global::System.String value);
        partial void OnSignChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="Form")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Form : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Form object.
        /// </summary>
        /// <param name="formPK">Initial value of the FormPK property.</param>
        public static Form CreateForm(global::System.Int32 formPK)
        {
            Form form = new Form();
            form.FormPK = formPK;
            return form;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormPK
        {
            get
            {
                return _FormPK;
            }
            set
            {
                if (_FormPK != value)
                {
                    OnFormPKChanging(value);
                    ReportPropertyChanging("FormPK");
                    _FormPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FormPK");
                    OnFormPKChanged();
                }
            }
        }
        private global::System.Int32 _FormPK;
        partial void OnFormPKChanging(global::System.Int32 value);
        partial void OnFormPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_Forms", "LegalEntity")]
        public EntityCollection<LegalEntity> LegalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_Forms", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_Forms", "LegalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="FulfilledFactor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FulfilledFactor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FulfilledFactor object.
        /// </summary>
        /// <param name="fulfilledFactorPK">Initial value of the FulfilledFactorPK property.</param>
        public static FulfilledFactor CreateFulfilledFactor(global::System.Int32 fulfilledFactorPK)
        {
            FulfilledFactor fulfilledFactor = new FulfilledFactor();
            fulfilledFactor.FulfilledFactorPK = fulfilledFactorPK;
            return fulfilledFactor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FulfilledFactorPK
        {
            get
            {
                return _FulfilledFactorPK;
            }
            set
            {
                if (_FulfilledFactorPK != value)
                {
                    OnFulfilledFactorPKChanging(value);
                    ReportPropertyChanging("FulfilledFactorPK");
                    _FulfilledFactorPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FulfilledFactorPK");
                    OnFulfilledFactorPKChanged();
                }
            }
        }
        private global::System.Int32 _FulfilledFactorPK;
        partial void OnFulfilledFactorPKChanging(global::System.Int32 value);
        partial void OnFulfilledFactorPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="LegalEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LegalEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LegalEntity object.
        /// </summary>
        /// <param name="legalEntityPK">Initial value of the LegalEntityPK property.</param>
        public static LegalEntity CreateLegalEntity(global::System.Int32 legalEntityPK)
        {
            LegalEntity legalEntity = new LegalEntity();
            legalEntity.LegalEntityPK = legalEntityPK;
            return legalEntity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LegalEntityPK
        {
            get
            {
                return _LegalEntityPK;
            }
            set
            {
                if (_LegalEntityPK != value)
                {
                    OnLegalEntityPKChanging(value);
                    ReportPropertyChanging("LegalEntityPK");
                    _LegalEntityPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LegalEntityPK");
                    OnLegalEntityPKChanged();
                }
            }
        }
        private global::System.Int32 _LegalEntityPK;
        partial void OnLegalEntityPKChanging(global::System.Int32 value);
        partial void OnLegalEntityPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OIB
        {
            get
            {
                return _OIB;
            }
            set
            {
                OnOIBChanging(value);
                ReportPropertyChanging("OIB");
                _OIB = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OIB");
                OnOIBChanged();
            }
        }
        private global::System.String _OIB;
        partial void OnOIBChanging(global::System.String value);
        partial void OnOIBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MB
        {
            get
            {
                return _MB;
            }
            set
            {
                OnMBChanging(value);
                ReportPropertyChanging("MB");
                _MB = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MB");
                OnMBChanged();
            }
        }
        private global::System.String _MB;
        partial void OnMBChanging(global::System.String value);
        partial void OnMBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MBS
        {
            get
            {
                return _MBS;
            }
            set
            {
                OnMBSChanging(value);
                ReportPropertyChanging("MBS");
                _MBS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MBS");
                OnMBSChanged();
            }
        }
        private global::System.String _MBS;
        partial void OnMBSChanging(global::System.String value);
        partial void OnMBSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActivityFK
        {
            get
            {
                return _ActivityFK;
            }
            set
            {
                OnActivityFKChanging(value);
                ReportPropertyChanging("ActivityFK");
                _ActivityFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityFK");
                OnActivityFKChanged();
            }
        }
        private Nullable<global::System.Int32> _ActivityFK;
        partial void OnActivityFKChanging(Nullable<global::System.Int32> value);
        partial void OnActivityFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActivityDescription
        {
            get
            {
                return _ActivityDescription;
            }
            set
            {
                OnActivityDescriptionChanging(value);
                ReportPropertyChanging("ActivityDescription");
                _ActivityDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActivityDescription");
                OnActivityDescriptionChanged();
            }
        }
        private global::System.String _ActivityDescription;
        partial void OnActivityDescriptionChanging(global::System.String value);
        partial void OnActivityDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FormFK
        {
            get
            {
                return _FormFK;
            }
            set
            {
                OnFormFKChanging(value);
                ReportPropertyChanging("FormFK");
                _FormFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormFK");
                OnFormFKChanged();
            }
        }
        private Nullable<global::System.Int32> _FormFK;
        partial void OnFormFKChanging(Nullable<global::System.Int32> value);
        partial void OnFormFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FundamentalCapital
        {
            get
            {
                return _FundamentalCapital;
            }
            set
            {
                OnFundamentalCapitalChanging(value);
                ReportPropertyChanging("FundamentalCapital");
                _FundamentalCapital = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundamentalCapital");
                OnFundamentalCapitalChanged();
            }
        }
        private Nullable<global::System.Decimal> _FundamentalCapital;
        partial void OnFundamentalCapitalChanging(Nullable<global::System.Decimal> value);
        partial void OnFundamentalCapitalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryFK
        {
            get
            {
                return _CountryFK;
            }
            set
            {
                OnCountryFKChanging(value);
                ReportPropertyChanging("CountryFK");
                _CountryFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryFK");
                OnCountryFKChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryFK;
        partial void OnCountryFKChanging(Nullable<global::System.Int32> value);
        partial void OnCountryFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountyFK
        {
            get
            {
                return _CountyFK;
            }
            set
            {
                OnCountyFKChanging(value);
                ReportPropertyChanging("CountyFK");
                _CountyFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountyFK");
                OnCountyFKChanged();
            }
        }
        private Nullable<global::System.Int32> _CountyFK;
        partial void OnCountyFKChanging(Nullable<global::System.Int32> value);
        partial void OnCountyFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityCommunityFK
        {
            get
            {
                return _CityCommunityFK;
            }
            set
            {
                OnCityCommunityFKChanging(value);
                ReportPropertyChanging("CityCommunityFK");
                _CityCommunityFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityCommunityFK");
                OnCityCommunityFKChanged();
            }
        }
        private Nullable<global::System.Int32> _CityCommunityFK;
        partial void OnCityCommunityFKChanging(Nullable<global::System.Int32> value);
        partial void OnCityCommunityFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StreetName
        {
            get
            {
                return _StreetName;
            }
            set
            {
                OnStreetNameChanging(value);
                ReportPropertyChanging("StreetName");
                _StreetName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StreetName");
                OnStreetNameChanged();
            }
        }
        private global::System.String _StreetName;
        partial void OnStreetNameChanging(global::System.String value);
        partial void OnStreetNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PostalOfficeFK
        {
            get
            {
                return _PostalOfficeFK;
            }
            set
            {
                OnPostalOfficeFKChanging(value);
                ReportPropertyChanging("PostalOfficeFK");
                _PostalOfficeFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostalOfficeFK");
                OnPostalOfficeFKChanged();
            }
        }
        private Nullable<global::System.Int32> _PostalOfficeFK;
        partial void OnPostalOfficeFKChanging(Nullable<global::System.Int32> value);
        partial void OnPostalOfficeFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlaceFK
        {
            get
            {
                return _PlaceFK;
            }
            set
            {
                OnPlaceFKChanging(value);
                ReportPropertyChanging("PlaceFK");
                _PlaceFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaceFK");
                OnPlaceFKChanged();
            }
        }
        private Nullable<global::System.Int32> _PlaceFK;
        partial void OnPlaceFKChanging(Nullable<global::System.Int32> value);
        partial void OnPlaceFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Place
        {
            get
            {
                return _Place;
            }
            set
            {
                OnPlaceChanging(value);
                ReportPropertyChanging("Place");
                _Place = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Place");
                OnPlaceChanged();
            }
        }
        private global::System.String _Place;
        partial void OnPlaceChanging(global::System.String value);
        partial void OnPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegionalOfficeFK
        {
            get
            {
                return _RegionalOfficeFK;
            }
            set
            {
                OnRegionalOfficeFKChanging(value);
                ReportPropertyChanging("RegionalOfficeFK");
                _RegionalOfficeFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionalOfficeFK");
                OnRegionalOfficeFKChanged();
            }
        }
        private Nullable<global::System.Int32> _RegionalOfficeFK;
        partial void OnRegionalOfficeFKChanging(Nullable<global::System.Int32> value);
        partial void OnRegionalOfficeFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubstationFK
        {
            get
            {
                return _SubstationFK;
            }
            set
            {
                OnSubstationFKChanging(value);
                ReportPropertyChanging("SubstationFK");
                _SubstationFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubstationFK");
                OnSubstationFKChanged();
            }
        }
        private Nullable<global::System.Int32> _SubstationFK;
        partial void OnSubstationFKChanging(Nullable<global::System.Int32> value);
        partial void OnSubstationFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfRegistration
        {
            get
            {
                return _DateOfRegistration;
            }
            set
            {
                OnDateOfRegistrationChanging(value);
                ReportPropertyChanging("DateOfRegistration");
                _DateOfRegistration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfRegistration");
                OnDateOfRegistrationChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfRegistration;
        partial void OnDateOfRegistrationChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfRegistrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CommercialCourtFK
        {
            get
            {
                return _CommercialCourtFK;
            }
            set
            {
                OnCommercialCourtFKChanging(value);
                ReportPropertyChanging("CommercialCourtFK");
                _CommercialCourtFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommercialCourtFK");
                OnCommercialCourtFKChanged();
            }
        }
        private Nullable<global::System.Int32> _CommercialCourtFK;
        partial void OnCommercialCourtFKChanging(Nullable<global::System.Int32> value);
        partial void OnCommercialCourtFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxFK
        {
            get
            {
                return _TaxFK;
            }
            set
            {
                OnTaxFKChanging(value);
                ReportPropertyChanging("TaxFK");
                _TaxFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxFK");
                OnTaxFKChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxFK;
        partial void OnTaxFKChanging(Nullable<global::System.Int32> value);
        partial void OnTaxFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMail
        {
            get
            {
                return _EMail;
            }
            set
            {
                OnEMailChanging(value);
                ReportPropertyChanging("EMail");
                _EMail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMail");
                OnEMailChanged();
            }
        }
        private global::System.String _EMail;
        partial void OnEMailChanging(global::System.String value);
        partial void OnEMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FirstContactDate
        {
            get
            {
                return _FirstContactDate;
            }
            set
            {
                OnFirstContactDateChanging(value);
                ReportPropertyChanging("FirstContactDate");
                _FirstContactDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstContactDate");
                OnFirstContactDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FirstContactDate;
        partial void OnFirstContactDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFirstContactDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TouristOffice
        {
            get
            {
                return _TouristOffice;
            }
            set
            {
                OnTouristOfficeChanging(value);
                ReportPropertyChanging("TouristOffice");
                _TouristOffice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TouristOffice");
                OnTouristOfficeChanged();
            }
        }
        private Nullable<global::System.Boolean> _TouristOffice;
        partial void OnTouristOfficeChanging(Nullable<global::System.Boolean> value);
        partial void OnTouristOfficeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TouristOfficeDescription
        {
            get
            {
                return _TouristOfficeDescription;
            }
            set
            {
                OnTouristOfficeDescriptionChanging(value);
                ReportPropertyChanging("TouristOfficeDescription");
                _TouristOfficeDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TouristOfficeDescription");
                OnTouristOfficeDescriptionChanged();
            }
        }
        private global::System.String _TouristOfficeDescription;
        partial void OnTouristOfficeDescriptionChanging(global::System.String value);
        partial void OnTouristOfficeDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> MonumentAnnuity
        {
            get
            {
                return _MonumentAnnuity;
            }
            set
            {
                OnMonumentAnnuityChanging(value);
                ReportPropertyChanging("MonumentAnnuity");
                _MonumentAnnuity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonumentAnnuity");
                OnMonumentAnnuityChanged();
            }
        }
        private Nullable<global::System.Boolean> _MonumentAnnuity;
        partial void OnMonumentAnnuityChanging(Nullable<global::System.Boolean> value);
        partial void OnMonumentAnnuityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MonumentAnnuityDescription
        {
            get
            {
                return _MonumentAnnuityDescription;
            }
            set
            {
                OnMonumentAnnuityDescriptionChanging(value);
                ReportPropertyChanging("MonumentAnnuityDescription");
                _MonumentAnnuityDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MonumentAnnuityDescription");
                OnMonumentAnnuityDescriptionChanged();
            }
        }
        private global::System.String _MonumentAnnuityDescription;
        partial void OnMonumentAnnuityDescriptionChanging(global::System.String value);
        partial void OnMonumentAnnuityDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfEmployees
        {
            get
            {
                return _NumberOfEmployees;
            }
            set
            {
                OnNumberOfEmployeesChanging(value);
                ReportPropertyChanging("NumberOfEmployees");
                _NumberOfEmployees = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfEmployees");
                OnNumberOfEmployeesChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfEmployees;
        partial void OnNumberOfEmployeesChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfEmployeesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MIORRegistrationNumber
        {
            get
            {
                return _MIORRegistrationNumber;
            }
            set
            {
                OnMIORRegistrationNumberChanging(value);
                ReportPropertyChanging("MIORRegistrationNumber");
                _MIORRegistrationNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MIORRegistrationNumber");
                OnMIORRegistrationNumberChanged();
            }
        }
        private global::System.String _MIORRegistrationNumber;
        partial void OnMIORRegistrationNumberChanging(global::System.String value);
        partial void OnMIORRegistrationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HZZOObligationNumber
        {
            get
            {
                return _HZZOObligationNumber;
            }
            set
            {
                OnHZZOObligationNumberChanging(value);
                ReportPropertyChanging("HZZOObligationNumber");
                _HZZOObligationNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HZZOObligationNumber");
                OnHZZOObligationNumberChanged();
            }
        }
        private global::System.String _HZZOObligationNumber;
        partial void OnHZZOObligationNumberChanging(global::System.String value);
        partial void OnHZZOObligationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HZZOBussinesEntityCode
        {
            get
            {
                return _HZZOBussinesEntityCode;
            }
            set
            {
                OnHZZOBussinesEntityCodeChanging(value);
                ReportPropertyChanging("HZZOBussinesEntityCode");
                _HZZOBussinesEntityCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HZZOBussinesEntityCode");
                OnHZZOBussinesEntityCodeChanged();
            }
        }
        private global::System.String _HZZOBussinesEntityCode;
        partial void OnHZZOBussinesEntityCodeChanging(global::System.String value);
        partial void OnHZZOBussinesEntityCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private Nullable<global::System.Boolean> _Owner;
        partial void OnOwnerChanging(Nullable<global::System.Boolean> value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private Nullable<global::System.Boolean> _Company;
        partial void OnCompanyChanging(Nullable<global::System.Boolean> value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReferentFK
        {
            get
            {
                return _ReferentFK;
            }
            set
            {
                OnReferentFKChanging(value);
                ReportPropertyChanging("ReferentFK");
                _ReferentFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferentFK");
                OnReferentFKChanged();
            }
        }
        private Nullable<global::System.Int32> _ReferentFK;
        partial void OnReferentFKChanging(Nullable<global::System.Int32> value);
        partial void OnReferentFKChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_Activities", "Activity")]
        public Activity Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Mateus_wcModel.FK_LegalEntities_Activities", "Activity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Mateus_wcModel.FK_LegalEntities_Activities", "Activity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Activity> ActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("Mateus_wcModel.FK_LegalEntities_Activities", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Activity>("Mateus_wcModel.FK_LegalEntities_Activities", "Activity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_Cities", "CityCommunity")]
        public CityCommunity CitiesCommunity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityCommunity>("Mateus_wcModel.FK_LegalEntities_Cities", "CityCommunity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityCommunity>("Mateus_wcModel.FK_LegalEntities_Cities", "CityCommunity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CityCommunity> CitiesCommunityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityCommunity>("Mateus_wcModel.FK_LegalEntities_Cities", "CityCommunity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CityCommunity>("Mateus_wcModel.FK_LegalEntities_Cities", "CityCommunity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_CommercialCourts", "CommercialCourt")]
        public CommercialCourt CommercialCourt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommercialCourt>("Mateus_wcModel.FK_LegalEntities_CommercialCourts", "CommercialCourt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommercialCourt>("Mateus_wcModel.FK_LegalEntities_CommercialCourts", "CommercialCourt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CommercialCourt> CommercialCourtReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommercialCourt>("Mateus_wcModel.FK_LegalEntities_CommercialCourts", "CommercialCourt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CommercialCourt>("Mateus_wcModel.FK_LegalEntities_CommercialCourts", "CommercialCourt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_Counties", "County")]
        public County County
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_LegalEntities_Counties", "County").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_LegalEntities_Counties", "County").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<County> CountyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_LegalEntities_Counties", "County");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<County>("Mateus_wcModel.FK_LegalEntities_Counties", "County", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_Countries", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_LegalEntities_Countries", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_LegalEntities_Countries", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_LegalEntities_Countries", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("Mateus_wcModel.FK_LegalEntities_Countries", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_Forms", "Form")]
        public Form Form
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("Mateus_wcModel.FK_LegalEntities_Forms", "Form").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("Mateus_wcModel.FK_LegalEntities_Forms", "Form").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Form> FormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("Mateus_wcModel.FK_LegalEntities_Forms", "Form");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Form>("Mateus_wcModel.FK_LegalEntities_Forms", "Form", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_CompanyLegalRepresentative_LegalEntities", "LegalEntityLegalRepresentative")]
        public EntityCollection<LegalEntityLegalRepresentative> LegalEntityLegalRepresentatives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntityLegalRepresentative>("Mateus_wcModel.FK_CompanyLegalRepresentative_LegalEntities", "LegalEntityLegalRepresentative");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntityLegalRepresentative>("Mateus_wcModel.FK_CompanyLegalRepresentative_LegalEntities", "LegalEntityLegalRepresentative", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_Places", "Place")]
        public Place Place1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("Mateus_wcModel.FK_LegalEntities_Places", "Place").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("Mateus_wcModel.FK_LegalEntities_Places", "Place").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Place> Place1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("Mateus_wcModel.FK_LegalEntities_Places", "Place");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Place>("Mateus_wcModel.FK_LegalEntities_Places", "Place", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_PostalOffices", "PostalOffice")]
        public PostalOffice PostalOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalOffice>("Mateus_wcModel.FK_LegalEntities_PostalOffices", "PostalOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalOffice>("Mateus_wcModel.FK_LegalEntities_PostalOffices", "PostalOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PostalOffice> PostalOfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalOffice>("Mateus_wcModel.FK_LegalEntities_PostalOffices", "PostalOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PostalOffice>("Mateus_wcModel.FK_LegalEntities_PostalOffices", "PostalOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_RegionalOffices", "RegionalOffice")]
        public RegionalOffice RegionalOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionalOffice>("Mateus_wcModel.FK_LegalEntities_RegionalOffices", "RegionalOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionalOffice>("Mateus_wcModel.FK_LegalEntities_RegionalOffices", "RegionalOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegionalOffice> RegionalOfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionalOffice>("Mateus_wcModel.FK_LegalEntities_RegionalOffices", "RegionalOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegionalOffice>("Mateus_wcModel.FK_LegalEntities_RegionalOffices", "RegionalOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_Substations", "Substation")]
        public Substation Substation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Substation>("Mateus_wcModel.FK_LegalEntities_Substations", "Substation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Substation>("Mateus_wcModel.FK_LegalEntities_Substations", "Substation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Substation> SubstationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Substation>("Mateus_wcModel.FK_LegalEntities_Substations", "Substation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Substation>("Mateus_wcModel.FK_LegalEntities_Substations", "Substation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_Taxes", "Tax")]
        public Tax Tax
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tax>("Mateus_wcModel.FK_LegalEntities_Taxes", "Tax").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tax>("Mateus_wcModel.FK_LegalEntities_Taxes", "Tax").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tax> TaxReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tax>("Mateus_wcModel.FK_LegalEntities_Taxes", "Tax");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tax>("Mateus_wcModel.FK_LegalEntities_Taxes", "Tax", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntityBanks_LegalEntities", "LegalEntityBank")]
        public EntityCollection<LegalEntityBank> LegalEntityBanks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntityBank>("Mateus_wcModel.FK_LegalEntityBanks_LegalEntities", "LegalEntityBank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntityBank>("Mateus_wcModel.FK_LegalEntityBanks_LegalEntities", "LegalEntityBank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntityBranches_LegalEntities", "LegalEntityBranch")]
        public EntityCollection<LegalEntityBranch> LegalEntityBranches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntityBranch>("Mateus_wcModel.FK_LegalEntityBranches_LegalEntities", "LegalEntityBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntityBranch>("Mateus_wcModel.FK_LegalEntityBranches_LegalEntities", "LegalEntityBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_PhysicalEntities", "PhysicalEntity")]
        public PhysicalEntity PhysicalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhysicalEntity>("Mateus_wcModel.FK_LegalEntities_PhysicalEntities", "PhysicalEntity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhysicalEntity>("Mateus_wcModel.FK_LegalEntities_PhysicalEntities", "PhysicalEntity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhysicalEntity> PhysicalEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhysicalEntity>("Mateus_wcModel.FK_LegalEntities_PhysicalEntities", "PhysicalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhysicalEntity>("Mateus_wcModel.FK_LegalEntities_PhysicalEntities", "PhysicalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="LegalEntityBank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LegalEntityBank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LegalEntityBank object.
        /// </summary>
        /// <param name="legalEntityBankPK">Initial value of the LegalEntityBankPK property.</param>
        public static LegalEntityBank CreateLegalEntityBank(global::System.Int32 legalEntityBankPK)
        {
            LegalEntityBank legalEntityBank = new LegalEntityBank();
            legalEntityBank.LegalEntityBankPK = legalEntityBankPK;
            return legalEntityBank;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LegalEntityBankPK
        {
            get
            {
                return _LegalEntityBankPK;
            }
            set
            {
                if (_LegalEntityBankPK != value)
                {
                    OnLegalEntityBankPKChanging(value);
                    ReportPropertyChanging("LegalEntityBankPK");
                    _LegalEntityBankPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LegalEntityBankPK");
                    OnLegalEntityBankPKChanged();
                }
            }
        }
        private global::System.Int32 _LegalEntityBankPK;
        partial void OnLegalEntityBankPKChanging(global::System.Int32 value);
        partial void OnLegalEntityBankPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalEntityFK
        {
            get
            {
                return _LegalEntityFK;
            }
            set
            {
                OnLegalEntityFKChanging(value);
                ReportPropertyChanging("LegalEntityFK");
                _LegalEntityFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalEntityFK");
                OnLegalEntityFKChanged();
            }
        }
        private Nullable<global::System.Int32> _LegalEntityFK;
        partial void OnLegalEntityFKChanging(Nullable<global::System.Int32> value);
        partial void OnLegalEntityFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BankFK
        {
            get
            {
                return _BankFK;
            }
            set
            {
                OnBankFKChanging(value);
                ReportPropertyChanging("BankFK");
                _BankFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BankFK");
                OnBankFKChanged();
            }
        }
        private Nullable<global::System.Int32> _BankFK;
        partial void OnBankFKChanging(Nullable<global::System.Int32> value);
        partial void OnBankFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Iban
        {
            get
            {
                return _Iban;
            }
            set
            {
                OnIbanChanging(value);
                ReportPropertyChanging("Iban");
                _Iban = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Iban");
                OnIbanChanged();
            }
        }
        private global::System.String _Iban;
        partial void OnIbanChanging(global::System.String value);
        partial void OnIbanChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntityBanks_Banks", "Bank")]
        public Bank Banks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("Mateus_wcModel.FK_LegalEntityBanks_Banks", "Bank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("Mateus_wcModel.FK_LegalEntityBanks_Banks", "Bank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bank> BanksReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("Mateus_wcModel.FK_LegalEntityBanks_Banks", "Bank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bank>("Mateus_wcModel.FK_LegalEntityBanks_Banks", "Bank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntityBanks_LegalEntities", "LegalEntity")]
        public LegalEntity LegalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("Mateus_wcModel.FK_LegalEntityBanks_LegalEntities", "LegalEntity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("Mateus_wcModel.FK_LegalEntityBanks_LegalEntities", "LegalEntity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LegalEntity> LegalEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("Mateus_wcModel.FK_LegalEntityBanks_LegalEntities", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LegalEntity>("Mateus_wcModel.FK_LegalEntityBanks_LegalEntities", "LegalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="LegalEntityBranch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LegalEntityBranch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LegalEntityBranch object.
        /// </summary>
        /// <param name="legalEntityBranchPK">Initial value of the LegalEntityBranchPK property.</param>
        public static LegalEntityBranch CreateLegalEntityBranch(global::System.Int32 legalEntityBranchPK)
        {
            LegalEntityBranch legalEntityBranch = new LegalEntityBranch();
            legalEntityBranch.LegalEntityBranchPK = legalEntityBranchPK;
            return legalEntityBranch;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LegalEntityBranchPK
        {
            get
            {
                return _LegalEntityBranchPK;
            }
            set
            {
                if (_LegalEntityBranchPK != value)
                {
                    OnLegalEntityBranchPKChanging(value);
                    ReportPropertyChanging("LegalEntityBranchPK");
                    _LegalEntityBranchPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LegalEntityBranchPK");
                    OnLegalEntityBranchPKChanged();
                }
            }
        }
        private global::System.Int32 _LegalEntityBranchPK;
        partial void OnLegalEntityBranchPKChanging(global::System.Int32 value);
        partial void OnLegalEntityBranchPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalEntityFK
        {
            get
            {
                return _LegalEntityFK;
            }
            set
            {
                OnLegalEntityFKChanging(value);
                ReportPropertyChanging("LegalEntityFK");
                _LegalEntityFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalEntityFK");
                OnLegalEntityFKChanged();
            }
        }
        private Nullable<global::System.Int32> _LegalEntityFK;
        partial void OnLegalEntityFKChanging(Nullable<global::System.Int32> value);
        partial void OnLegalEntityFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryFK
        {
            get
            {
                return _CountryFK;
            }
            set
            {
                OnCountryFKChanging(value);
                ReportPropertyChanging("CountryFK");
                _CountryFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryFK");
                OnCountryFKChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryFK;
        partial void OnCountryFKChanging(Nullable<global::System.Int32> value);
        partial void OnCountryFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountyFK
        {
            get
            {
                return _CountyFK;
            }
            set
            {
                OnCountyFKChanging(value);
                ReportPropertyChanging("CountyFK");
                _CountyFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountyFK");
                OnCountyFKChanged();
            }
        }
        private Nullable<global::System.Int32> _CountyFK;
        partial void OnCountyFKChanging(Nullable<global::System.Int32> value);
        partial void OnCountyFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityCommunityFK
        {
            get
            {
                return _CityCommunityFK;
            }
            set
            {
                OnCityCommunityFKChanging(value);
                ReportPropertyChanging("CityCommunityFK");
                _CityCommunityFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityCommunityFK");
                OnCityCommunityFKChanged();
            }
        }
        private Nullable<global::System.Int32> _CityCommunityFK;
        partial void OnCityCommunityFKChanging(Nullable<global::System.Int32> value);
        partial void OnCityCommunityFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PostalOfficeFK
        {
            get
            {
                return _PostalOfficeFK;
            }
            set
            {
                OnPostalOfficeFKChanging(value);
                ReportPropertyChanging("PostalOfficeFK");
                _PostalOfficeFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostalOfficeFK");
                OnPostalOfficeFKChanged();
            }
        }
        private Nullable<global::System.Int32> _PostalOfficeFK;
        partial void OnPostalOfficeFKChanging(Nullable<global::System.Int32> value);
        partial void OnPostalOfficeFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlaceFK
        {
            get
            {
                return _PlaceFK;
            }
            set
            {
                OnPlaceFKChanging(value);
                ReportPropertyChanging("PlaceFK");
                _PlaceFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaceFK");
                OnPlaceFKChanged();
            }
        }
        private Nullable<global::System.Int32> _PlaceFK;
        partial void OnPlaceFKChanging(Nullable<global::System.Int32> value);
        partial void OnPlaceFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StreetName
        {
            get
            {
                return _StreetName;
            }
            set
            {
                OnStreetNameChanging(value);
                ReportPropertyChanging("StreetName");
                _StreetName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StreetName");
                OnStreetNameChanged();
            }
        }
        private global::System.String _StreetName;
        partial void OnStreetNameChanging(global::System.String value);
        partial void OnStreetNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMail
        {
            get
            {
                return _EMail;
            }
            set
            {
                OnEMailChanging(value);
                ReportPropertyChanging("EMail");
                _EMail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMail");
                OnEMailChanged();
            }
        }
        private global::System.String _EMail;
        partial void OnEMailChanging(global::System.String value);
        partial void OnEMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Branches_Cities", "CityCommunity")]
        public CityCommunity CitiesCommunity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityCommunity>("Mateus_wcModel.FK_Branches_Cities", "CityCommunity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityCommunity>("Mateus_wcModel.FK_Branches_Cities", "CityCommunity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CityCommunity> CitiesCommunityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityCommunity>("Mateus_wcModel.FK_Branches_Cities", "CityCommunity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CityCommunity>("Mateus_wcModel.FK_Branches_Cities", "CityCommunity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Branches_Counties", "County")]
        public County County
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_Branches_Counties", "County").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_Branches_Counties", "County").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<County> CountyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_Branches_Counties", "County");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<County>("Mateus_wcModel.FK_Branches_Counties", "County", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Branches_Countries", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_Branches_Countries", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_Branches_Countries", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_Branches_Countries", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("Mateus_wcModel.FK_Branches_Countries", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntityBranches_LegalEntities", "LegalEntity")]
        public LegalEntity LegalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("Mateus_wcModel.FK_LegalEntityBranches_LegalEntities", "LegalEntity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("Mateus_wcModel.FK_LegalEntityBranches_LegalEntities", "LegalEntity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LegalEntity> LegalEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("Mateus_wcModel.FK_LegalEntityBranches_LegalEntities", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LegalEntity>("Mateus_wcModel.FK_LegalEntityBranches_LegalEntities", "LegalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Branches_Places", "Place")]
        public Place Place
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("Mateus_wcModel.FK_Branches_Places", "Place").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("Mateus_wcModel.FK_Branches_Places", "Place").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Place> PlaceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("Mateus_wcModel.FK_Branches_Places", "Place");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Place>("Mateus_wcModel.FK_Branches_Places", "Place", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Branches_PostalOffices", "PostalOffice")]
        public PostalOffice PostalOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalOffice>("Mateus_wcModel.FK_Branches_PostalOffices", "PostalOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalOffice>("Mateus_wcModel.FK_Branches_PostalOffices", "PostalOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PostalOffice> PostalOfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalOffice>("Mateus_wcModel.FK_Branches_PostalOffices", "PostalOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PostalOffice>("Mateus_wcModel.FK_Branches_PostalOffices", "PostalOffice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="LegalEntityLegalRepresentative")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LegalEntityLegalRepresentative : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LegalEntityLegalRepresentative object.
        /// </summary>
        /// <param name="legalEntityLegalRepresentativePK">Initial value of the LegalEntityLegalRepresentativePK property.</param>
        public static LegalEntityLegalRepresentative CreateLegalEntityLegalRepresentative(global::System.Int32 legalEntityLegalRepresentativePK)
        {
            LegalEntityLegalRepresentative legalEntityLegalRepresentative = new LegalEntityLegalRepresentative();
            legalEntityLegalRepresentative.LegalEntityLegalRepresentativePK = legalEntityLegalRepresentativePK;
            return legalEntityLegalRepresentative;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LegalEntityLegalRepresentativePK
        {
            get
            {
                return _LegalEntityLegalRepresentativePK;
            }
            set
            {
                if (_LegalEntityLegalRepresentativePK != value)
                {
                    OnLegalEntityLegalRepresentativePKChanging(value);
                    ReportPropertyChanging("LegalEntityLegalRepresentativePK");
                    _LegalEntityLegalRepresentativePK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LegalEntityLegalRepresentativePK");
                    OnLegalEntityLegalRepresentativePKChanged();
                }
            }
        }
        private global::System.Int32 _LegalEntityLegalRepresentativePK;
        partial void OnLegalEntityLegalRepresentativePKChanging(global::System.Int32 value);
        partial void OnLegalEntityLegalRepresentativePKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalEntityFK
        {
            get
            {
                return _LegalEntityFK;
            }
            set
            {
                OnLegalEntityFKChanging(value);
                ReportPropertyChanging("LegalEntityFK");
                _LegalEntityFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalEntityFK");
                OnLegalEntityFKChanged();
            }
        }
        private Nullable<global::System.Int32> _LegalEntityFK;
        partial void OnLegalEntityFKChanging(Nullable<global::System.Int32> value);
        partial void OnLegalEntityFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WayOfRepresentationFK
        {
            get
            {
                return _WayOfRepresentationFK;
            }
            set
            {
                OnWayOfRepresentationFKChanging(value);
                ReportPropertyChanging("WayOfRepresentationFK");
                _WayOfRepresentationFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WayOfRepresentationFK");
                OnWayOfRepresentationFKChanged();
            }
        }
        private Nullable<global::System.Int32> _WayOfRepresentationFK;
        partial void OnWayOfRepresentationFKChanging(Nullable<global::System.Int32> value);
        partial void OnWayOfRepresentationFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalRepresentativeFK
        {
            get
            {
                return _LegalRepresentativeFK;
            }
            set
            {
                OnLegalRepresentativeFKChanging(value);
                ReportPropertyChanging("LegalRepresentativeFK");
                _LegalRepresentativeFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalRepresentativeFK");
                OnLegalRepresentativeFKChanged();
            }
        }
        private Nullable<global::System.Int32> _LegalRepresentativeFK;
        partial void OnLegalRepresentativeFKChanging(Nullable<global::System.Int32> value);
        partial void OnLegalRepresentativeFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_CompanyLegalRepresentative_WaysOfRepresentation", "WayOfRepresentation")]
        public WayOfRepresentation WaysOfRepresentation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WayOfRepresentation>("Mateus_wcModel.FK_CompanyLegalRepresentative_WaysOfRepresentation", "WayOfRepresentation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WayOfRepresentation>("Mateus_wcModel.FK_CompanyLegalRepresentative_WaysOfRepresentation", "WayOfRepresentation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WayOfRepresentation> WaysOfRepresentationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WayOfRepresentation>("Mateus_wcModel.FK_CompanyLegalRepresentative_WaysOfRepresentation", "WayOfRepresentation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WayOfRepresentation>("Mateus_wcModel.FK_CompanyLegalRepresentative_WaysOfRepresentation", "WayOfRepresentation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_CompanyLegalRepresentative_LegalEntities", "LegalEntity")]
        public LegalEntity LegalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("Mateus_wcModel.FK_CompanyLegalRepresentative_LegalEntities", "LegalEntity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("Mateus_wcModel.FK_CompanyLegalRepresentative_LegalEntities", "LegalEntity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LegalEntity> LegalEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("Mateus_wcModel.FK_CompanyLegalRepresentative_LegalEntities", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LegalEntity>("Mateus_wcModel.FK_CompanyLegalRepresentative_LegalEntities", "LegalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_CompanyLegalRepresentative_PhysicalEntities", "PhysicalEntity")]
        public PhysicalEntity PhysicalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhysicalEntity>("Mateus_wcModel.FK_CompanyLegalRepresentative_PhysicalEntities", "PhysicalEntity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhysicalEntity>("Mateus_wcModel.FK_CompanyLegalRepresentative_PhysicalEntities", "PhysicalEntity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhysicalEntity> PhysicalEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhysicalEntity>("Mateus_wcModel.FK_CompanyLegalRepresentative_PhysicalEntities", "PhysicalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhysicalEntity>("Mateus_wcModel.FK_CompanyLegalRepresentative_PhysicalEntities", "PhysicalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="LegalEntityOwner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LegalEntityOwner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LegalEntityOwner object.
        /// </summary>
        /// <param name="legalEntityOwnerPK">Initial value of the LegalEntityOwnerPK property.</param>
        public static LegalEntityOwner CreateLegalEntityOwner(global::System.Int32 legalEntityOwnerPK)
        {
            LegalEntityOwner legalEntityOwner = new LegalEntityOwner();
            legalEntityOwner.LegalEntityOwnerPK = legalEntityOwnerPK;
            return legalEntityOwner;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LegalEntityOwnerPK
        {
            get
            {
                return _LegalEntityOwnerPK;
            }
            set
            {
                if (_LegalEntityOwnerPK != value)
                {
                    OnLegalEntityOwnerPKChanging(value);
                    ReportPropertyChanging("LegalEntityOwnerPK");
                    _LegalEntityOwnerPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LegalEntityOwnerPK");
                    OnLegalEntityOwnerPKChanged();
                }
            }
        }
        private global::System.Int32 _LegalEntityOwnerPK;
        partial void OnLegalEntityOwnerPKChanging(global::System.Int32 value);
        partial void OnLegalEntityOwnerPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalEntityFK
        {
            get
            {
                return _LegalEntityFK;
            }
            set
            {
                OnLegalEntityFKChanging(value);
                ReportPropertyChanging("LegalEntityFK");
                _LegalEntityFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalEntityFK");
                OnLegalEntityFKChanged();
            }
        }
        private Nullable<global::System.Int32> _LegalEntityFK;
        partial void OnLegalEntityFKChanging(Nullable<global::System.Int32> value);
        partial void OnLegalEntityFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OwnerFK
        {
            get
            {
                return _OwnerFK;
            }
            set
            {
                OnOwnerFKChanging(value);
                ReportPropertyChanging("OwnerFK");
                _OwnerFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerFK");
                OnOwnerFKChanged();
            }
        }
        private Nullable<global::System.Int32> _OwnerFK;
        partial void OnOwnerFKChanging(Nullable<global::System.Int32> value);
        partial void OnOwnerFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerType
        {
            get
            {
                return _OwnerType;
            }
            set
            {
                OnOwnerTypeChanging(value);
                ReportPropertyChanging("OwnerType");
                _OwnerType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OwnerType");
                OnOwnerTypeChanged();
            }
        }
        private global::System.String _OwnerType;
        partial void OnOwnerTypeChanging(global::System.String value);
        partial void OnOwnerTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EntryDate;
        partial void OnEntryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BusinessShareAmount
        {
            get
            {
                return _BusinessShareAmount;
            }
            set
            {
                OnBusinessShareAmountChanging(value);
                ReportPropertyChanging("BusinessShareAmount");
                _BusinessShareAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessShareAmount");
                OnBusinessShareAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _BusinessShareAmount;
        partial void OnBusinessShareAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnBusinessShareAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaidBussinesShareAmount
        {
            get
            {
                return _PaidBussinesShareAmount;
            }
            set
            {
                OnPaidBussinesShareAmountChanging(value);
                ReportPropertyChanging("PaidBussinesShareAmount");
                _PaidBussinesShareAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaidBussinesShareAmount");
                OnPaidBussinesShareAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaidBussinesShareAmount;
        partial void OnPaidBussinesShareAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnPaidBussinesShareAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NominalBussinesShareAmount
        {
            get
            {
                return _NominalBussinesShareAmount;
            }
            set
            {
                OnNominalBussinesShareAmountChanging(value);
                ReportPropertyChanging("NominalBussinesShareAmount");
                _NominalBussinesShareAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NominalBussinesShareAmount");
                OnNominalBussinesShareAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _NominalBussinesShareAmount;
        partial void OnNominalBussinesShareAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnNominalBussinesShareAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdditionalFactorFK
        {
            get
            {
                return _AdditionalFactorFK;
            }
            set
            {
                OnAdditionalFactorFKChanging(value);
                ReportPropertyChanging("AdditionalFactorFK");
                _AdditionalFactorFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdditionalFactorFK");
                OnAdditionalFactorFKChanged();
            }
        }
        private Nullable<global::System.Int32> _AdditionalFactorFK;
        partial void OnAdditionalFactorFKChanging(Nullable<global::System.Int32> value);
        partial void OnAdditionalFactorFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FulfilledFactorFK
        {
            get
            {
                return _FulfilledFactorFK;
            }
            set
            {
                OnFulfilledFactorFKChanging(value);
                ReportPropertyChanging("FulfilledFactorFK");
                _FulfilledFactorFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FulfilledFactorFK");
                OnFulfilledFactorFKChanged();
            }
        }
        private Nullable<global::System.Int32> _FulfilledFactorFK;
        partial void OnFulfilledFactorFKChanging(Nullable<global::System.Int32> value);
        partial void OnFulfilledFactorFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BussinesShareBurdenFK
        {
            get
            {
                return _BussinesShareBurdenFK;
            }
            set
            {
                OnBussinesShareBurdenFKChanging(value);
                ReportPropertyChanging("BussinesShareBurdenFK");
                _BussinesShareBurdenFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BussinesShareBurdenFK");
                OnBussinesShareBurdenFKChanged();
            }
        }
        private Nullable<global::System.Int32> _BussinesShareBurdenFK;
        partial void OnBussinesShareBurdenFKChanging(Nullable<global::System.Int32> value);
        partial void OnBussinesShareBurdenFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfVotes
        {
            get
            {
                return _NumberOfVotes;
            }
            set
            {
                OnNumberOfVotesChanging(value);
                ReportPropertyChanging("NumberOfVotes");
                _NumberOfVotes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfVotes");
                OnNumberOfVotesChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfVotes;
        partial void OnNumberOfVotesChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfVotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChangeTypeFK
        {
            get
            {
                return _ChangeTypeFK;
            }
            set
            {
                OnChangeTypeFKChanging(value);
                ReportPropertyChanging("ChangeTypeFK");
                _ChangeTypeFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeTypeFK");
                OnChangeTypeFKChanged();
            }
        }
        private Nullable<global::System.Int32> _ChangeTypeFK;
        partial void OnChangeTypeFKChanging(Nullable<global::System.Int32> value);
        partial void OnChangeTypeFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="OwnerType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OwnerType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OwnerType object.
        /// </summary>
        /// <param name="ownerTypePK">Initial value of the OwnerTypePK property.</param>
        public static OwnerType CreateOwnerType(global::System.Int32 ownerTypePK)
        {
            OwnerType ownerType = new OwnerType();
            ownerType.OwnerTypePK = ownerTypePK;
            return ownerType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerTypePK
        {
            get
            {
                return _OwnerTypePK;
            }
            set
            {
                if (_OwnerTypePK != value)
                {
                    OnOwnerTypePKChanging(value);
                    ReportPropertyChanging("OwnerTypePK");
                    _OwnerTypePK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OwnerTypePK");
                    OnOwnerTypePKChanged();
                }
            }
        }
        private global::System.Int32 _OwnerTypePK;
        partial void OnOwnerTypePKChanging(global::System.Int32 value);
        partial void OnOwnerTypePKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="PhysicalEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhysicalEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhysicalEntity object.
        /// </summary>
        /// <param name="physicalEntityPK">Initial value of the PhysicalEntityPK property.</param>
        public static PhysicalEntity CreatePhysicalEntity(global::System.Int32 physicalEntityPK)
        {
            PhysicalEntity physicalEntity = new PhysicalEntity();
            physicalEntity.PhysicalEntityPK = physicalEntityPK;
            return physicalEntity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhysicalEntityPK
        {
            get
            {
                return _PhysicalEntityPK;
            }
            set
            {
                if (_PhysicalEntityPK != value)
                {
                    OnPhysicalEntityPKChanging(value);
                    ReportPropertyChanging("PhysicalEntityPK");
                    _PhysicalEntityPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PhysicalEntityPK");
                    OnPhysicalEntityPKChanged();
                }
            }
        }
        private global::System.Int32 _PhysicalEntityPK;
        partial void OnPhysicalEntityPKChanging(global::System.Int32 value);
        partial void OnPhysicalEntityPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Firstname
        {
            get
            {
                return _Firstname;
            }
            set
            {
                OnFirstnameChanging(value);
                ReportPropertyChanging("Firstname");
                _Firstname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Firstname");
                OnFirstnameChanged();
            }
        }
        private global::System.String _Firstname;
        partial void OnFirstnameChanging(global::System.String value);
        partial void OnFirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Lastname
        {
            get
            {
                return _Lastname;
            }
            set
            {
                OnLastnameChanging(value);
                ReportPropertyChanging("Lastname");
                _Lastname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Lastname");
                OnLastnameChanged();
            }
        }
        private global::System.String _Lastname;
        partial void OnLastnameChanging(global::System.String value);
        partial void OnLastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OIB
        {
            get
            {
                return _OIB;
            }
            set
            {
                OnOIBChanging(value);
                ReportPropertyChanging("OIB");
                _OIB = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OIB");
                OnOIBChanged();
            }
        }
        private global::System.String _OIB;
        partial void OnOIBChanging(global::System.String value);
        partial void OnOIBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JMBG
        {
            get
            {
                return _JMBG;
            }
            set
            {
                OnJMBGChanging(value);
                ReportPropertyChanging("JMBG");
                _JMBG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JMBG");
                OnJMBGChanged();
            }
        }
        private global::System.String _JMBG;
        partial void OnJMBGChanging(global::System.String value);
        partial void OnJMBGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfBirth;
        partial void OnDateOfBirthChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CitizenshipFK
        {
            get
            {
                return _CitizenshipFK;
            }
            set
            {
                OnCitizenshipFKChanging(value);
                ReportPropertyChanging("CitizenshipFK");
                _CitizenshipFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CitizenshipFK");
                OnCitizenshipFKChanged();
            }
        }
        private Nullable<global::System.Int32> _CitizenshipFK;
        partial void OnCitizenshipFKChanging(Nullable<global::System.Int32> value);
        partial void OnCitizenshipFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BirthCountryFK
        {
            get
            {
                return _BirthCountryFK;
            }
            set
            {
                OnBirthCountryFKChanging(value);
                ReportPropertyChanging("BirthCountryFK");
                _BirthCountryFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthCountryFK");
                OnBirthCountryFKChanged();
            }
        }
        private Nullable<global::System.Int32> _BirthCountryFK;
        partial void OnBirthCountryFKChanging(Nullable<global::System.Int32> value);
        partial void OnBirthCountryFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BirthCountyFK
        {
            get
            {
                return _BirthCountyFK;
            }
            set
            {
                OnBirthCountyFKChanging(value);
                ReportPropertyChanging("BirthCountyFK");
                _BirthCountyFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthCountyFK");
                OnBirthCountyFKChanged();
            }
        }
        private Nullable<global::System.Int32> _BirthCountyFK;
        partial void OnBirthCountyFKChanging(Nullable<global::System.Int32> value);
        partial void OnBirthCountyFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BirthCityCommunityFK
        {
            get
            {
                return _BirthCityCommunityFK;
            }
            set
            {
                OnBirthCityCommunityFKChanging(value);
                ReportPropertyChanging("BirthCityCommunityFK");
                _BirthCityCommunityFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthCityCommunityFK");
                OnBirthCityCommunityFKChanged();
            }
        }
        private Nullable<global::System.Int32> _BirthCityCommunityFK;
        partial void OnBirthCityCommunityFKChanging(Nullable<global::System.Int32> value);
        partial void OnBirthCityCommunityFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BirthPlace
        {
            get
            {
                return _BirthPlace;
            }
            set
            {
                OnBirthPlaceChanging(value);
                ReportPropertyChanging("BirthPlace");
                _BirthPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BirthPlace");
                OnBirthPlaceChanged();
            }
        }
        private global::System.String _BirthPlace;
        partial void OnBirthPlaceChanging(global::System.String value);
        partial void OnBirthPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResidenceCountryFK
        {
            get
            {
                return _ResidenceCountryFK;
            }
            set
            {
                OnResidenceCountryFKChanging(value);
                ReportPropertyChanging("ResidenceCountryFK");
                _ResidenceCountryFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResidenceCountryFK");
                OnResidenceCountryFKChanged();
            }
        }
        private Nullable<global::System.Int32> _ResidenceCountryFK;
        partial void OnResidenceCountryFKChanging(Nullable<global::System.Int32> value);
        partial void OnResidenceCountryFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResidenceCountyFK
        {
            get
            {
                return _ResidenceCountyFK;
            }
            set
            {
                OnResidenceCountyFKChanging(value);
                ReportPropertyChanging("ResidenceCountyFK");
                _ResidenceCountyFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResidenceCountyFK");
                OnResidenceCountyFKChanged();
            }
        }
        private Nullable<global::System.Int32> _ResidenceCountyFK;
        partial void OnResidenceCountyFKChanging(Nullable<global::System.Int32> value);
        partial void OnResidenceCountyFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResidenceCityCommunityFK
        {
            get
            {
                return _ResidenceCityCommunityFK;
            }
            set
            {
                OnResidenceCityCommunityFKChanging(value);
                ReportPropertyChanging("ResidenceCityCommunityFK");
                _ResidenceCityCommunityFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResidenceCityCommunityFK");
                OnResidenceCityCommunityFKChanged();
            }
        }
        private Nullable<global::System.Int32> _ResidenceCityCommunityFK;
        partial void OnResidenceCityCommunityFKChanging(Nullable<global::System.Int32> value);
        partial void OnResidenceCityCommunityFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResidencePostalOfficeFK
        {
            get
            {
                return _ResidencePostalOfficeFK;
            }
            set
            {
                OnResidencePostalOfficeFKChanging(value);
                ReportPropertyChanging("ResidencePostalOfficeFK");
                _ResidencePostalOfficeFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResidencePostalOfficeFK");
                OnResidencePostalOfficeFKChanged();
            }
        }
        private Nullable<global::System.Int32> _ResidencePostalOfficeFK;
        partial void OnResidencePostalOfficeFKChanging(Nullable<global::System.Int32> value);
        partial void OnResidencePostalOfficeFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResidencePlaceFK
        {
            get
            {
                return _ResidencePlaceFK;
            }
            set
            {
                OnResidencePlaceFKChanging(value);
                ReportPropertyChanging("ResidencePlaceFK");
                _ResidencePlaceFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResidencePlaceFK");
                OnResidencePlaceFKChanged();
            }
        }
        private Nullable<global::System.Int32> _ResidencePlaceFK;
        partial void OnResidencePlaceFKChanging(Nullable<global::System.Int32> value);
        partial void OnResidencePlaceFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResidencePlace
        {
            get
            {
                return _ResidencePlace;
            }
            set
            {
                OnResidencePlaceChanging(value);
                ReportPropertyChanging("ResidencePlace");
                _ResidencePlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResidencePlace");
                OnResidencePlaceChanged();
            }
        }
        private global::System.String _ResidencePlace;
        partial void OnResidencePlaceChanging(global::System.String value);
        partial void OnResidencePlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResidenceStreetName
        {
            get
            {
                return _ResidenceStreetName;
            }
            set
            {
                OnResidenceStreetNameChanging(value);
                ReportPropertyChanging("ResidenceStreetName");
                _ResidenceStreetName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResidenceStreetName");
                OnResidenceStreetNameChanged();
            }
        }
        private global::System.String _ResidenceStreetName;
        partial void OnResidenceStreetNameChanging(global::System.String value);
        partial void OnResidenceStreetNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WayOfRepresentationFK
        {
            get
            {
                return _WayOfRepresentationFK;
            }
            set
            {
                OnWayOfRepresentationFKChanging(value);
                ReportPropertyChanging("WayOfRepresentationFK");
                _WayOfRepresentationFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WayOfRepresentationFK");
                OnWayOfRepresentationFKChanged();
            }
        }
        private Nullable<global::System.Int32> _WayOfRepresentationFK;
        partial void OnWayOfRepresentationFKChanging(Nullable<global::System.Int32> value);
        partial void OnWayOfRepresentationFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IdentityCardNumber
        {
            get
            {
                return _IdentityCardNumber;
            }
            set
            {
                OnIdentityCardNumberChanging(value);
                ReportPropertyChanging("IdentityCardNumber");
                _IdentityCardNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IdentityCardNumber");
                OnIdentityCardNumberChanged();
            }
        }
        private global::System.String _IdentityCardNumber;
        partial void OnIdentityCardNumberChanging(global::System.String value);
        partial void OnIdentityCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> IdentityCardDateOfIssue
        {
            get
            {
                return _IdentityCardDateOfIssue;
            }
            set
            {
                OnIdentityCardDateOfIssueChanging(value);
                ReportPropertyChanging("IdentityCardDateOfIssue");
                _IdentityCardDateOfIssue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdentityCardDateOfIssue");
                OnIdentityCardDateOfIssueChanged();
            }
        }
        private Nullable<global::System.DateTime> _IdentityCardDateOfIssue;
        partial void OnIdentityCardDateOfIssueChanging(Nullable<global::System.DateTime> value);
        partial void OnIdentityCardDateOfIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IdentityCardRegionalOfficeFK
        {
            get
            {
                return _IdentityCardRegionalOfficeFK;
            }
            set
            {
                OnIdentityCardRegionalOfficeFKChanging(value);
                ReportPropertyChanging("IdentityCardRegionalOfficeFK");
                _IdentityCardRegionalOfficeFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdentityCardRegionalOfficeFK");
                OnIdentityCardRegionalOfficeFKChanged();
            }
        }
        private Nullable<global::System.Int32> _IdentityCardRegionalOfficeFK;
        partial void OnIdentityCardRegionalOfficeFKChanging(Nullable<global::System.Int32> value);
        partial void OnIdentityCardRegionalOfficeFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> IdentityCardDateTillValid
        {
            get
            {
                return _IdentityCardDateTillValid;
            }
            set
            {
                OnIdentityCardDateTillValidChanging(value);
                ReportPropertyChanging("IdentityCardDateTillValid");
                _IdentityCardDateTillValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdentityCardDateTillValid");
                OnIdentityCardDateTillValidChanged();
            }
        }
        private Nullable<global::System.DateTime> _IdentityCardDateTillValid;
        partial void OnIdentityCardDateTillValidChanging(Nullable<global::System.DateTime> value);
        partial void OnIdentityCardDateTillValidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PassportNumber
        {
            get
            {
                return _PassportNumber;
            }
            set
            {
                OnPassportNumberChanging(value);
                ReportPropertyChanging("PassportNumber");
                _PassportNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PassportNumber");
                OnPassportNumberChanged();
            }
        }
        private global::System.String _PassportNumber;
        partial void OnPassportNumberChanging(global::System.String value);
        partial void OnPassportNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PassportDateOfIssue
        {
            get
            {
                return _PassportDateOfIssue;
            }
            set
            {
                OnPassportDateOfIssueChanging(value);
                ReportPropertyChanging("PassportDateOfIssue");
                _PassportDateOfIssue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PassportDateOfIssue");
                OnPassportDateOfIssueChanged();
            }
        }
        private Nullable<global::System.DateTime> _PassportDateOfIssue;
        partial void OnPassportDateOfIssueChanging(Nullable<global::System.DateTime> value);
        partial void OnPassportDateOfIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PassportDateTillValid
        {
            get
            {
                return _PassportDateTillValid;
            }
            set
            {
                OnPassportDateTillValidChanging(value);
                ReportPropertyChanging("PassportDateTillValid");
                _PassportDateTillValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PassportDateTillValid");
                OnPassportDateTillValidChanged();
            }
        }
        private Nullable<global::System.DateTime> _PassportDateTillValid;
        partial void OnPassportDateTillValidChanging(Nullable<global::System.DateTime> value);
        partial void OnPassportDateTillValidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PassportCountryOfIssueFK
        {
            get
            {
                return _PassportCountryOfIssueFK;
            }
            set
            {
                OnPassportCountryOfIssueFKChanging(value);
                ReportPropertyChanging("PassportCountryOfIssueFK");
                _PassportCountryOfIssueFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PassportCountryOfIssueFK");
                OnPassportCountryOfIssueFKChanged();
            }
        }
        private Nullable<global::System.Int32> _PassportCountryOfIssueFK;
        partial void OnPassportCountryOfIssueFKChanging(Nullable<global::System.Int32> value);
        partial void OnPassportCountryOfIssueFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PassportPlaceOfIssue
        {
            get
            {
                return _PassportPlaceOfIssue;
            }
            set
            {
                OnPassportPlaceOfIssueChanging(value);
                ReportPropertyChanging("PassportPlaceOfIssue");
                _PassportPlaceOfIssue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PassportPlaceOfIssue");
                OnPassportPlaceOfIssueChanged();
            }
        }
        private global::System.String _PassportPlaceOfIssue;
        partial void OnPassportPlaceOfIssueChanging(global::System.String value);
        partial void OnPassportPlaceOfIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private Nullable<global::System.Boolean> _Owner;
        partial void OnOwnerChanging(Nullable<global::System.Boolean> value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> LegalRepresentative
        {
            get
            {
                return _LegalRepresentative;
            }
            set
            {
                OnLegalRepresentativeChanging(value);
                ReportPropertyChanging("LegalRepresentative");
                _LegalRepresentative = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalRepresentative");
                OnLegalRepresentativeChanged();
            }
        }
        private Nullable<global::System.Boolean> _LegalRepresentative;
        partial void OnLegalRepresentativeChanging(Nullable<global::System.Boolean> value);
        partial void OnLegalRepresentativeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Referent
        {
            get
            {
                return _Referent;
            }
            set
            {
                OnReferentChanging(value);
                ReportPropertyChanging("Referent");
                _Referent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Referent");
                OnReferentChanged();
            }
        }
        private Nullable<global::System.Boolean> _Referent;
        partial void OnReferentChanging(Nullable<global::System.Boolean> value);
        partial void OnReferentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMail
        {
            get
            {
                return _EMail;
            }
            set
            {
                OnEMailChanging(value);
                ReportPropertyChanging("EMail");
                _EMail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMail");
                OnEMailChanged();
            }
        }
        private global::System.String _EMail;
        partial void OnEMailChanging(global::System.String value);
        partial void OnEMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReferentRegionalOfficeFK
        {
            get
            {
                return _ReferentRegionalOfficeFK;
            }
            set
            {
                OnReferentRegionalOfficeFKChanging(value);
                ReportPropertyChanging("ReferentRegionalOfficeFK");
                _ReferentRegionalOfficeFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferentRegionalOfficeFK");
                OnReferentRegionalOfficeFKChanged();
            }
        }
        private Nullable<global::System.Int32> _ReferentRegionalOfficeFK;
        partial void OnReferentRegionalOfficeFKChanging(Nullable<global::System.Int32> value);
        partial void OnReferentRegionalOfficeFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReferentSubstationFK
        {
            get
            {
                return _ReferentSubstationFK;
            }
            set
            {
                OnReferentSubstationFKChanging(value);
                ReportPropertyChanging("ReferentSubstationFK");
                _ReferentSubstationFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferentSubstationFK");
                OnReferentSubstationFKChanged();
            }
        }
        private Nullable<global::System.Int32> _ReferentSubstationFK;
        partial void OnReferentSubstationFKChanging(Nullable<global::System.Int32> value);
        partial void OnReferentSubstationFKChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Cities", "CityCommunity")]
        public CityCommunity CitiesCommunity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityCommunity>("Mateus_wcModel.FK_PhysicalEntities_Cities", "CityCommunity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityCommunity>("Mateus_wcModel.FK_PhysicalEntities_Cities", "CityCommunity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CityCommunity> CitiesCommunityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityCommunity>("Mateus_wcModel.FK_PhysicalEntities_Cities", "CityCommunity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CityCommunity>("Mateus_wcModel.FK_PhysicalEntities_Cities", "CityCommunity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Cities1", "CityCommunity")]
        public CityCommunity CitiesCommunity1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityCommunity>("Mateus_wcModel.FK_PhysicalEntities_Cities1", "CityCommunity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityCommunity>("Mateus_wcModel.FK_PhysicalEntities_Cities1", "CityCommunity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CityCommunity> CitiesCommunity1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityCommunity>("Mateus_wcModel.FK_PhysicalEntities_Cities1", "CityCommunity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CityCommunity>("Mateus_wcModel.FK_PhysicalEntities_Cities1", "CityCommunity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Counties", "County")]
        public County County
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_PhysicalEntities_Counties", "County").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_PhysicalEntities_Counties", "County").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<County> CountyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_PhysicalEntities_Counties", "County");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<County>("Mateus_wcModel.FK_PhysicalEntities_Counties", "County", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Counties1", "County")]
        public County County1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_PhysicalEntities_Counties1", "County").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_PhysicalEntities_Counties1", "County").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<County> County1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_PhysicalEntities_Counties1", "County");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<County>("Mateus_wcModel.FK_PhysicalEntities_Counties1", "County", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Countries", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_PhysicalEntities_Countries", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_PhysicalEntities_Countries", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_PhysicalEntities_Countries", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("Mateus_wcModel.FK_PhysicalEntities_Countries", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Countries1", "Country")]
        public Country Country1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_PhysicalEntities_Countries1", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_PhysicalEntities_Countries1", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> Country1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_PhysicalEntities_Countries1", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("Mateus_wcModel.FK_PhysicalEntities_Countries1", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Countries2", "Country")]
        public Country Country2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_PhysicalEntities_Countries2", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_PhysicalEntities_Countries2", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> Country2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_PhysicalEntities_Countries2", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("Mateus_wcModel.FK_PhysicalEntities_Countries2", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Countries3", "Country")]
        public Country Country3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_PhysicalEntities_Countries3", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_PhysicalEntities_Countries3", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> Country3Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Mateus_wcModel.FK_PhysicalEntities_Countries3", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("Mateus_wcModel.FK_PhysicalEntities_Countries3", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_CompanyLegalRepresentative_PhysicalEntities", "LegalEntityLegalRepresentative")]
        public EntityCollection<LegalEntityLegalRepresentative> LegalEntityLegalRepresentatives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntityLegalRepresentative>("Mateus_wcModel.FK_CompanyLegalRepresentative_PhysicalEntities", "LegalEntityLegalRepresentative");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntityLegalRepresentative>("Mateus_wcModel.FK_CompanyLegalRepresentative_PhysicalEntities", "LegalEntityLegalRepresentative", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Places", "Place")]
        public Place Place
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("Mateus_wcModel.FK_PhysicalEntities_Places", "Place").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("Mateus_wcModel.FK_PhysicalEntities_Places", "Place").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Place> PlaceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Place>("Mateus_wcModel.FK_PhysicalEntities_Places", "Place");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Place>("Mateus_wcModel.FK_PhysicalEntities_Places", "Place", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_PostalOffices", "PostalOffice")]
        public PostalOffice PostalOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalOffice>("Mateus_wcModel.FK_PhysicalEntities_PostalOffices", "PostalOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalOffice>("Mateus_wcModel.FK_PhysicalEntities_PostalOffices", "PostalOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PostalOffice> PostalOfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalOffice>("Mateus_wcModel.FK_PhysicalEntities_PostalOffices", "PostalOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PostalOffice>("Mateus_wcModel.FK_PhysicalEntities_PostalOffices", "PostalOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_RegionalOffices", "RegionalOffice")]
        public RegionalOffice RegionalOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionalOffice>("Mateus_wcModel.FK_PhysicalEntities_RegionalOffices", "RegionalOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionalOffice>("Mateus_wcModel.FK_PhysicalEntities_RegionalOffices", "RegionalOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegionalOffice> RegionalOfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionalOffice>("Mateus_wcModel.FK_PhysicalEntities_RegionalOffices", "RegionalOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegionalOffice>("Mateus_wcModel.FK_PhysicalEntities_RegionalOffices", "RegionalOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_WaysOfRepresentation", "WayOfRepresentation")]
        public WayOfRepresentation WaysOfRepresentation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WayOfRepresentation>("Mateus_wcModel.FK_PhysicalEntities_WaysOfRepresentation", "WayOfRepresentation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WayOfRepresentation>("Mateus_wcModel.FK_PhysicalEntities_WaysOfRepresentation", "WayOfRepresentation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WayOfRepresentation> WaysOfRepresentationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WayOfRepresentation>("Mateus_wcModel.FK_PhysicalEntities_WaysOfRepresentation", "WayOfRepresentation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WayOfRepresentation>("Mateus_wcModel.FK_PhysicalEntities_WaysOfRepresentation", "WayOfRepresentation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_RegionalOffices1", "RegionalOffice")]
        public RegionalOffice RegionalOffice1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionalOffice>("Mateus_wcModel.FK_PhysicalEntities_RegionalOffices1", "RegionalOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionalOffice>("Mateus_wcModel.FK_PhysicalEntities_RegionalOffices1", "RegionalOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegionalOffice> RegionalOffice1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionalOffice>("Mateus_wcModel.FK_PhysicalEntities_RegionalOffices1", "RegionalOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegionalOffice>("Mateus_wcModel.FK_PhysicalEntities_RegionalOffices1", "RegionalOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Substations", "Substation")]
        public Substation Substation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Substation>("Mateus_wcModel.FK_PhysicalEntities_Substations", "Substation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Substation>("Mateus_wcModel.FK_PhysicalEntities_Substations", "Substation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Substation> SubstationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Substation>("Mateus_wcModel.FK_PhysicalEntities_Substations", "Substation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Substation>("Mateus_wcModel.FK_PhysicalEntities_Substations", "Substation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_PhysicalEntities", "LegalEntity")]
        public EntityCollection<LegalEntity> LegalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_PhysicalEntities", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_PhysicalEntities", "LegalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="Place")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Place : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Place object.
        /// </summary>
        /// <param name="placePK">Initial value of the PlacePK property.</param>
        public static Place CreatePlace(global::System.Int32 placePK)
        {
            Place place = new Place();
            place.PlacePK = placePK;
            return place;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlacePK
        {
            get
            {
                return _PlacePK;
            }
            set
            {
                if (_PlacePK != value)
                {
                    OnPlacePKChanging(value);
                    ReportPropertyChanging("PlacePK");
                    _PlacePK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlacePK");
                    OnPlacePKChanged();
                }
            }
        }
        private global::System.Int32 _PlacePK;
        partial void OnPlacePKChanging(global::System.Int32 value);
        partial void OnPlacePKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PostalOfficeFK
        {
            get
            {
                return _PostalOfficeFK;
            }
            set
            {
                OnPostalOfficeFKChanging(value);
                ReportPropertyChanging("PostalOfficeFK");
                _PostalOfficeFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostalOfficeFK");
                OnPostalOfficeFKChanged();
            }
        }
        private Nullable<global::System.Int32> _PostalOfficeFK;
        partial void OnPostalOfficeFKChanging(Nullable<global::System.Int32> value);
        partial void OnPostalOfficeFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Ordinal
        {
            get
            {
                return _Ordinal;
            }
            set
            {
                OnOrdinalChanging(value);
                ReportPropertyChanging("Ordinal");
                _Ordinal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ordinal");
                OnOrdinalChanged();
            }
        }
        private Nullable<global::System.Int32> _Ordinal;
        partial void OnOrdinalChanging(Nullable<global::System.Int32> value);
        partial void OnOrdinalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Places_PostalOffices", "PostalOffices")]
        public PostalOffice PostalOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalOffice>("Mateus_wcModel.FK_Places_PostalOffices", "PostalOffices").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalOffice>("Mateus_wcModel.FK_Places_PostalOffices", "PostalOffices").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PostalOffice> PostalOfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalOffice>("Mateus_wcModel.FK_Places_PostalOffices", "PostalOffices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PostalOffice>("Mateus_wcModel.FK_Places_PostalOffices", "PostalOffices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_Places", "LegalEntity")]
        public EntityCollection<LegalEntity> LegalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_Places", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_Places", "LegalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Branches_Places", "LegalEntityBranch")]
        public EntityCollection<LegalEntityBranch> LegalEntityBranches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntityBranch>("Mateus_wcModel.FK_Branches_Places", "LegalEntityBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntityBranch>("Mateus_wcModel.FK_Branches_Places", "LegalEntityBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Places", "PhysicalEntity")]
        public EntityCollection<PhysicalEntity> PhysicalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Places", "PhysicalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Places", "PhysicalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="PostalOffice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PostalOffice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PostalOffice object.
        /// </summary>
        /// <param name="postalOfficePK">Initial value of the PostalOfficePK property.</param>
        public static PostalOffice CreatePostalOffice(global::System.Int32 postalOfficePK)
        {
            PostalOffice postalOffice = new PostalOffice();
            postalOffice.PostalOfficePK = postalOfficePK;
            return postalOffice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostalOfficePK
        {
            get
            {
                return _PostalOfficePK;
            }
            set
            {
                if (_PostalOfficePK != value)
                {
                    OnPostalOfficePKChanging(value);
                    ReportPropertyChanging("PostalOfficePK");
                    _PostalOfficePK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PostalOfficePK");
                    OnPostalOfficePKChanged();
                }
            }
        }
        private global::System.Int32 _PostalOfficePK;
        partial void OnPostalOfficePKChanging(global::System.Int32 value);
        partial void OnPostalOfficePKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountyFK
        {
            get
            {
                return _CountyFK;
            }
            set
            {
                OnCountyFKChanging(value);
                ReportPropertyChanging("CountyFK");
                _CountyFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountyFK");
                OnCountyFKChanged();
            }
        }
        private Nullable<global::System.Int32> _CountyFK;
        partial void OnCountyFKChanging(Nullable<global::System.Int32> value);
        partial void OnCountyFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _Number;
        partial void OnNumberChanging(Nullable<global::System.Int32> value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PostalOffices_Counties", "Counties")]
        public County County
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_PostalOffices_Counties", "Counties").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_PostalOffices_Counties", "Counties").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<County> CountyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<County>("Mateus_wcModel.FK_PostalOffices_Counties", "Counties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<County>("Mateus_wcModel.FK_PostalOffices_Counties", "Counties", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Places_PostalOffices", "Places")]
        public EntityCollection<Place> Places
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Place>("Mateus_wcModel.FK_Places_PostalOffices", "Places");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Place>("Mateus_wcModel.FK_Places_PostalOffices", "Places", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_PostalOffices", "LegalEntity")]
        public EntityCollection<LegalEntity> LegalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_PostalOffices", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_PostalOffices", "LegalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Branches_PostalOffices", "LegalEntityBranch")]
        public EntityCollection<LegalEntityBranch> LegalEntityBranches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntityBranch>("Mateus_wcModel.FK_Branches_PostalOffices", "LegalEntityBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntityBranch>("Mateus_wcModel.FK_Branches_PostalOffices", "LegalEntityBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_PostalOffices", "PhysicalEntity")]
        public EntityCollection<PhysicalEntity> PhysicalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_PostalOffices", "PhysicalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_PostalOffices", "PhysicalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="RegionalOffice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegionalOffice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegionalOffice object.
        /// </summary>
        /// <param name="regionalOfficePK">Initial value of the RegionalOfficePK property.</param>
        public static RegionalOffice CreateRegionalOffice(global::System.Int32 regionalOfficePK)
        {
            RegionalOffice regionalOffice = new RegionalOffice();
            regionalOffice.RegionalOfficePK = regionalOfficePK;
            return regionalOffice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegionalOfficePK
        {
            get
            {
                return _RegionalOfficePK;
            }
            set
            {
                if (_RegionalOfficePK != value)
                {
                    OnRegionalOfficePKChanging(value);
                    ReportPropertyChanging("RegionalOfficePK");
                    _RegionalOfficePK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegionalOfficePK");
                    OnRegionalOfficePKChanged();
                }
            }
        }
        private global::System.Int32 _RegionalOfficePK;
        partial void OnRegionalOfficePKChanging(global::System.Int32 value);
        partial void OnRegionalOfficePKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Substations_RegionalOffices", "Substations")]
        public EntityCollection<Substation> Substations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Substation>("Mateus_wcModel.FK_Substations_RegionalOffices", "Substations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Substation>("Mateus_wcModel.FK_Substations_RegionalOffices", "Substations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_RegionalOffices", "LegalEntity")]
        public EntityCollection<LegalEntity> LegalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_RegionalOffices", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_RegionalOffices", "LegalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_RegionalOffices", "PhysicalEntity")]
        public EntityCollection<PhysicalEntity> PhysicalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_RegionalOffices", "PhysicalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_RegionalOffices", "PhysicalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_RegionalOffices1", "PhysicalEntity")]
        public EntityCollection<PhysicalEntity> PhysicalEntities1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_RegionalOffices1", "PhysicalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_RegionalOffices1", "PhysicalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="Risk")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Risk : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Risk object.
        /// </summary>
        /// <param name="riskPK">Initial value of the RiskPK property.</param>
        public static Risk CreateRisk(global::System.Int32 riskPK)
        {
            Risk risk = new Risk();
            risk.RiskPK = riskPK;
            return risk;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskPK
        {
            get
            {
                return _RiskPK;
            }
            set
            {
                if (_RiskPK != value)
                {
                    OnRiskPKChanging(value);
                    ReportPropertyChanging("RiskPK");
                    _RiskPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RiskPK");
                    OnRiskPKChanged();
                }
            }
        }
        private global::System.Int32 _RiskPK;
        partial void OnRiskPKChanging(global::System.Int32 value);
        partial void OnRiskPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Assessments_Risks", "Assessment")]
        public EntityCollection<Assessment> Assessments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Assessment>("Mateus_wcModel.FK_Assessments_Risks", "Assessment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Assessment>("Mateus_wcModel.FK_Assessments_Risks", "Assessment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="rolePK">Initial value of the RolePK property.</param>
        public static Role CreateRole(global::System.Int32 rolePK)
        {
            Role role = new Role();
            role.RolePK = rolePK;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RolePK
        {
            get
            {
                return _RolePK;
            }
            set
            {
                if (_RolePK != value)
                {
                    OnRolePKChanging(value);
                    ReportPropertyChanging("RolePK");
                    _RolePK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RolePK");
                    OnRolePKChanged();
                }
            }
        }
        private global::System.Int32 _RolePK;
        partial void OnRolePKChanging(global::System.Int32 value);
        partial void OnRolePKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_UsersInRoles_Roles", "UsersInRoles")]
        public EntityCollection<UserInRole> UsersInRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInRole>("Mateus_wcModel.FK_UsersInRoles_Roles", "UsersInRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInRole>("Mateus_wcModel.FK_UsersInRoles_Roles", "UsersInRoles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="ServiceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceType object.
        /// </summary>
        /// <param name="serviceTypePK">Initial value of the ServiceTypePK property.</param>
        public static ServiceType CreateServiceType(global::System.Int32 serviceTypePK)
        {
            ServiceType serviceType = new ServiceType();
            serviceType.ServiceTypePK = serviceTypePK;
            return serviceType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceTypePK
        {
            get
            {
                return _ServiceTypePK;
            }
            set
            {
                if (_ServiceTypePK != value)
                {
                    OnServiceTypePKChanging(value);
                    ReportPropertyChanging("ServiceTypePK");
                    _ServiceTypePK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ServiceTypePK");
                    OnServiceTypePKChanged();
                }
            }
        }
        private global::System.Int32 _ServiceTypePK;
        partial void OnServiceTypePKChanging(global::System.Int32 value);
        partial void OnServiceTypePKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_WorkDones_ServiceTypes", "WorkDones")]
        public EntityCollection<WorkDone> WorkDones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkDone>("Mateus_wcModel.FK_WorkDones_ServiceTypes", "WorkDones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkDone>("Mateus_wcModel.FK_WorkDones_ServiceTypes", "WorkDones", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="Substation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Substation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Substation object.
        /// </summary>
        /// <param name="substationPK">Initial value of the SubstationPK property.</param>
        public static Substation CreateSubstation(global::System.Int32 substationPK)
        {
            Substation substation = new Substation();
            substation.SubstationPK = substationPK;
            return substation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubstationPK
        {
            get
            {
                return _SubstationPK;
            }
            set
            {
                if (_SubstationPK != value)
                {
                    OnSubstationPKChanging(value);
                    ReportPropertyChanging("SubstationPK");
                    _SubstationPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubstationPK");
                    OnSubstationPKChanged();
                }
            }
        }
        private global::System.Int32 _SubstationPK;
        partial void OnSubstationPKChanging(global::System.Int32 value);
        partial void OnSubstationPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegionalOfficeFK
        {
            get
            {
                return _RegionalOfficeFK;
            }
            set
            {
                OnRegionalOfficeFKChanging(value);
                ReportPropertyChanging("RegionalOfficeFK");
                _RegionalOfficeFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionalOfficeFK");
                OnRegionalOfficeFKChanged();
            }
        }
        private Nullable<global::System.Int32> _RegionalOfficeFK;
        partial void OnRegionalOfficeFKChanging(Nullable<global::System.Int32> value);
        partial void OnRegionalOfficeFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Substations_RegionalOffices", "RegionalOffices")]
        public RegionalOffice RegionalOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionalOffice>("Mateus_wcModel.FK_Substations_RegionalOffices", "RegionalOffices").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionalOffice>("Mateus_wcModel.FK_Substations_RegionalOffices", "RegionalOffices").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegionalOffice> RegionalOfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionalOffice>("Mateus_wcModel.FK_Substations_RegionalOffices", "RegionalOffices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegionalOffice>("Mateus_wcModel.FK_Substations_RegionalOffices", "RegionalOffices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_Substations", "LegalEntity")]
        public EntityCollection<LegalEntity> LegalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_Substations", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_Substations", "LegalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_Substations", "PhysicalEntity")]
        public EntityCollection<PhysicalEntity> PhysicalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Substations", "PhysicalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_Substations", "PhysicalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="SystemAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemAction object.
        /// </summary>
        /// <param name="systemActionPK">Initial value of the SystemActionPK property.</param>
        public static SystemAction CreateSystemAction(global::System.Int32 systemActionPK)
        {
            SystemAction systemAction = new SystemAction();
            systemAction.SystemActionPK = systemActionPK;
            return systemAction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemActionPK
        {
            get
            {
                return _SystemActionPK;
            }
            set
            {
                if (_SystemActionPK != value)
                {
                    OnSystemActionPKChanging(value);
                    ReportPropertyChanging("SystemActionPK");
                    _SystemActionPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SystemActionPK");
                    OnSystemActionPKChanged();
                }
            }
        }
        private global::System.Int32 _SystemActionPK;
        partial void OnSystemActionPKChanging(global::System.Int32 value);
        partial void OnSystemActionPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SystemControllerFK
        {
            get
            {
                return _SystemControllerFK;
            }
            set
            {
                OnSystemControllerFKChanging(value);
                ReportPropertyChanging("SystemControllerFK");
                _SystemControllerFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SystemControllerFK");
                OnSystemControllerFKChanged();
            }
        }
        private Nullable<global::System.Int32> _SystemControllerFK;
        partial void OnSystemControllerFKChanging(Nullable<global::System.Int32> value);
        partial void OnSystemControllerFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Actions_Controllers", "SystemControllers")]
        public SystemController SystemController
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemController>("Mateus_wcModel.FK_Actions_Controllers", "SystemControllers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemController>("Mateus_wcModel.FK_Actions_Controllers", "SystemControllers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SystemController> SystemControllerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemController>("Mateus_wcModel.FK_Actions_Controllers", "SystemControllers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SystemController>("Mateus_wcModel.FK_Actions_Controllers", "SystemControllers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="SystemController")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemController : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemController object.
        /// </summary>
        /// <param name="systemControllerPK">Initial value of the SystemControllerPK property.</param>
        public static SystemController CreateSystemController(global::System.Int32 systemControllerPK)
        {
            SystemController systemController = new SystemController();
            systemController.SystemControllerPK = systemControllerPK;
            return systemController;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemControllerPK
        {
            get
            {
                return _SystemControllerPK;
            }
            set
            {
                if (_SystemControllerPK != value)
                {
                    OnSystemControllerPKChanging(value);
                    ReportPropertyChanging("SystemControllerPK");
                    _SystemControllerPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SystemControllerPK");
                    OnSystemControllerPKChanged();
                }
            }
        }
        private global::System.Int32 _SystemControllerPK;
        partial void OnSystemControllerPKChanging(global::System.Int32 value);
        partial void OnSystemControllerPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Theme
        {
            get
            {
                return _Theme;
            }
            set
            {
                OnThemeChanging(value);
                ReportPropertyChanging("Theme");
                _Theme = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Theme");
                OnThemeChanged();
            }
        }
        private global::System.String _Theme;
        partial void OnThemeChanging(global::System.String value);
        partial void OnThemeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_Actions_Controllers", "SystemActions")]
        public EntityCollection<SystemAction> SystemActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SystemAction>("Mateus_wcModel.FK_Actions_Controllers", "SystemActions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SystemAction>("Mateus_wcModel.FK_Actions_Controllers", "SystemActions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="Tax")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tax : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tax object.
        /// </summary>
        /// <param name="taxPK">Initial value of the TaxPK property.</param>
        public static Tax CreateTax(global::System.Int32 taxPK)
        {
            Tax tax = new Tax();
            tax.TaxPK = taxPK;
            return tax;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaxPK
        {
            get
            {
                return _TaxPK;
            }
            set
            {
                if (_TaxPK != value)
                {
                    OnTaxPKChanging(value);
                    ReportPropertyChanging("TaxPK");
                    _TaxPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaxPK");
                    OnTaxPKChanged();
                }
            }
        }
        private global::System.Int32 _TaxPK;
        partial void OnTaxPKChanging(global::System.Int32 value);
        partial void OnTaxPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_LegalEntities_Taxes", "LegalEntity")]
        public EntityCollection<LegalEntity> LegalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_Taxes", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntity>("Mateus_wcModel.FK_LegalEntities_Taxes", "LegalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="ToDoList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ToDoList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ToDoList object.
        /// </summary>
        /// <param name="toDoListPK">Initial value of the ToDoListPK property.</param>
        public static ToDoList CreateToDoList(global::System.Int32 toDoListPK)
        {
            ToDoList toDoList = new ToDoList();
            toDoList.ToDoListPK = toDoListPK;
            return toDoList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToDoListPK
        {
            get
            {
                return _ToDoListPK;
            }
            set
            {
                if (_ToDoListPK != value)
                {
                    OnToDoListPKChanging(value);
                    ReportPropertyChanging("ToDoListPK");
                    _ToDoListPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ToDoListPK");
                    OnToDoListPKChanged();
                }
            }
        }
        private global::System.Int32 _ToDoListPK;
        partial void OnToDoListPKChanging(global::System.Int32 value);
        partial void OnToDoListPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Deadline
        {
            get
            {
                return _Deadline;
            }
            set
            {
                OnDeadlineChanging(value);
                ReportPropertyChanging("Deadline");
                _Deadline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deadline");
                OnDeadlineChanged();
            }
        }
        private Nullable<global::System.DateTime> _Deadline;
        partial void OnDeadlineChanging(Nullable<global::System.DateTime> value);
        partial void OnDeadlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Finished
        {
            get
            {
                return _Finished;
            }
            set
            {
                OnFinishedChanging(value);
                ReportPropertyChanging("Finished");
                _Finished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Finished");
                OnFinishedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Finished;
        partial void OnFinishedChanging(Nullable<global::System.Boolean> value);
        partial void OnFinishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserFK
        {
            get
            {
                return _UserFK;
            }
            set
            {
                OnUserFKChanging(value);
                ReportPropertyChanging("UserFK");
                _UserFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserFK");
                OnUserFKChanged();
            }
        }
        private Nullable<global::System.Int32> _UserFK;
        partial void OnUserFKChanging(Nullable<global::System.Int32> value);
        partial void OnUserFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_ToDoLists_Users", "Users")]
        public User Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Mateus_wcModel.FK_ToDoLists_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Mateus_wcModel.FK_ToDoLists_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Mateus_wcModel.FK_ToDoLists_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Mateus_wcModel.FK_ToDoLists_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_WorkDones_ToDoLists", "WorkDones")]
        public EntityCollection<WorkDone> WorkDones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkDone>("Mateus_wcModel.FK_WorkDones_ToDoLists", "WorkDones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkDone>("Mateus_wcModel.FK_WorkDones_ToDoLists", "WorkDones", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userPK">Initial value of the UserPK property.</param>
        public static User CreateUser(global::System.Int32 userPK)
        {
            User user = new User();
            user.UserPK = userPK;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserPK
        {
            get
            {
                return _UserPK;
            }
            set
            {
                if (_UserPK != value)
                {
                    OnUserPKChanging(value);
                    ReportPropertyChanging("UserPK");
                    _UserPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserPK");
                    OnUserPKChanged();
                }
            }
        }
        private global::System.Int32 _UserPK;
        partial void OnUserPKChanging(global::System.Int32 value);
        partial void OnUserPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RegistrationDate
        {
            get
            {
                return _RegistrationDate;
            }
            set
            {
                OnRegistrationDateChanging(value);
                ReportPropertyChanging("RegistrationDate");
                _RegistrationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationDate");
                OnRegistrationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RegistrationDate;
        partial void OnRegistrationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRegistrationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Salt
        {
            get
            {
                return _Salt;
            }
            set
            {
                OnSaltChanging(value);
                ReportPropertyChanging("Salt");
                _Salt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Salt");
                OnSaltChanged();
            }
        }
        private global::System.String _Salt;
        partial void OnSaltChanging(global::System.String value);
        partial void OnSaltChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_ToDoLists_Users", "ToDoList")]
        public EntityCollection<ToDoList> ToDoLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToDoList>("Mateus_wcModel.FK_ToDoLists_Users", "ToDoList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToDoList>("Mateus_wcModel.FK_ToDoLists_Users", "ToDoList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_UserActivities_Users", "UserActivity")]
        public EntityCollection<UserActivity> UserActivities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserActivity>("Mateus_wcModel.FK_UserActivities_Users", "UserActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserActivity>("Mateus_wcModel.FK_UserActivities_Users", "UserActivity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_WorkDones_Users", "WorkDones")]
        public EntityCollection<WorkDone> WorkDones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkDone>("Mateus_wcModel.FK_WorkDones_Users", "WorkDones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkDone>("Mateus_wcModel.FK_WorkDones_Users", "WorkDones", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="UserActivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserActivity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserActivity object.
        /// </summary>
        /// <param name="userActivityPK">Initial value of the UserActivityPK property.</param>
        public static UserActivity CreateUserActivity(global::System.Int32 userActivityPK)
        {
            UserActivity userActivity = new UserActivity();
            userActivity.UserActivityPK = userActivityPK;
            return userActivity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserActivityPK
        {
            get
            {
                return _UserActivityPK;
            }
            set
            {
                if (_UserActivityPK != value)
                {
                    OnUserActivityPKChanging(value);
                    ReportPropertyChanging("UserActivityPK");
                    _UserActivityPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserActivityPK");
                    OnUserActivityPKChanged();
                }
            }
        }
        private global::System.Int32 _UserActivityPK;
        partial void OnUserActivityPKChanging(global::System.Int32 value);
        partial void OnUserActivityPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserFK
        {
            get
            {
                return _UserFK;
            }
            set
            {
                OnUserFKChanging(value);
                ReportPropertyChanging("UserFK");
                _UserFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserFK");
                OnUserFKChanged();
            }
        }
        private Nullable<global::System.Int32> _UserFK;
        partial void OnUserFKChanging(Nullable<global::System.Int32> value);
        partial void OnUserFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActivityTime
        {
            get
            {
                return _ActivityTime;
            }
            set
            {
                OnActivityTimeChanging(value);
                ReportPropertyChanging("ActivityTime");
                _ActivityTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityTime");
                OnActivityTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActivityTime;
        partial void OnActivityTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnActivityTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActivityDescription
        {
            get
            {
                return _ActivityDescription;
            }
            set
            {
                OnActivityDescriptionChanging(value);
                ReportPropertyChanging("ActivityDescription");
                _ActivityDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActivityDescription");
                OnActivityDescriptionChanged();
            }
        }
        private global::System.String _ActivityDescription;
        partial void OnActivityDescriptionChanging(global::System.String value);
        partial void OnActivityDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_UserActivities_Users", "Users")]
        public User Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Mateus_wcModel.FK_UserActivities_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Mateus_wcModel.FK_UserActivities_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Mateus_wcModel.FK_UserActivities_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Mateus_wcModel.FK_UserActivities_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="UserInRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserInRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserInRole object.
        /// </summary>
        /// <param name="userInRolePK">Initial value of the UserInRolePK property.</param>
        /// <param name="userFK">Initial value of the UserFK property.</param>
        /// <param name="roleFK">Initial value of the RoleFK property.</param>
        public static UserInRole CreateUserInRole(global::System.Int32 userInRolePK, global::System.Int32 userFK, global::System.Int32 roleFK)
        {
            UserInRole userInRole = new UserInRole();
            userInRole.UserInRolePK = userInRolePK;
            userInRole.UserFK = userFK;
            userInRole.RoleFK = roleFK;
            return userInRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserInRolePK
        {
            get
            {
                return _UserInRolePK;
            }
            set
            {
                if (_UserInRolePK != value)
                {
                    OnUserInRolePKChanging(value);
                    ReportPropertyChanging("UserInRolePK");
                    _UserInRolePK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserInRolePK");
                    OnUserInRolePKChanged();
                }
            }
        }
        private global::System.Int32 _UserInRolePK;
        partial void OnUserInRolePKChanging(global::System.Int32 value);
        partial void OnUserInRolePKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserFK
        {
            get
            {
                return _UserFK;
            }
            set
            {
                OnUserFKChanging(value);
                ReportPropertyChanging("UserFK");
                _UserFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserFK");
                OnUserFKChanged();
            }
        }
        private global::System.Int32 _UserFK;
        partial void OnUserFKChanging(global::System.Int32 value);
        partial void OnUserFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleFK
        {
            get
            {
                return _RoleFK;
            }
            set
            {
                OnRoleFKChanging(value);
                ReportPropertyChanging("RoleFK");
                _RoleFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleFK");
                OnRoleFKChanged();
            }
        }
        private global::System.Int32 _RoleFK;
        partial void OnRoleFKChanging(global::System.Int32 value);
        partial void OnRoleFKChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_UsersInRoles_Roles", "Roles")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Mateus_wcModel.FK_UsersInRoles_Roles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Mateus_wcModel.FK_UsersInRoles_Roles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Mateus_wcModel.FK_UsersInRoles_Roles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("Mateus_wcModel.FK_UsersInRoles_Roles", "Roles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="WayOfRepresentation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WayOfRepresentation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WayOfRepresentation object.
        /// </summary>
        /// <param name="wayOfRepresentationPK">Initial value of the WayOfRepresentationPK property.</param>
        public static WayOfRepresentation CreateWayOfRepresentation(global::System.Int32 wayOfRepresentationPK)
        {
            WayOfRepresentation wayOfRepresentation = new WayOfRepresentation();
            wayOfRepresentation.WayOfRepresentationPK = wayOfRepresentationPK;
            return wayOfRepresentation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WayOfRepresentationPK
        {
            get
            {
                return _WayOfRepresentationPK;
            }
            set
            {
                if (_WayOfRepresentationPK != value)
                {
                    OnWayOfRepresentationPKChanging(value);
                    ReportPropertyChanging("WayOfRepresentationPK");
                    _WayOfRepresentationPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WayOfRepresentationPK");
                    OnWayOfRepresentationPKChanged();
                }
            }
        }
        private global::System.Int32 _WayOfRepresentationPK;
        partial void OnWayOfRepresentationPKChanging(global::System.Int32 value);
        partial void OnWayOfRepresentationPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_CompanyLegalRepresentative_WaysOfRepresentation", "LegalEntityLegalRepresentatives")]
        public EntityCollection<LegalEntityLegalRepresentative> LegalEntityLegalRepresentatives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntityLegalRepresentative>("Mateus_wcModel.FK_CompanyLegalRepresentative_WaysOfRepresentation", "LegalEntityLegalRepresentatives");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntityLegalRepresentative>("Mateus_wcModel.FK_CompanyLegalRepresentative_WaysOfRepresentation", "LegalEntityLegalRepresentatives", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_PhysicalEntities_WaysOfRepresentation", "PhysicalEntity")]
        public EntityCollection<PhysicalEntity> PhysicalEntities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_WaysOfRepresentation", "PhysicalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalEntity>("Mateus_wcModel.FK_PhysicalEntities_WaysOfRepresentation", "PhysicalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="WorkDone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkDone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkDone object.
        /// </summary>
        /// <param name="workDonePK">Initial value of the WorkDonePK property.</param>
        public static WorkDone CreateWorkDone(global::System.Int32 workDonePK)
        {
            WorkDone workDone = new WorkDone();
            workDone.WorkDonePK = workDonePK;
            return workDone;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkDonePK
        {
            get
            {
                return _WorkDonePK;
            }
            set
            {
                if (_WorkDonePK != value)
                {
                    OnWorkDonePKChanging(value);
                    ReportPropertyChanging("WorkDonePK");
                    _WorkDonePK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkDonePK");
                    OnWorkDonePKChanged();
                }
            }
        }
        private global::System.Int32 _WorkDonePK;
        partial void OnWorkDonePKChanging(global::System.Int32 value);
        partial void OnWorkDonePKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ToDoListFK
        {
            get
            {
                return _ToDoListFK;
            }
            set
            {
                OnToDoListFKChanging(value);
                ReportPropertyChanging("ToDoListFK");
                _ToDoListFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDoListFK");
                OnToDoListFKChanged();
            }
        }
        private Nullable<global::System.Int32> _ToDoListFK;
        partial void OnToDoListFKChanging(Nullable<global::System.Int32> value);
        partial void OnToDoListFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalEntityFK
        {
            get
            {
                return _LegalEntityFK;
            }
            set
            {
                OnLegalEntityFKChanging(value);
                ReportPropertyChanging("LegalEntityFK");
                _LegalEntityFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalEntityFK");
                OnLegalEntityFKChanged();
            }
        }
        private Nullable<global::System.Int32> _LegalEntityFK;
        partial void OnLegalEntityFKChanging(Nullable<global::System.Int32> value);
        partial void OnLegalEntityFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkTypeFK
        {
            get
            {
                return _WorkTypeFK;
            }
            set
            {
                OnWorkTypeFKChanging(value);
                ReportPropertyChanging("WorkTypeFK");
                _WorkTypeFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkTypeFK");
                OnWorkTypeFKChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkTypeFK;
        partial void OnWorkTypeFKChanging(Nullable<global::System.Int32> value);
        partial void OnWorkTypeFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkSubtypeFK
        {
            get
            {
                return _WorkSubtypeFK;
            }
            set
            {
                OnWorkSubtypeFKChanging(value);
                ReportPropertyChanging("WorkSubtypeFK");
                _WorkSubtypeFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkSubtypeFK");
                OnWorkSubtypeFKChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkSubtypeFK;
        partial void OnWorkSubtypeFKChanging(Nullable<global::System.Int32> value);
        partial void OnWorkSubtypeFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServiceTypeFK
        {
            get
            {
                return _ServiceTypeFK;
            }
            set
            {
                OnServiceTypeFKChanging(value);
                ReportPropertyChanging("ServiceTypeFK");
                _ServiceTypeFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceTypeFK");
                OnServiceTypeFKChanged();
            }
        }
        private Nullable<global::System.Int32> _ServiceTypeFK;
        partial void OnServiceTypeFKChanging(Nullable<global::System.Int32> value);
        partial void OnServiceTypeFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TimeSpent
        {
            get
            {
                return _TimeSpent;
            }
            set
            {
                OnTimeSpentChanging(value);
                ReportPropertyChanging("TimeSpent");
                _TimeSpent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeSpent");
                OnTimeSpentChanged();
            }
        }
        private Nullable<global::System.Int32> _TimeSpent;
        partial void OnTimeSpentChanging(Nullable<global::System.Int32> value);
        partial void OnTimeSpentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserFK
        {
            get
            {
                return _UserFK;
            }
            set
            {
                OnUserFKChanging(value);
                ReportPropertyChanging("UserFK");
                _UserFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserFK");
                OnUserFKChanged();
            }
        }
        private Nullable<global::System.Int32> _UserFK;
        partial void OnUserFKChanging(Nullable<global::System.Int32> value);
        partial void OnUserFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CreatedWithToDo
        {
            get
            {
                return _CreatedWithToDo;
            }
            set
            {
                OnCreatedWithToDoChanging(value);
                ReportPropertyChanging("CreatedWithToDo");
                _CreatedWithToDo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedWithToDo");
                OnCreatedWithToDoChanged();
            }
        }
        private Nullable<global::System.Boolean> _CreatedWithToDo;
        partial void OnCreatedWithToDoChanging(Nullable<global::System.Boolean> value);
        partial void OnCreatedWithToDoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_WorkDones_ServiceTypes", "ServiceType")]
        public ServiceType ServiceTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceType>("Mateus_wcModel.FK_WorkDones_ServiceTypes", "ServiceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceType>("Mateus_wcModel.FK_WorkDones_ServiceTypes", "ServiceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceType> ServiceTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceType>("Mateus_wcModel.FK_WorkDones_ServiceTypes", "ServiceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceType>("Mateus_wcModel.FK_WorkDones_ServiceTypes", "ServiceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_WorkDones_ToDoLists", "ToDoList")]
        public ToDoList ToDoLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ToDoList>("Mateus_wcModel.FK_WorkDones_ToDoLists", "ToDoList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ToDoList>("Mateus_wcModel.FK_WorkDones_ToDoLists", "ToDoList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ToDoList> ToDoListsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ToDoList>("Mateus_wcModel.FK_WorkDones_ToDoLists", "ToDoList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ToDoList>("Mateus_wcModel.FK_WorkDones_ToDoLists", "ToDoList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_WorkDones_Users", "Users")]
        public User Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Mateus_wcModel.FK_WorkDones_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Mateus_wcModel.FK_WorkDones_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Mateus_wcModel.FK_WorkDones_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Mateus_wcModel.FK_WorkDones_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_WorkDones_WorkSubtypes", "WorkSubtype")]
        public WorkSubtype WorkSubtypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkSubtype>("Mateus_wcModel.FK_WorkDones_WorkSubtypes", "WorkSubtype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkSubtype>("Mateus_wcModel.FK_WorkDones_WorkSubtypes", "WorkSubtype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkSubtype> WorkSubtypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkSubtype>("Mateus_wcModel.FK_WorkDones_WorkSubtypes", "WorkSubtype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkSubtype>("Mateus_wcModel.FK_WorkDones_WorkSubtypes", "WorkSubtype", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_WorkDones_WorkTypes", "WorkType")]
        public WorkType WorkTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkType>("Mateus_wcModel.FK_WorkDones_WorkTypes", "WorkType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkType>("Mateus_wcModel.FK_WorkDones_WorkTypes", "WorkType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkType> WorkTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkType>("Mateus_wcModel.FK_WorkDones_WorkTypes", "WorkType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkType>("Mateus_wcModel.FK_WorkDones_WorkTypes", "WorkType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="WorkDoneAttachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkDoneAttachment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkDoneAttachment object.
        /// </summary>
        /// <param name="workDoneAttachmentPK">Initial value of the WorkDoneAttachmentPK property.</param>
        public static WorkDoneAttachment CreateWorkDoneAttachment(global::System.Int32 workDoneAttachmentPK)
        {
            WorkDoneAttachment workDoneAttachment = new WorkDoneAttachment();
            workDoneAttachment.WorkDoneAttachmentPK = workDoneAttachmentPK;
            return workDoneAttachment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkDoneAttachmentPK
        {
            get
            {
                return _WorkDoneAttachmentPK;
            }
            set
            {
                if (_WorkDoneAttachmentPK != value)
                {
                    OnWorkDoneAttachmentPKChanging(value);
                    ReportPropertyChanging("WorkDoneAttachmentPK");
                    _WorkDoneAttachmentPK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkDoneAttachmentPK");
                    OnWorkDoneAttachmentPKChanged();
                }
            }
        }
        private global::System.Int32 _WorkDoneAttachmentPK;
        partial void OnWorkDoneAttachmentPKChanging(global::System.Int32 value);
        partial void OnWorkDoneAttachmentPKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkDoneFK
        {
            get
            {
                return _WorkDoneFK;
            }
            set
            {
                OnWorkDoneFKChanging(value);
                ReportPropertyChanging("WorkDoneFK");
                _WorkDoneFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkDoneFK");
                OnWorkDoneFKChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkDoneFK;
        partial void OnWorkDoneFKChanging(Nullable<global::System.Int32> value);
        partial void OnWorkDoneFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AttachmentFK
        {
            get
            {
                return _AttachmentFK;
            }
            set
            {
                OnAttachmentFKChanging(value);
                ReportPropertyChanging("AttachmentFK");
                _AttachmentFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttachmentFK");
                OnAttachmentFKChanged();
            }
        }
        private Nullable<global::System.Int32> _AttachmentFK;
        partial void OnAttachmentFKChanging(Nullable<global::System.Int32> value);
        partial void OnAttachmentFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_WorkDoneAttachments_WorkDoneAttachments", "Attachments")]
        public Attachment Attachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("Mateus_wcModel.FK_WorkDoneAttachments_WorkDoneAttachments", "Attachments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("Mateus_wcModel.FK_WorkDoneAttachments_WorkDoneAttachments", "Attachments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attachment> AttachmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("Mateus_wcModel.FK_WorkDoneAttachments_WorkDoneAttachments", "Attachments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attachment>("Mateus_wcModel.FK_WorkDoneAttachments_WorkDoneAttachments", "Attachments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="WorkSubtype")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkSubtype : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkSubtype object.
        /// </summary>
        /// <param name="workSubtypePK">Initial value of the WorkSubtypePK property.</param>
        public static WorkSubtype CreateWorkSubtype(global::System.Int32 workSubtypePK)
        {
            WorkSubtype workSubtype = new WorkSubtype();
            workSubtype.WorkSubtypePK = workSubtypePK;
            return workSubtype;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkSubtypePK
        {
            get
            {
                return _WorkSubtypePK;
            }
            set
            {
                if (_WorkSubtypePK != value)
                {
                    OnWorkSubtypePKChanging(value);
                    ReportPropertyChanging("WorkSubtypePK");
                    _WorkSubtypePK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkSubtypePK");
                    OnWorkSubtypePKChanged();
                }
            }
        }
        private global::System.Int32 _WorkSubtypePK;
        partial void OnWorkSubtypePKChanging(global::System.Int32 value);
        partial void OnWorkSubtypePKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkTypeFK
        {
            get
            {
                return _WorkTypeFK;
            }
            set
            {
                OnWorkTypeFKChanging(value);
                ReportPropertyChanging("WorkTypeFK");
                _WorkTypeFK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkTypeFK");
                OnWorkTypeFKChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkTypeFK;
        partial void OnWorkTypeFKChanging(Nullable<global::System.Int32> value);
        partial void OnWorkTypeFKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_WorkSubtypes_WorkTypes", "WorkTypes")]
        public WorkType WorkType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkType>("Mateus_wcModel.FK_WorkSubtypes_WorkTypes", "WorkTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkType>("Mateus_wcModel.FK_WorkSubtypes_WorkTypes", "WorkTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkType> WorkTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkType>("Mateus_wcModel.FK_WorkSubtypes_WorkTypes", "WorkTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkType>("Mateus_wcModel.FK_WorkSubtypes_WorkTypes", "WorkTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_WorkDones_WorkSubtypes", "WorkDones")]
        public EntityCollection<WorkDone> WorkDones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkDone>("Mateus_wcModel.FK_WorkDones_WorkSubtypes", "WorkDones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkDone>("Mateus_wcModel.FK_WorkDones_WorkSubtypes", "WorkDones", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mateus_wcModel", Name="WorkType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkType object.
        /// </summary>
        /// <param name="workTypePK">Initial value of the WorkTypePK property.</param>
        public static WorkType CreateWorkType(global::System.Int32 workTypePK)
        {
            WorkType workType = new WorkType();
            workType.WorkTypePK = workTypePK;
            return workType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkTypePK
        {
            get
            {
                return _WorkTypePK;
            }
            set
            {
                if (_WorkTypePK != value)
                {
                    OnWorkTypePKChanging(value);
                    ReportPropertyChanging("WorkTypePK");
                    _WorkTypePK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkTypePK");
                    OnWorkTypePKChanged();
                }
            }
        }
        private global::System.Int32 _WorkTypePK;
        partial void OnWorkTypePKChanging(global::System.Int32 value);
        partial void OnWorkTypePKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_WorkSubtypes_WorkTypes", "WorkSubtypes")]
        public EntityCollection<WorkSubtype> WorkSubtypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkSubtype>("Mateus_wcModel.FK_WorkSubtypes_WorkTypes", "WorkSubtypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkSubtype>("Mateus_wcModel.FK_WorkSubtypes_WorkTypes", "WorkSubtypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mateus_wcModel", "FK_WorkDones_WorkTypes", "WorkDones")]
        public EntityCollection<WorkDone> WorkDones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkDone>("Mateus_wcModel.FK_WorkDones_WorkTypes", "WorkDones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkDone>("Mateus_wcModel.FK_WorkDones_WorkTypes", "WorkDones", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
